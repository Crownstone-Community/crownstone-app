interface BluenetPromiseWrapper {
  clearTrackedBeacons(): Promise<void>,
  isReady(): Promise<void>,
  connect(handle: string): Promise<void>,
  disconnect(): Promise<void>,
  phoneDisconnect(): Promise<void>,
  setSwitchState(state: number, timeout: number, intent: string): Promise<void>,
  keepAliveState(changeState : boolean, state : number, timeout: number): Promise<void>,
  keepAlive(): Promise<void>,
  getMACAddress(): Promise<string>,
  setupCrownstone(dataObject): Promise<void>,
  setSettings(dataObject): Promise<void>,
  requestLocation(): Promise<any>,
  recover(handle: string): Promise<void>,
  finalizeFingerprint(sphereId: string, locationId: string): Promise<void>,
  commandFactoryReset(): Promise<void>,
  meshKeepAlive(): Promise<void>,
  meshKeepAliveState(timeout: number, stoneKeepAlivePackets: any): Promise<void>,
  meshCommandSetSwitchState(arrayOfIds : number[], state : number, intent: string): Promise<void>,
  multiSwitch(arrayOfStoneSwitchPackets: any[]): Promise<void>,
}