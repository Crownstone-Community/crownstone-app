export default {
  ActivityLog:{
    __filename: "../js/views/overlays/WhatsNew/2.2.0/ActivityLog.tsx",
    Activity_Log_:                       function() { return "Activity Log!" },
    Ever_wonder_why_a_Crownst:           function() { return "Ever wonder why a Crownstone switched? Why is it on?\n\n" + "In the new Activity Log, you can see exactly why this is!\n\n" + "You can find the new log in the Crownstone settings (by tapping on a Crownstone icon in a room) and navigating to the right.\n\n" },
  },
  ActivityLogItem:{
    __filename: "../js/views/deviceViews/elements/activityLog/ActivityLogItem.tsx",
    You:                                 function() { return "Jij" },
    on:                                  function() { return "Aan" },
    off:                                 function() { return "Uit" },
    Someone_else:                        function() { return "Iemand anders" },
    Switched_:                           function() { return "Switched " }, // todo
    Dimmed_to_:                          function() { return "Gedimd naar " },
    Already_:                            function() { return "Already " }, // todo
    _for_a_scheduled_action_:            function() { return " voor een geplande actie." },
    _for_schedule______:                 function() { return " voor een gepland \"" + arguments[0] + "\"." },
    __but_it_was_cancelled_by:           function() { return ", maar het werd geannuleerd door latere gebeurtenis." },
    Heartbeat_:                          function() { return "Hartslag." },
    Tap_to_Toggle__:                     function() { return "Tik om te schakelen: " },
    _Schedule:                           function() { return " Plan" },
    _heartbeats_:                        function() { return " Hartslagen." },
    Youre_out_of_range_:                 function() { return "Je bent buiten bereik." },
    You_went_away_:                      function() { return "Je bent weggegaan." },
    You_left_the_:                       function() { return "Je hebt de  " + arguments[0] + 'verlaten.'},
    Someone_left_the_:                   function() { return "Iemand heeft de " + arguments[0] + 'verlaten.'},
    Someone_left_the_Sphere_:            function() { return "Iemand heeft de Sphere verlaten." },
    Someone_is_away_:                    function() { return "Iemand is weg." },
    You_entered_the_Sphere_:             function() { return "You entered the Sphere." }, // todo
    You_are_near_:                       function() { return "Je bent dichtbij." },
    You_entered_the_:                    function() { return "Je bent binnengekomen in de" + arguments[0] + '.'},
    Someone_entered_the_Spher:           function() { return "Someone entered the Sphere." }, //todo
    Someone_is_near_:                    function() { return "Iemand is dichtbij." },
    Someone_entered_the_:                function() { return "Iemand is binnengekomen in de " + arguments[0] },
    Switch_:                             function() { return "Switch." },
    Entered_the_Sphere_:                 function() { return "Entered the Sphere." },
    Left_the_Sphere_:                    function() { return "Left the Sphere." },
    Entered_room_:                       function() { return "Betreed de ruimte." },
    Moved_near_:                         function() { return "Dichterbij geplaatst." },
    Left_the_room_:                      function() { return "Heeft de kamer verlaten." },
    Moved_away_:                         function() { return "Weggelopen." },
    _told_another_Crownstone_:           function() { return arguments[0] + " vertelde een andere Crownstone dat hij niet moet veranderen als er geen hartslagen meer binnen komen." },
    _told_another_Crownstone_switch:     function() { return arguments[0] + " vertelde een andere Crownstone om " + arguments[1] + " na deze " + arguments[2] + " minuten als er geen hartslagen meer binnen komen."},
    It_will_not_change_if_no_:           function() { return "Zal niet veranderen als er geen hartslagen meer binnen komen." },
    It_will_change_if_no_:               function() { return "Het zal veranderen " + arguments[0] + " nar " + arguments[1] + " minuten, als er geen hartslagen meer binnen komen."; },
    _held_the_phone_so_close_:           function() { return arguments[0] + ' hield de telefoon zo dichtbij de Crownstone dat het ' + arguments[1] + ' het Tap-to-Toggle in werking heeft gezet!' },
    _heartbeats_once_every_:             function() { return arguments[0] + " hartslagen iedere " + arguments[1] + " seconden." },
    Im_still__because_there_a:           function() { return "Ik ben nog steeds " + arguments[0] + " omdat er nog steeds anderen in de sfeer zijn." }, //todo
    Last_heartbeat_sent_at_:             function() { return "Laatste hartslag verzonden om " + arguments[0] + ".";},
    ___because_everyone_left_:           function() { return arguments[0] + arguments[1] + " % omdat iedereen de sfeer heeft verlaten." }, //todo
    _because_everyone_left_th:           function() { return arguments[0] + arguments[1] + " omdat iedereen de sfeer heeft verlaten." }, //todo
    Sphere_heartbeat_expired_:           function() { return "Sphere heartbeat expired." }, // TODO:
    Thereby_cancelling_the_pr:           function() { return "Heeft het vorige commando geannuleerd." },
    The_Crownstone_switched_:            function() { return "De Crownstone heeft " + arguments[0] + "omgedraaid."},
    Dimmed_to_arg:                       function() { return "Gedimd naar " + arguments[0] + "%."},
    _told_another_Crownstone_after:      function() { return arguments[0] + " vertelde een andere Crownstone om te ruilen, namespace" + arguments[1] + "daarna" }, // TODO:
    _told_this_Crownstone_after:         function() { return arguments[0] + " vertelde een Crownstone om deze te ruilen na" + arguments[1] + " minuten." },
    _minutes:                            function() { return arguments[0] + " minuten" },
    _seconds:                            function() { return arguments[0] + " seconden" },
    _because_everyone_is_away:           function() { return arguments[0] + arguments[1] + " omdat iederen te ver weg is van deze Crownstone." },
    ___because_everyone_is_away:         function() { return arguments[0] + arguments[1] + " % omdat iedereen weg is bij deze Crownstone." },
    _because_everyone_left_room:         function() { return arguments[0] + arguments[1] + " omdat iedereen de " + arguments[2] + ' heeft verlaten.' },
    _because_everyone_left_dim_room:     function() { return arguments[0] + arguments[1] + " % omdat iedereen de " + arguments[2] + ' heeft verlaten.' },
  },
  ActivityLogStatusIndicator:{
    __filename: "../js/views/deviceViews/elements/activityLog/ActivityLogStatusIndicator.tsx",
    Im_in_range_:                        function() { return "Ik ben binnen bereik!" },
  },
  AddItemsToSphere:{
    __filename: "../js/views/main/AddItemsToSphere.tsx",
    _Adding_a_Crownstone__Plu_header:    function() { return "Voeg een Crownstone toe." },
    _Adding_a_Crownstone__Plu_body:      function() { return "Plug de Crownstone in hou je telefoon er dichtbij (raak hem aan). " + "Het zal automatisch verschijnen in het hoofdoverzicht. Ik breng je daar nu naartoe." + "\n\nJe hoeft niet op deze knop te drukken voor elke Crownstone die je toevoegt :)." },
    _Adding_a_Crownstone__Plu_left:      function() { return "Koop" },
    _Adding_a_Crownstone__Plu_right:     function() { return "Ok√©" },
    Room:                                function() { return "Kamer" },
    Crownstone:                          function() { return "Crownstone" },
    Person:                              function() { return "Persoon" },
    Something_else_:                     function() { return "Iets anders!" },
    Add_to_your_Sphere:                  function() { return "Voeg toe aan je sfeer" }, //todo
    You_can_add_Rooms__People:           function() { return "Je kan kamers, mensen of Crownstones aan je sfeer toevoegen. Alle apparaten die gesynchroniseerd zijn met de Crownstone zullen hier ook verschijnen.\n\nWhat do you want to add?" }, //todo
    Add_to_Sphere:                       function() { return "Add to Sphere" },
  },
  AiStart:{
    __filename: "../js/views/startupViews/AiStart.tsx",
    _Ehmm_____arguments_______header:    function() { return "Ehmm " + arguments[0] + ".. :(" },
    _Ehmm_____arguments_______body:      function() { return "Ik zou graag een naam willen hebben. Zou je me er een willen geven?" },
    _Ehmm_____arguments_______left:      function() { return "Direct!" },
    arguments___arguments___n_header:    function() { return arguments[0] },
    arguments___arguments___n_body:      function() { return arguments[0] },
    Name_your_house_:                    function() { return "Geef je huis een naam!" },
    Thank_you_:                          function() { return "Dankjewel!" },
    Its_nice_to_finally_meet_:           function() { return "Fijn je eindelijk te ontmoeten!" },
    Lets_get_started_:                   function() { return "Laten we beginnen!" },
    I_think_my_name_and_gende:           function() { return "Ik voel me een nieuw persoon!" },
    Youre_right_:                        function() { return "Je hebt gelijk!" },
    This_name_is_much_better_:           function() { return "Deze naam is veel beter, goeie keuze!" },
    It_suits_you_:                       function() { return "Het past bij je!" },
    Youre_right__I_feel_much_:           function() { return "Je hebt gelijk! Ik voel me veel beter als een " + (arguments[0] ? "man" : "vrouw") + "!" },
    I_thought_so_too_:                   function() { return "Dat dacht ik ook!" },
    Im_a_like_whole_new_perso:           function() { return "Ik voel me een nieuw persoon! Hi! Leuk je te ontmoeten." },
    Nice_to_meet_you_too_:               function() { return "Leuk om je te ontmoeten!" },
    Welcome__:                           function() { return "Welkom " + arguments[0] + "!" },
    Im_your_house_:                      function() { return "Ik ben jouw huis!" },
    What_would_you_like_to_ca:           function() { return "Hoe zou je me willen noemen?" },
    Whats_my_gender_:                    function() { return "Wat is mijn geslacht?" },
    OK:                                  function() { return "Ok√©" },
    Your_AI:                             function() { return "Jouw AI" },
  },
  AnimatedDoubleTap:{
    __filename: "../js/views/components/animated/AnimatedDoubleTap.tsx",
    __x__:                               function() { return "1 x.." },
    __x_:                                function() { return "2 x!" },
  },
  ApplianceAdd:{
    __filename: "../js/views/deviceViews/ApplianceAdd.tsx",
    _Device_name_must_be_at_l_header:    function() { return "De naam van een apparaat moet minimaal 1 karakter lang zijn." },
    _Device_name_must_be_at_l_body:      function() { return "Wijzig de naam alsjeblieft en probeer het daarna opnieuw." },
    _Device_name_must_be_at_l_left:      function() { return "Ok√©" },
    _Encountered_Cloud_Issue__header:    function() { return "Er is een Cloud-probleem opgetreden." },
    _Encountered_Cloud_Issue__body:      function() { return "We kunnen geen apparaat in de cloud toevoegen. Probeer het later opnieuw." },
    _Encountered_Cloud_Issue__left:      function() { return "Ok√©" },
    Create:                              function() { return "Cre√´ren" },
    NEW_DEVICE:                          function() { return "NIEW APPARAAT" },
    Type_Name:                           function() { return "Voer naam in" },
    Icon:                                function() { return "Icoon" },
    The_properties_of_device_:           function() { return "De eigenschappen van dit type apparaat wordt gedeeld door alle Crownstones, waar dit apparaat op is aangesloten. Het gedrag van het apparaattype overheerst het Crownstone-gedrag." },
    Add_Device_Type:                     function() { return "Voeg een apparaat toe" },
  },
  ApplianceEntry:{
    __filename: "../js/views/components/ApplianceEntry.tsx",
    _current_:                           function() { return "(huidige)" },
  },
  ApplianceSelection:{
    __filename: "../js/views/deviceViews/ApplianceSelection.tsx",
    _Are_you_sure___We_will_b_header:    function() { return "Weet je het zeker?" },
    _Are_you_sure___We_will_b_body:      function() { return "We zullen automatisch \"" + arguments[0] + "\" verwijderen van elke Crownstones." },
    _Are_you_sure___We_will_b_left:      function() { return "Annuleren" },
    _Are_you_sure___We_will_b_right:     function() { return "Verwijder" },
    _Encountered_Cloud_Issue__header:    function() { return "Er is een Cloud-probleem opgetreden." },
    _Encountered_Cloud_Issue__body:      function() { return "We kunnen dit apparaat niet in de cloud verwijderen. Probeer het later opnieuw." },
    _Encountered_Cloud_Issue__left:      function() { return "Ok√©" },
    ALL_DEVICES:                         function() { return "ALLE APPARATEN" },
    ADD_DEVICE_TYPES:                    function() { return "APPARAATTYPEN TOEVOEGEN" },
    Add_a_device_type:                   function() { return "Voeg een type apparaat toe" },
    No_device_type_assigned:             function() { return "Geen type  apparaat toegewezen" },
    Select_Device_Type:                  function() { return "Selecteer type apparaat" },
  },
  AppUtil: {
    __filename: "../js/util/AppUtil",
    Preparing_for_download___:           function() { return "Voorbereiden voor download ..." },
    Clearing_database___:                function() { return "Database wissen ..." },
    Getting_new_data___:                 function() { return "Nieuwe gegevens ophalen ..." },
    Finalizing___:                       function() { return "Afronden..." },
    App_will_close_in___secon:           function() { return "De app wordt gesloten in " + arguments[0] + " seconden.\nHeropen de app opnieuw om het proces te voltooien." },
    Data_reset_failed___:                function() { return "Data reset mislukt..." },
    Something_went_wrong_in_t:           function() { return "Er is iets misgegaan bij het resetten van de data. De beste manier om dit op te lossen, is om de app van je telefoon te verwijderen, deze opnieuw te installeren en je aan te melden bij je account" },
    OK:                                  function() { return "Ok√©" },
    Logging_out_and_closing_a:           function() { return "Afmelden en afsluiten..." },
  },
  AutomaticRecentering:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/AutomaticRecentering.tsx",
    If_you_scroll_too_far_in_:           function() { return "Als je te ver scrolt in het sfeeroverzicht, zal ik je weergave centreren en de sneltoets voor dubbele tik weergeven!" },
  },
  Awesome:{
    __filename: "../js/views/overlays/WhatsNew/Awesome.tsx",
    Thats_it_for_this_update_:           function() { return "Dit is het voor deze update!" },
    Enjoy_the_new_version_:              function() { return "Geniet van de nieuwe versie!" },
    Thanks_:                             function() { return "Bedankt!" },
  },
  BatteryImprovements:{
    __filename: "../js/views/overlays/WhatsNew/2.0.0/BatteryImprovements.tsx",
    Battery_Improvements_:               function() { return "Batterij verbeteringen!" },
    The_Crownstone_app_will_n:           function() { return "De Crownstone-app verbruikt nu minder ernergie op de achtergrond voor de lokalisatiefuncties! Hoe meer Crownstones je hebt, hoe effici√´nter het wordt! "},
  },
  BugsFixedAndroid:{
    __filename: "../js/views/overlays/WhatsNew/2.1.2/BugsFixedAndroid.tsx",
    Bug_fixes_:                          function() { return "Bug fixes." },
    __Fixed_bug_that_caused_i:           function() { return "- Bug verholpen waardoor interne lokalisatie niet werkte.\n\n" + "- Dichtbij/ver weg triggers problemen verholpen.\n\n" + "-  Omschakelen als hub fix." },
  },
  BugsFixedAndroid1_10_2:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/BugsFixedAndroid1.10.2.tsx",
    Issues_that_caused_the_ap:           function() { return "De problemen die ervoor zorgden dat de app crashte toen de firmware-update was voltooid, zijn nu opgelost." },
    You_can_safely_update_all:           function() { return "Je kunt nu veilig alle Crownstones bijwerken :)" },
  },
  BugsFixediOS1_10_2:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/BugsFixediOS1.10.2.tsx",
    Many_other_issues_have_be:           function() { return "Bij deze update zijn veel problemen opgelost:" },
    __You_can_invite_members_:           function() { return "- U kunt leden en gasten uitnodigen naar uw Sphere zonder problemen." + "\n\n- Batterijbesparing verbeterd wanneer geen lokalisatie wordt gebruikt.." + "\n\n- Probleem opgelost waarbij de app niet in sfeer zou verschijnen binnen bereik zijn van uw Crownstones." + "\n\n- Geanimeerde gebruiker die van kamer naar kamer gaat." },
  },
  CameraRollView:{
    __filename: "../js/views/cameraViews/CameraRollView.tsx",
    _I_do_not_have_access_to__header:    function() { return "Ik heb geen toegang tot jouw foto's ..." },
    _I_do_not_have_access_to__body:      function() { return "Je kunt me toegang geven door naar de instellingen op je telefoon te gaan, Crownstone te selecteren en de beeldrechten in te schakelen." },
    _I_do_not_have_access_to__left:      function() { return "Ok√©" },
    Choose_a_Picture:                    function() { return "Kies een foto." },
  },
  CancelButton:{
    __filename: "../js/views/components/topbar/CancelButton.tsx",
    Cancel:                              function() { return "Annuleren" },
  },
  CloudChoice:{
    __filename: "../js/views/startupViews/CloudChoice.tsx",
    PLEASE_SELECT:                       function() { return "SELECTEER ALSTUBLIEFT" },
    Use_the_Cloud_to_store_da:           function() { return "Gebruik de cloud om gegevens op te slaan." },
    The_cloud_is_used_to_allo:           function() { return "De cloud wordt gebruikt om meerdere gebruikers je Crownstones te laten gebruiken. Crownstones, sfeeren en kamers worden opgeslagen in de cloud en worden op verschillende apparaten gesynchroniseerd." },
    Only_store_data_on_your_p:           function() { return "Sla alleen gegevens op uw telefoon op." },
    If_you_are_the_only_user_:           function() { return "Als u de enige gebruiker bent, kunt u alles lokaal uitvoeren. Als u uw app verwijdert, moet u al uw Crownstones fysiek opnieuw instellen."},
  },
  DeviceActivityLog:{
    __filename: "../js/views/deviceViews/elements/DeviceActivityLog.tsx",
    Syncing_with_the_other_us:           function() { return "Synchroniseren met de andere gebruikers ..." },
    Activity_Log:                        function() { return "Activiteiten logboek." },
    In_this_log_you_can_see_w:           function() { return "In dit logboek kunt u zien waarom de Crownstone is overgeschakeld. De nieuwste items staan ‚Äã‚Äãbovenaan. Deze gegevens worden 24 uur bewaard." },
    If_you_do_not_share_your_:           function() { return "Als u uw activiteitenlogboeken niet deelt, ontvangen andere gebruikers in jouw sfeer mogelijk een onjuist activiteitenlogboek." },
    Nothing_yet___:                      function() { return "Nog niets..." },
    Only_members_and_admins_c:           function() { return "Alleen leden en beheerders kunnen de activiteitenlogboeken bekijken ..." },
  },
  DeviceBehaviour:{
    __filename: "../js/views/deviceViews/elements/DeviceBehaviour.tsx",
    When_you_enter_the_Sphere:           function() { return "Als je de sfeer binnengaat"},
    When_you_leave_the_Sphere:           function() { return "Als je de sfeer verlaat"},
    When_you_enter_the_Room:             function() { return "Als je de ruimte betreedt"},
    When_you_leave_the_Room:             function() { return "Als je de ruimte verlaat"},
    When_you_get_near_to_Me:             function() { return "Als je in de buurt van mij komt"},
    When_you_move_away_from_M:           function() { return "Als je verder weg loopt"},
    This_Crownstone_is_locked:           function() { return "Deze Crownstone is vergrendeld, dus het gedrag is ook uitgeschakeld." },
    Behaviour_is_disabled_in_:           function() { return "Gedrag is uitgeschakeld in de app-instellingen. Schakel lokalisatie opnieuw in om het gedrag te gebruiken." },
    Heartbeat_is_disabled_in_:           function() { return "Hartslagen zijn uitgeschakeld in de app-instellingen. Schakel de hartskagen opnieuw in om het exit-gedrag te gebruiken." },
    Near_away_is_disabled_unt:           function() { return "Ver weg / Dichtbij is uitgeschakeld tot je definieert waar dichtbij is. Druk bovenaan op 'veranderen' om dit nu te doen." },
    Behaviour:                           function() { return "Gedrag" },
    This_is_how_I_respond_to_:           function() { return "Dit is hoe ik reageer op je locatie:"},
    I_will_:                             function() { return arguments[0] || "Ik zal " },
    only_:                               function() { return "alleen" },
    _TURN_ON:                            function() { return "AAN GAAN" },
    _if_it_is_dark_outside_:             function() { return "als het buiten donker is." },
    TURN_ON:                             function() { return "AAN GAAN" }, //todo AANZETTEN??
    TURN_OFF:                            function() { return "UITSCHAKELEN" },
    I_wont_do_anything___:               function() { return "Ik zal niets doen ..."},
  },
  DeviceBehaviourEdit:{
    __filename: "../js/views/deviceViews/DeviceBehaviourEdit.tsx",
    _Near_behaviour_disabled__header:    function() { return "Dichtbij gedrag uitgeschakeld: je moet eerst het bereik defini√´ren." }, //todo vertaling dichtbij? ver weg. etc.
    _Near_behaviour_disabled__body:      function() { return "Je hebt gedrag gedefinieerd omdat je in de buurt bent en/of weggaat in de buurt van een Crownstone. Deze functie is uitgeschakeld totdat je definieert wat 'dichtbij' is. Gebruik hiervoor de blauwe knop." },
    _Near_behaviour_disabled__left:      function() { return "Later" },
    _Near_behaviour_disabled__right:     function() { return "Ok√©" },
    _Im_not_sure_yet_____I_co_header:    function() { return "Ik weet het nog niet zeker..." },
    _Im_not_sure_yet_____I_co_body:      function() { return "Ik kan niet genoeg punten verzamelen. Zou je het opnieuw kunnen proberen?" },
    _Im_not_sure_yet_____I_co_left:      function() { return "Ok√©" },
    _Great___Ill_make_sure_to_header:    function() { return "Fantastisch!" },
    _Great___Ill_make_sure_to_body:      function() { return "Ik zal reageren wanneer je binnen dit bereik bent! Als je naar buiten gaat en weer teruggaat, zul je vanzelf mijn reactie zien!" },
    _Great___Ill_make_sure_to_left:      function() { return "Ok√©" },
    _How_near_is_near___You_c_header:    function() { return "Hoe dicht is in de buurt?" }, //todo
    _How_near_is_near___You_c_body:      function() { return "Je kunt het schakelpunt tussen dichtbij en veraf kiezen! Nadat je op ok√© hebt gedrukt, heb je 5 seconden om je telefoon op de plaats te houden waar deze gewoonlijk is (in uw zak?)"},
    _How_near_is_near___You_c_left:      function() { return "Annuleren" },
    _How_near_is_near___You_c_right:     function() { return "Ok√©" },
    turn_on:                             function() { return "aanzetten" },
    turn_off:                            function() { return "uitschakelen" },
    do_nothing:                          function() { return "niets doen" },
    __seconds:                           function() { return "2 seconden" },
    ___seconds:                          function() { return "30 seconden" },
    __minute:                            function() { return "1 minuut" },
    __minutes:                           function() { return "5 minuut" },
    ___minutes:                          function() { return "30 minuut" },
    turn_on_after_:                      function() { return "Ga aan na " +  " "},
    turn_off_after_:                     function() { return "Ga uit na " + arguments[0] },
    turn_on_with_delay:                  function() { return "inschakelen met vertraging" },
    turn_off_with_delay:                 function() { return "uitschakelen met vertraging" },
    WHEN_YOU____:                        function() { return "ALS JE ..." },
    Leaving_the_sphere_will_b:           function() { return "Het verlaten van de sfeer wordt geactiveerd" + arguments [0] + "na het verlaten van de sfeer. Je kunt dit aanpassen in de sfeer-instellingen." },
    You_need_to_define_the_ne:           function() { return "Je moet het 'dichtbij' bereik defini√´ren voordat u deze functie kunt gebruiken." }, //todo dichtbij?
    If_there_are_people__from:           function() { return "Als er mensen (vanuit uw sfeer) in de ruimte zijn, worden het binnenkomst- en/of verlaat-gedrag niet geactiveerd." }, //todo
    Since_this_Crownstone_is_:           function() { return "Omdat deze Crownstone niet in een kamer is, kunnen we het geen gedrag aansturen bij het binnenkomen of verlaten van de kamer." },
    EXCEPTIONS:                          function() { return "UITZONDERINGEN" },
    Only_turn_on_if_it_s_dark:           function() { return "Alleen inschakelen als het buiten donker is"},
    Today__for_this_Sphere__i:           function() { return "Vandaag, in deze sfeer, is het buiten donker van" + arguments [0] + "tot" + arguments [1] + "'s ochtends'." },
    More_delay_options_will_b:           function() { return "Meer vertragings-mogelijkheden worden ingeschakeld wanneer de firmware van deze Crownstone wordt bijgewerkt, je ontvangt een melding wanneer dit mogelijk is." },
    More_delay_options_will_be:          function() { return "Meer vertragings-mogelijkheden worden ingeschakeld wanneer de firmware van deze Crownstone wordt ge√Ødentificeerd. Dit wordt automatisch gedaan, kom later nog eens terug." },
    Define_the___near___dista:           function() { return "Definieer de \"dichtbij\" afstand" }, //todo
    Tap_here_to_define___near:           function() { return "Tik hier om \"in de buurt van\" te defini√´ren" },
    Behaviour:                           function() { return "Gedrag" },
  },
  DeviceEdit:{
    __filename: "../js/views/deviceViews/DeviceEdit.tsx",
    _Permission_Required__Onl_header:    function() { return "Toestemming vereist"},
    _Permission_Required__Onl_body:      function() { return "Alleen beheerders hebben toestemming om dimmen op een Crownstone in te schakelen." },
    _Permission_Required__Onl_left:      function() { return "Ok√©" },
    _Are_you_sure___Removing__header:    function() { return "Weet je het zeker?" },
    _Are_you_sure___Removing__body:      function() { return "Het verwijderen van een Crownstone uit de sfeer zal de Crownstone herstellen naar de fabrieksinstellingen." },
    _Are_you_sure___Removing__left:      function() { return "Annuleren" },
    _Are_you_sure___Removing__right:     function() { return "Verwijderen" },
    _Cant_see_this_one___We_c_header:    function() { return "Ik kan deze niet zien!" },
    _Cant_see_this_one___We_c_body:      function() { return "We kunnen deze Crownstone niet vinden tijdens het scannen. Wil je het dichterbij de Crownstone opnieuw proberen? Als je de Crownstone wil verwijderen uit je sfeer zonder de Crownstone te resetten, druk dan toch op Delete." },
    _Cant_see_this_one___We_c_left:      function() { return "Verwijderen" }, //todo delete anyway? anyway??
    _Cant_see_this_one___We_c_right:     function() { return "Annuleren" },
    _Encountered_Cloud_Issue__header:    function() { return "Er is een Cloud-probleem opgetreden." },
    _Encountered_Cloud_Issue__body:      function() { return "We kunnen deze Crownstone niet verwijderen uit de cloud. Probeer het later opnieuw."},
    _Encountered_Cloud_Issue__left:      function() { return "Ok√©" },
    _Encountered_a_problem____header:    function() { return "Er is een probleem opgetreden." },
    _Encountered_a_problem____body:      function() { return "We kunnen deze Crownstone niet herstellen naar de fabrieksinstellingen, omdat hij al uit de cloud is verwijderd." + "Probeer de Crownstone opnieuw te verwijderen of gebruik de fabrieksinstellingen om de Crownstone in de setup-modus te zetten." },
    _Encountered_a_problem____left:      function() { return "Ok√©" },
    _Encountered_Cloud_Issue___header:   function() { return "Er is een Cloud-probleem opgetreden." },
    _Encountered_Cloud_Issue___body:     function() { return "We kunnen deze Crownstone niet verwijderen uit de cloud. Probeer het later opnieuw"},
    _Encountered_Cloud_Issue___left:     function() { return "Ok√©" },
    _Success__arguments___OKn_header:    function() { return "Gelukt!" },
    _Success__arguments___OKn_body:      function() { return arguments[0] },
    _Success__arguments___OKn_left:      function() { return "Ok√©" },
    _Crownstone_Locked__You_h_header:    function() { return "Crownstone vergrendeld"},
    _Crownstone_Locked__You_h_body:      function() { return "Je moet de Crownstone ontgrendelen v√≥√≥r" + (arguments [0]? "Inschakelen": "uitschakelen") + "het dimmen." },
    _Crownstone_Locked__You_h_left:      function() { return "Ok√©" },
    _Cant_see_this_Crownstone_header:    function() { return "Ik kan deze Crownstone niet zien!" },
    _Cant_see_this_Crownstone_body:      function() { return "Je moet binnen het bereik zijn van de Crownstone v√≥√≥r je " + (arguments[0] ? "inschakelen" : "uitschakelen") + " kunt dimmen." },
    _Cant_see_this_Crownstone_left:      function() { return "Ok√©" },
    _Im_sorry_____I_couldnt_d_header:    function() { return "Het spijt me..." },
    _Im_sorry_____I_couldnt_d_body:      function() { return "Ik kan het dimmen niet uitschakelen op deze Crownstone. Probeer het dichterbij opnieuw." },
    _Im_sorry_____I_couldnt_d_left:      function() { return "Ok√©" },
    _Im_sorry_____I_couldnt_e_header:    function() { return "Het spijt me..." },
    _Im_sorry_____I_couldnt_e_body:      function() { return "Ik kan het dimmen niet inschakelen op deze Crownstone. Probeer het dichterbij opnieuw." },
    _Im_sorry_____I_couldnt_e_left:      function() { return "Ok√©" },
    _Cant_see_this_Crownstone__header:   function() { return "Ik kan deze Crownstone niet zien!" },
    _Cant_see_this_Crownstone__body:     function() { return "You have to be in range of Crownstone before " + (arguments[0] ? "enabling" : "disabling") + " Switchcraft." },//todo
    _Cant_see_this_Crownstone__left:     function() { return "Ok√©" },
    _Im_sorry_____I_couldnt_c_header:    function() { return "Het spijt me..." },
    _Im_sorry_____I_couldnt_c_body:      function() { return "Ik kan Switchcraft niet configureren op deze Crownstone. Probeer het dichterbij opnieuw." },
    _Im_sorry_____I_couldnt_c_left:      function() { return "Ok√©" },
    _Cant_see_this_stone___I__header:    function() { return "Ik kan deze Crownstone niet zien!" },
    _Cant_see_this_stone___I__body:      function() { return"Ik moet binnen bereik zijn om de firwmare-versie van deze Crownstone te krijgen." },
    _Cant_see_this_stone___I__left:      function() { return "Ok√©" },
    _Whoops___I_could_not_get_header:    function() { return "Oeps!" },
    _Whoops___I_could_not_get_body:      function() { return "Ik kan de firmwareversie niet zien ...."},
    _Whoops___I_could_not_get_left:      function() { return "Ok√©" },
    _Whoops___I_could_not_get__header:   function() { return "Oeps!" },
    _Whoops___I_could_not_get__body:     function() { return "Ik kan de hardwareversie niet zien ...."},
    _Whoops___I_could_not_get__left:     function() { return "Ok√©" },
    Save:                                function() { return "Opslaan" },
    PLUGGED_IN_DEVICE_TYPE:              function() { return "INGEPLUGD APPARAAT TYPE"},
    Device_Type:                         function() { return "Apparaat Type" },
    Icon:                                function() { return "Icoon" },
    Decouple_Device_Type:                function() { return "Ontkoppel apparaat type" },
    This_Crownstone_is_curren:           function() { return "Deze Crownstone gebruikt momenteel het gedrag, de naam en het pictogram van dit apparaattype. Ontkoppelen zal het gedrag terugzetten naar de lege Crownstone-configuratie." },
    CURRENT_CROWNSTONE_USING_:           function() { return "CROWNSTONE DIE DIT TYPE GEBRUIKT." },
    CROWNSTONE:                          function() { return "CROWNSTONE" },
    Name:                                function() { return "Naam." },
    Allow_Dimming:                       function() { return "Sta dimmen toe." },
    View_Dimming_Compatibilit:           function() { return "Dimmingscompatibiliteit bekijken." },
    Dimming_can_be_enabled_pe:           function() { return "Dimmen kan worden ingeschakeld per Crownstone. Het is aan jou om ervoor te zorgen dat je niet iets anders dan lichten dimt, dit gebeurt op eigen risico." },
    Tap_to_toggle:                       function() { return "Tik om te schakelen." }, //todo
    Tap_to_toggle_can_be_enab:           function() { return "Tik om te schakelen kan worden ingeschakeld per Crownstone." },
    Tap_to_toggle_is_disabled:           function() { return "Tik om te schakelen is uitgeschakeld." },
    To_use_tap_to_toggle__you:           function() { return "Om tik te schakelen om te schakelen, moet je het globaal inschakelen in de app-instellingen." },
    Enable_Switchcraft:                  function() { return "Zet Switchcraft aan." },
    Use_modified_wall_switche:           function() { return "Gebruik aangepaste wandschakelaars om zowel de kroonsteen als het licht te wisselen. Tik op het vraagteken voor meer informatie." },
    SWITCHCRAFT:                         function() { return "SWITCHCRAFT" }, //todo
    Firmware_update_required_:           function() { return "Firmware-update vereist." },
    Use_modified_wall_switches:          function() { return "Gebruik aangepaste wandschakelaars om zowel de Crownstone als het licht te wisselen." },
    SELECT_WHICH_DEVICE_TYPE_:           function() { return "SELECTEER WELKE APPARAATTYPE IS INGESCHAKELD." },
    Select___:                           function() { return "Selecteer ... " },
    A_Device_Type_has_it_s_ow:           function() { return "Een apparaattype heeft zijn eigen configuratie en gedrag. Zo hoef je dit maar √©√©n keer in te stellen en kun je het toepassen op √©√©n of meerdere Crownstones." },
    Remove_from_Sphere:                  function() { return "Verwijder uit de Sfeer." },
    Removing_this_Crownstone_:           function() { return "Door deze Crownstone uit de Sfeer te verwijderen, wordt deze teruggezet naar de fabrieksinstellingen (en de instelmodus)." },
    cancel:                              function() { return "Annuleren" },
    I_have_removed_this_Crown:           function() { return "Ik heb deze Crownstone uit de Cloud en je Sfeer verwijderd. Je Crownstone is teruggezet naar de fabrieksinstellingen. Nadat je hem weer in en uit het stopcontact hebt gedaan, kun je hem weer aan een Sfeer toevoegen." },
    I_have_removed_this_Crowns:          function() { return "Ik heb deze Crownstone uit de Cloud en je Sphere verwijderd. Ik kon de Crownstone echter niet terugzetten naar de instelmodus. Je moet deze fabrieksinstellingen terugzetten in de Setup-modus." },
    Checking_versions____:               function() { return "Versies controleren... " },
    address__:                           function() { return "Adres: " + (arguments[0] || arguments[1]) },
    hardware_id__:                       function() { return "hardware id: " + (arguments[0] || arguments[1]) },
    bootloader__:                        function() { return "bootloader: " + (arguments[0] || arguments[1]) },
    firmware__:                          function() { return "firmware: " + (arguments[0] || arguments[1]) },
    crownstone_id__:                     function() { return "crownstone id: " + (arguments[0] || arguments[1]) },
    Edit_Device:                         function() { return "Bewerk apparaat" },
  },
  DeviceEntry:{
    __filename: "../js/views/components/deviceEntries/DeviceEntry.tsx",
    Tap_me_for_more_:                    function() { return "Tik voor meer!" },
    Sent_via_mesh_:                      function() { return "Verzonden via mesh!" },
  },
  DeviceEntrySubText:{
    __filename: "../js/views/components/deviceEntries/DeviceEntrySubText.tsx",
    _W:                                  function() { return arguments[0] + " W" },
    __Nearest_:                          function() { return " (Dichtstbijzijnde)" },
    __Nearest_in_room_:                  function() { return " (Dichtstbijzijnde in de kamer)" },
    __Very_near_:                        function() { return " (Heel dichtbij)" },
    __Near_:                             function() { return " (In de buurt)" },
    _Nearest_:                           function() { return "(Heel erg dichtbij)" },
    _Very_near_:                         function() { return "(Heel dichtbij)" },
    _Near_:                              function() { return "(Dichtbij)" },
    Please_wait_until_the_set:           function() { return arguments[0] ? "Wacht tot het instellingsproces voltooid is." : "Zoeken..." },
  },
  DeviceError:{
    __filename: "../js/views/deviceViews/elements/DeviceError.tsx",
    Reset_Error:                         function() { return "Reset fout gedetecteerd" },
    Notify_an_admin_of_your_S:           function() { return "Breng de beheerder van uw Sfeer op de hoogte om deze fout op te lossen." },
    Error_Detected:                      function() { return "Fout gedetecteerd." },
  },
  DeviceIconSelection:{
    __filename: "../js/views/deviceViews/DeviceIconSelection.tsx",
    __new:                               function() { return "__new" },
    Lights:                              function() { return "Lichten" },
    Tech:                                function() { return "Apperatuur" },
    Furniture:                           function() { return "Meubels" },
    Bathroom:                            function() { return "Badkamer" },
    Office:                              function() { return "Kantoor" },
    Bedroom:                             function() { return "Slaapkamer" },
    Tools:                               function() { return "Gereedschap" },
    Kitchen:                             function() { return "Keuken" },
    Outside:                             function() { return "Buiten" },
    Rides:                               function() { return "Ritjes" }, //todo
    Miscellaneous:                       function() { return "Overige" },
    Pick_an_Icon:                        function() { return "Kies een icoon" },
  },
  DeviceOverview:{
    __filename: "../js/views/deviceViews/DeviceOverview.tsx",
    _Crownstone_is_Locked___Y_header:    function() { return "Crownstone is geblokkeerd." },
    _Crownstone_is_Locked___Y_body:      function() { return "Je kan dit gedrag aanpassen als je de Crownstone unlocked." },
    _Crownstone_is_Locked___Y_left:      function() { return "Ok√©" },
    Edit:                                function() { return "Pas aan" },
    Change:                              function() { return "Verander" },
  },
  DevicePowerCurve:{
    __filename: "../js/views/deviceViews/elements/DevicePowerCurve.tsx",
    Power_Usage:                         function() { return "Energie verbruik" },
    Sneak_preview_of_the_dyna:           function() { return "Voorproefje van het dynamische stroomverbruikoverzicht voor deze Crownstone!" },
    Stand_near_the_Crownstone:           function() { return "Ga in de buurt van de Crownstone staan om de metingen te zien. Het meet alleen of de app op de voorgrond staat." + "Toekomstige versies van de app laten je vrij scrollen en in- en uitzoomen. " + " \n\n In de toekomst zal het energieverbruikoverzicht worden gesorteerd op de apparaten die u gebruikt, met een extra weergave om het volledige gebruik in uw Sfeer samen te vatten, ingedeeld naar kamer, apparaten en nog veel meer ! \n"},
  },
  DeviceSchedule:{
    __filename: "../js/views/deviceViews/elements/DeviceSchedule.tsx",
    _Cant_see_Crownstone___Yo_header:    function() { return "Ik kan de Crownstone niet zien!" },
    _Cant_see_Crownstone___Yo_body:      function() { return "Je kunt geen schema's van Crownstone synchroniseren als ik ze niet kan zien ..." },
    _Cant_see_Crownstone___Yo_left:      function() { return "Ok√©" },
    _Could_not_Sync__Move_clo_header:    function() { return "Ik kan niet synchroniseren" },
    _Could_not_Sync__Move_clo_body:      function() { return "Ga dichter bij de Crownstone staan en probeer het opnieuw!" },
    _Could_not_Sync__Move_clo_left:      function() { return "Ok√©" },
    _Cant_see_Crownstone___You_header:   function() { return "Ik kan de Crownstone niet zien!" },
    _Cant_see_Crownstone___You_body:     function() { return "Je kunt geen schema's toevoegen als je niet in de buurt van de Crownstone bent." },
    _Cant_see_Crownstone___You_left:     function() { return "Ok√©" },
    SCHEDULED_ACTIONS:                   function() { return "GEPLANDE ACTIES" },
    You_can_tell__to_switch_t:           function() { return "Je kan " + arguments[0] + "vertellen om deze Crownstone op een bepaald moment in of uit te schakelen." },
    Sync_schedules_from_Crown:           function() { return "Synchroniseer schema's van Crownstone." },
    Schedule:                            function() { return "Schema's" },
    Add_your_first_scheduled_:           function() { return arguments[0] ? "Voeg je eerste geplande actie toe door op het grote pictogram in het midden te tikken!" : "U bent niet gemachtigd om planningen te maken." },

    Downloading_schedules_fro:           function() { return "Schema's downloaden van Crownstone..." },
    Done_:                               function() { return "Klaar!" },
    You_do_not_have_permissio:           function() { return "Je hebt geen toestemming om de schema's in dit gebied te bekijken of in te stellen." },
    This_Crownstone_needs_to_:           function() { return "Deze Crownstone moet worden bijgewerkt om de Schedule-functie te gebruiken." },
    This_Crownstone_is_locked:           function() { return "Deze Crownstone is geblokkeerd, dus schema's zijn uitgeschakeld." },
  },
  DeviceScheduleEdit:{
    __filename: "../js/views/deviceViews/DeviceScheduleEdit.tsx",
    _Permission_Denied___You__header:    function() { return "Geen toestemming." },
    _Permission_Denied___You__body:      function() { return "U bent niet gemachtigd om een ‚Äã‚Äãgeplande actie te verwijderen. Alleen leden en beheerders van deze sfeeroverzicht mogen dat doen." },
    _Permission_Denied___You__left:      function() { return "Ok√©" },
    _Cant_see_Crownstone__You_header:    function() { return "Ik kan Crownstone niet zien." },
    _Cant_see_Crownstone__You_body:      function() { return "Je kunt het schema niet verwijderen zonder in de buurt van de Crownstone te zijn." },
    _Cant_see_Crownstone__You_left:      function() { return "Ok√©" },
    _Are_you_sure___Remove_sc_header:    function() { return "Weet je het zeker?" },
    _Are_you_sure___Remove_sc_body:      function() { return "Geplande actie verwijderen?" },
    _Are_you_sure___Remove_sc_left:      function() { return "Annuleren" },
    _Are_you_sure___Remove_sc_right:     function() { return "Verwijderen" },
    _Are_you_sure___Removing__header:    function() { return "Weet je het zeker?" },
    _Are_you_sure___Removing__body:      function() { return "Als je een geplande actie verwijdert, wordt deze ook verwijderd uit de Crownstone. je kunt de actie uitschakelen om deze tijdelijk te stoppen." },
    _Are_you_sure___Removing__left:      function() { return "Annuleren" },
    _Are_you_sure___Removing__right:     function() { return "Verwijderen" },
    _Pick_a_day___You_need_to_header:    function() { return "Kies een dag!!" },
    _Pick_a_day___You_need_to_body:      function() { return "U moet minstens √©√©n dag selecteren waarop deze actie gepland kan worden!" },
    _Pick_a_day___You_need_to_left:      function() { return "Ok√©" },
    _Cant_see_Crownstone__You__header:   function() { return "Ik kan Crownstone niet zien." },
    _Cant_see_Crownstone__You__body:     function() { return "Je kunt het schema niet wijzigen zonder in de buurt van de Crownstone te zijn." },
    _Cant_see_Crownstone__You__left:     function() { return "Ok√©" },
    _Schedules_are_full__argu_header:    function() { return "De schema's zijn vol!" },
    _Schedules_are_full__argu_body:      function() { return arguments[0] },
    _Schedules_are_full__argu_left:      function() { return "Nee..." },
    _Schedules_are_full__argu_right:     function() { return "Ok√©" },
    _Whoops__arguments___No___header:    function() { return "Whoops!" },
    _Whoops__arguments___No___body:      function() { return arguments[0] },
    _Whoops__arguments___No___left:      function() { return "No..." },
    _Whoops__arguments___No___right:     function() { return "Ok√©" },
    _Whoops___I_could_not_tel_header:    function() { return "Whoops!" },
    _Whoops___I_could_not_tel_body:      function() { return "Ik kan deze Crownstone niet vertellen om het schema bij te werken ... Zou je het opnieuw willen proberen? Zorg dat je binnen het bereik van de Crownstone bent! Als je op nee drukt, worden je wijzigingen ongedaan gemaakt." },
    _Whoops___I_could_not_tel_left:      function() { return "Nee..." },
    _Whoops___I_could_not_tel_right:     function() { return "Ok√©" },
    _Whoops___I_could_not_tell_header:   function() { return "Whoops!" },
    _Whoops___I_could_not_tell_body:     function() { return "Ik kon de Crownstone niet vertellen om deze geplande actie uit te schakelen. Wil je het opnieuw proberen? Zorg ervoor dat je binnen het bereik van de Crownstone bent!" },
    _Whoops___I_could_not_tell_left:     function() { return "Nee..." },
    _Whoops___I_could_not_tell_right:    function() { return "Ok√©" },
    _Whoops___I_could_not_tell__header:  function() { return "Whoops!" },
    _Whoops___I_could_not_tell__body:    function() { return "Ik kon de Crownstone niet vertellen om deze geplande actie te verwijderen. Wil je het opnieuw proberen? Zorg ervoor dat je binnen het bereik van de Crownstone bent!" },
    _Whoops___I_could_not_tell__left:    function() { return "Nee..." },
    _Whoops___I_could_not_tell__right:   function() { return "Ok√©" },
    TAP_THE_TIME_TO_CHANGE_IT:           function() { return "KLIK OP DE TIJD OM HET TE VERANDEREN" },
    PICK_A_TIME:                         function() { return "KIES EEN TIJD" },
    Label:                               function() { return "Label" },
    ACTION:                              function() { return "ACTIE" },
    Turn_the_Crownstone__:               function() { return "Draai de Crownstone: " },
    On:                                  function() { return "Aan" },
    Off:                                 function() { return "Uit" },
    REPEAT:                              function() { return "HERHALING" },
    SCHEDULING_OPTIONS:                  function() { return "PLANNING OP" },
    Schedule_active:                     function() { return "Planning actief" },
    Remove:                              function() { return "Verwijderen" },
    Setting_the_Schedule_on_t:           function() { return "Het schema op de Crownstone instellen!" },
    Activating_the_Schedule_o:           function() { return "Het schema op de Crownstone activeren!" },
    Add_Schedule:                        function() { return "Voeg een schema toe." },
    Create:                              function() { return "Cre√´ren." },
    Edit_Schedule:                       function() { return "Bewerk schema." },
    Save:                                function() { return "Opslaan." },
    I_could_not_set_the_Sched:           function() { return "Ik kon het schema op de Crownstone niet instellen ... Zou je het opnieuw willen proberen? Zorg dat je binnen het bereik van de Crownstone bent! Als je op Nee drukt, moet je dit later opnieuw toevoegen." },
    I_could_not_activate_the_:           function() { return "Ik kon het schema op de Crownstone niet activeren ... Zou je het opnieuw willen proberen? Zorg dat je binnen het bereik van de Crownstone bent! Als je op Nee drukt, worden je wijzigingen ongedaan gemaakt." },
    You_cant_have_any_more_sc:           function() { return "Je kunt geen geplande acties meer toevoegen. Verwijder of deactiveer een bestaande actie om deze toe te voegen." },
    Mon:                                 function() { return "Maandag" },
    Tue:                                 function() { return "Dinsdag" },
    Wed:                                 function() { return "Woensdag" },
    Thu:                                 function() { return "Donderdag" },
    Fri:                                 function() { return "Vrijdag" },
    Sat:                                 function() { return "Zaterdag" },
    Sun:                                 function() { return "Zondag" },



},
  DeviceSmartBehaviour:{
    __filename: "../js/views/deviceViews/elements/smartBehaviour/DeviceSmartBehaviour.tsx",
  },
  DeviceSummary:{
    __filename: "../js/views/deviceViews/elements/DeviceSummary.tsx",
    Energy_Usage_:                       function() { return "Energie verbruik:" },
    Turn_On:                             function() { return "Aan" },
    Turn_Off:                            function() { return "Uit" },
    Location_:                           function() { return "Lokatie:" },
    Not_in_room:                         function() { return "Niet in deze kamer" },
    Located_in_:                         function() { return "Gelokaliseerd:" },
    Tap_here_to_move_me_:                function() { return "Klik hier om me te verplaatsen!" },
    The_dimmer_is_starting_up:           function() { return "De dimmer is aan het opstarten!\nIk dim zodra ik kan!" },
    tap_icon_to_set_device_ty:           function() { return "Klik op het icoon om een device type te selecteren." },
    Searching___:                        function() { return "Zoeken..." },
    Once_I_hear_from_this_Cro:           function() { return "Wanneer ik deze Crownstone weer hoor, zal de button terugkomen." },
  },
  DeviceUpdate:{
    __filename: "../js/views/deviceViews/elements/DeviceUpdate.tsx",
    Lets_get_started_:                   function() { return "Laten we beginnen!" },
  },
  DeviceWhatsNew:{
    __filename: "../js/views/deviceViews/elements/DeviceWhatsNew.tsx",
    Update_Complete_:                    function() { return "Update compleet!" },
    Whats_New:                           function() { return "Wat is er nieuw" },
  },
  DfuDeviceEntry:{
    __filename: "../js/views/components/deviceEntries/DfuDeviceEntry.tsx",
    _You_dont_have_permission_header:    function() { return "Je hebt geen toestemming." },
    _You_dont_have_permission_body:      function() { return "Je kunt een beheerder in je Sfeer vragen om deze Crownstone bij te werken." },
    _You_dont_have_permission_left:      function() { return "Ok√©" },
    Tap_here_to_configure_me_:           function() { return "Tik hier om mij te configureren!" },
    _Very_Near_:                         function() { return "(Heel dichtbij)" },
    _Near_:                              function() { return "(dichtbij)" },
    _Visible_:                           function() { return "(Zichtbaar)" },
    _Barely_visible_:                    function() { return "(Nauwelijks zichtbaar)" },
    _Too_far_away_:                      function() { return "(Te ver weg)" },
  },
  DfuOverlay:{
    __filename: "../js/views/overlays/DfuOverlay.tsx",
    _Are_you_sure___You_can_a_header:    function() { return "Weet je het zeker?" },
    _Are_you_sure___You_can_a_body:      function() { return "Je kunt deze Crownstone later altijd bijwerken door er opnieuw op te tikken." },
    _Are_you_sure___You_can_a_left:      function() { return "Nog niet." },
    _Are_you_sure___You_can_a_right:     function() { return "Ok√©" },
    _Are_you_sure___You_can_al_header:   function() { return "Weet je het zeker?" },
    _Are_you_sure___You_can_al_body:     function() { return "Je kunt deze Crownstone later altijd bijwerken." },
    _Are_you_sure___You_can_al_left:     function() { return "Nee" },
    _Are_you_sure___You_can_al_right:    function() { return "Ja" },
    Update_Available:                    function() { return "Update beschikbaar" },
    There_is_an_update_availa:           function() { return "Er is een update beschikbaar voor uw Crownstone!" },
    This_process_may_take_a_f:           function() { return "Dit proces kan enkele minuten duren. Blijf alsjeblieft dicht bij de Crownstone het proces is afgerond. Tik 'volgende' om te zien wat er nieuw is!" },
    Next:                                function() { return "Volgende" },
    Downloading_Updates:                 function() { return "Updates downloaden" },
    Downloading_updates_from_:           function() { return "Updates downloaden van cloud..." },
    Download_Complete:                   function() { return "Download compleet" },
    Downloading_complete_:               function() { return "Downloaden voltooid!" },
    Moving_on_:                          function() { return "Volgende!" },
    Searching:                           function() { return "Zoeken" },
    Looking_for_Crownstone__:            function() { return "Zoeken voor een Crownstone.." },
    Abort:                               function() { return "Afbreken" },
    Please_move_a_little_clos:           function() { return "Beweeg alsjeblieft iets dichterbij de Crownstone!" },
    Please_hold_your_phone_as:           function() { return "Houd je telefoon zo dicht mogelijk!" },
    Preparing_Crownstone:                function() { return "Crownstone voorbereiden." },
    Putting_the_Crownstone_in:           function() { return "Crownstone in de updatemodus plaatsen ..." },
    Updating_Crownstone:                 function() { return "Crownstone bijwerken." },
    Update_is_in_progress__Pl:           function() { return "Update is bezig. Blijf dicht bij de Crownstone." },
    Updating_Done_:                      function() { return "Bijwerken gereed!" },
    Everything_is_finished__e:           function() { return "Alles is klaar, geniet van de nieuwe versie!" },
    Thanks_:                             function() { return "Bedankt!" },
    Update_failed___:                    function() { return "Update mislukt..." },
    OK:                                  function() { return "Ok√©" },
    We_could_not_download_the:           function() { return "We konden de gevraagde firmwareversie niet downloaden van de cloud. Probeer het later opnieuw." },
    Success__But___:                     function() { return "Succes, maar..." },
    The_update_was_successful:           function() { return "De update was succesvol, maar daarna is er iets misgegaan met de setup-fase. Je kunt het gewoon instellen als een normale Crownstone om het proces te voltooien." },
    OK_:                                 function() { return "Ok√©!" },
    Could_not_download_releas:           function() { return "Kan release-opmerkingen niet downloaden." },
    Release_notes_not_availab:           function() { return "Release-opmerkingen niet beschikbaar." },
    determining___:                      function() { return "Bepalen van..." },
    setting_up___:                       function() { return "Opzetten..." },
    __:                                  function() { return arguments[0] + " %" },
    putting_Crownstone_in_upd:           function() { return "Crownstone in updatemodus zetten..." }, //IK WAS HIER
  },
  DiagnosticUtil:{
    __filename: "../js/views/settingsViews/diagnostics/DiagnosticUtil.tsx",
    To_Mesh_Topology:                    function() { return "Naar het mesh overzicht" },
    OK:                                  function() { return "Ok√©" },
    Go_to_Overview:                      function() { return "Naar het overview" },
    Quit_app_now:                        function() { return "Sluit de app" },
    Open_Troubleshooter:                 function() { return "Naar de diagnosis" },
    To_Help_screen:                      function() { return "Naar help" },
    Which_Crownstone_is_givin:           function() { return "Met welke Crownstone zijn er problemen?" },
    Scroll_down_to_see_all_of:           function() { return "Zie beneden voor meer" },
    _in_:                                function() { return " in " + arguments[0] },
    No:                                  function() { return "Nee" },
    Yes:                                 function() { return "Ja" },
    ____:                                function() { return arguments[0] + (arguments[1] ? "..." : ".") },
  },
  Diagnostics:{
    __filename: "../js/views/overlays/WhatsNew/2.2.0/Diagnostics.tsx",
    Crownstone_Diagnostics:              function() { return "Crownstone Diagnose" },
    Sometimes__things_dont_se:           function() { return "Soms werken dingen niet zoals je verwacht...\n\n" + "Alles gebruikt onzichtbare berichtjes, wat het moeilijk maakt om het probleem uit te zoeken!\n\n" + "Het Diagnose scherm is er om uit te zoeken wat het probleem nu eigenlijk is!\n\n" + "Je kan het vinden in het Instellingen menu!\n\n" },
  },
  Dimmer:{
    __filename: "../js/views/overlays/WhatsNew/2.0.0/Dimmer.tsx",
    Dimmer_is_Here_:                     function() { return "De dimmer is daar!" },
    You_can_enable_dimming_pe:           function() { return "Je kan per Crownstone de dimmer activeren." },
    Set_the_mood_just_right__:           function() { return "Breng sfeer!" },
  },
  DimmerButton:{
    __filename: "../js/views/components/DimmerButton.tsx",
    Turn_On:                             function() { return "Zet aan" },
    Turn_Off:                            function() { return "Zet uit" },
    ____:                                function() { return "(" + arguments[0] + " %)" },
  },
  Dropdown:{
    __filename: "../js/views/components/editComponents/Dropdown.tsx",
    Cancel:                              function() { return "Annuleer" },
    Done:                                function() { return "Bevestig" },
  },
  EditableItem:{
    __filename: "../js/views/components/EditableItem.tsx",
    ___UNHANDLED_for_:                   function() { return arguments[0] + " - NIET VERWERKT voor " + arguments[1] },
  },
  ErrorOverlay:{
    __filename: "../js/views/overlays/ErrorOverlay.tsx",
    Find_Crownstone:                     function() { return "Zoek Crownstone" },
    Crownstone_Hardware_Error:           function() { return "Crownstone Hardware Error" },
    __Yours__:                           function() { return "~ Sorry, " + arguments[0] },
  },
  FastSetup:{
    __filename: "../js/views/overlays/WhatsNew/2.1.0/FastSetup.tsx",
    By_speeding_up_the_setup_:           function() { return "Het setup proces is versnelt in de nieuwe 2.1.2 firmware. Dit betekent minder problemen met Android telefoons." },
  },
  FirmwareUpdate:{
    __filename: "../js/views/overlays/WhatsNew/2.0.0/FirmwareUpdate.tsx",
    New_firmware_available_:             function() { return "Nieuwe firmware beschikbaar!" },
    The_new_firmware_enables_:           function() { return "De nieuwe firmware bevat mesh en dimmer functies. Het heeft ook veel verbeteringen wat betreft veiligheid!\n" + "Deze update is verplicht omdat Crownstones anders niet onderling via het mesh samen kunnen werken." },
  },
  FirmwareUpdateFix:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/FirmwareUpdateFix.tsx",
    Issues_that_caused_the_ap:           function() { return "Een probleem waarin de app crashed na een firmware update is opgelost." },
    You_can_safely_update_all:           function() { return "Je kan nu alle Crownstones updaten :)" },
  },
  GraphAxis:{
    __filename: "../js/views/components/graph/GraphComponents/GraphAxis.tsx",
    _W_:                                 function() { return "(W)" },
  },
  GuidestoneSummary:{
    __filename: "../js/views/deviceViews/elements/GuidestoneSummary.tsx",
    Tap_here_to_move_me_:                function() { return "Klik hier om me te verplaatsen!" },
    Not_in_room:                         function() { return "Niet in een kamer" },
    Located_in_:                         function() { return "Bevindt zich in:" },
    Device_Type_:                        function() { return "Apparaattype:" },
    Guidestone:                          function() { return "Guidestone" },
    Connected_to_Mesh_:                  function() { return "Verbonden met mesh:" },
    YesNot_Yet:                          function() { return arguments[0] ? "Ja" : "Noch niet" },
    Reachable_:                          function() { return "Bereikbaar:" },
    YesSearching___:                     function() { return arguments[0] ? "Ja" : "Zoeken..." },
  },
  IPhoneXSupport:{
    __filename: "../js/views/overlays/WhatsNew/2.1.0/IPhoneXSupport.tsx",
    iPhone_X_support_:                   function() { return "iPhone X ondersteuning!" },
    Enjoy_the_Crownstone_app_:           function() { return "Geniet van de Crownstone app op het mooie grote scherm van de iPhone X!" },
  },
  IconButton:{
    __filename: "../js/views/components/IconButton.tsx",
    small:                               function() { return "klein" },
  },
  InSphere:{
    __filename: "../js/views/settingsViews/diagnostics/InSphere.tsx",
    Database_is_healthy:                 function() { return "Database is correct" },
    Scanning_is_enabled:                 function() { return "Zoeken is geactiveerd" },
    Receiving_Sphere_beacons:            function() { return "Sphere beacons zijn zichtbaar" },
    Receiving_Crownstone_data:           function() { return "Crownstone data wordt ontvangen" },
    Perhaps_the_Help_menu_can:           function() { return "Misschien kan de helpsectie je verder helpen" },
    Everything_is_working_pro:           function() { return "Alles is in orde" },
    You_can_close_the_diagnos:           function() { return "Stop de diagnose.\n\nKlik de knop hieronder om terug te gaan." },
    What_are_you_having_probl:           function() { return "Waarmee is er een probleem?" },
    Scroll_down_to_see_all_op:           function() { return "Beweeg naar beneden voor meer mogelijkheden." },
    You_re_in_your_sphere_and:           function() { return "Je bent in een Sphere en het scannen van Crownstones werkt naar behoren." },
    Are_you_experiencing_any_:           function() { return "Heb je bepaalde problemen met de Crownstones?" },
    You_do_not_have_permissio:           function() { return "Je hebt geen toesemming om gebruikers tot deze Sphere uit te nodigen..." },
    You_will_have_to_ask_a_me:           function() { return "Vraag een admin of member om iemand uit te nodigen." },
    You_can_add_people_to_thi:           function() { return "Je kan mensen tot de Sphere uitnodigen door op het '+' teken rechtsonder te klikken in het Sphere overzicht." },
    Alternatively_you_can_tap:           function() { return "Of je kan op 'Edit' klikken rechtsboven in het Sphere overzicht." },
    Alternatively_you_can_send:          function() { return "Of je kan ons op team@crownstone.rocks een emailtje sturen en we zullen ons best doen je te helpen!" },
    aCrownstone:                         function() { return "Een Crownstone." },
    theIndoorLocalization:               function() { return "Positiebepaling binnenshuis." },
    invitingUsers:                       function() { return "Nodig iemand uit." },
    other___:                            function() { return "Overig..." },
    Youre_in_your_Sphere_:               function() { return "Je bent in je Shere!" },
  },
  LibMessages:{
    __filename: "../js/views/overlays/LibMessages.tsx",
    arguments___arguments___O_header:    function() { return arguments[0] },
    arguments___arguments___O_body:      function() { return arguments[0] },
    arguments___arguments___O_left:      function() { return "Ok√©" },
    OK:                                  function() { return arguments[0] || "Ok√©" },
  },
  LocalizationDebugCircle:{
    __filename: "../js/views/settingsViews/dev/LocalizationDebugCircle.tsx",
    P__:                                 function() { return "P: " + arguments[0] },
    S_______M__:                         function() { return "S: " + (arguments[0] || "...") + ("; M: " + arguments[1]) },
  },
  LocalizationSetupStep1:{
    __filename: "../js/views/overlays/LocalizationSetupStep1.tsx",
    Congratulations_:                    function() { return "Gefeliciteerd!" },
    You_have_added___Crownsto:           function() { return "Je hebt 4 Crownstones aan je Sphere toegevoegd! We kunnen nu positiebepaling gaan doen op kamerniveau!" },
    Weve_added_this_button_to:           function() { return "We hebben de volgende knop toevoegd aan het overzicht:" },
    Once_youve_added_all_your:           function() { return "Zodra je al je Crownstones hebt toegevoegd, klik op deze knop om gebruik te gaan maken van de positiebepaling." },
    OK_:                                 function() { return "Prima!" },
  },
  LocalizationSetupStep2:{
    __filename: "../js/views/overlays/LocalizationSetupStep2.tsx",
    The_Next_Step:                       function() { return "Volgende Stap" },
    You_can_now_teach__when_y:           function() { return "Je kan nu " + arguments[0] + " trainen in welke ruimte je bent. " + "Dit icoontje betekent dat " + arguments[1] + " er klaar voor is om de kamer te leren!" },
    Once_youre_ready__tap_one:           function() { return "Zodra je klaar bent, klik op een ruimte om deze te trainen.!" },
    OK:                                  function() { return "Ok√©" },
  },
  LocationPermissionOverlay:{
    __filename: "../js/views/overlays/LocationPermissionOverlay.tsx",
    Request_Permission:                  function() { return "Toestemming gevraagd" },
  },
  LocationHandler: {
    __filename: "../js/native/localization/LocationHandler.ts",
    Could_not_set_Keys_:                 function() { return "Digitale sleutels zijn niet uitgewisseld." },
    This_should_not_happen__M:           function() { return "Dit zou niet moeten gebeuren. Verzeker je ervan dat je een admin bent. Dit wordt binnenkort opgelost!" },
    OK___:                               function() { return "Ok√©..." },
    Warning__Multiple_Active_:           function() { return "Waarschuwing: Meerdere actieve Spheres gedetecteerd!" },
    I_can_see__Spheres_from_h:           function() { return "Ik zie hier " + arguments[0] + " Spheres. Meerdere Spheres op dezelfde locatie is niet ondersteund en levert allerlei technische problemen op. Zorg dat je Spheres elkeaar niet overlappen." },
    OK:                                  function() { return "Ok√©" },
    Please_forgive_me___:                function() { return "Sorry, het spijt me :(" },
    Due_to_many_improvements_:           function() { return "We hebben veel verbeteringen aangepast in de positiebepaling. Helaas, betekent dit wel dat je je kamers opnieuw moet trainen!" },
    Setting_Mesh_Channels__St:           function() { return "Configureer de kanalen van het mesh\n\nStart..." },










  },
  LockOverlay:{
    __filename: "../js/views/overlays/LockOverlay.tsx",

    Only_Admins_have_permissi:           function() { return "Alleen admins kunnen Crownstones op slot zetten." },
    You_can_only_lock_Crownst:           function() { return "Alleen Crownstones zonder dimmer functie kunnen op slot worden gezet." },
    You_can_lock_this_Crownst_off:       function() { return "Je kan een Crownstone op slot zetten zodat het niet uitgezet kan worden totdat iemand het digitaal van het slot haalt." },
    You_can_lock_this_Crownst:           function() { return "Je kan een Crownstone op slot zetten zodat het niet aangaat totdat iemand het digitaal van het slot haalt." },

    Locking_Crownstone___:               function() { return "Zet Crownstone op slot..." },




    _Im_sorry____Something_we_header:    function() { return "Sorry.." },
    _Im_sorry____Something_we_body:      function() { return "Iets is fout gegaan met het op slot zetten van deze Crownstone. Zorg ervoor dat je dichtbij de juiste Crownstone bent." },
    _Im_sorry____Something_we_left:      function() { return "Ok√©" },
    OK___:                               function() { return "OK..." },
    Cancel:                              function() { return "Annuleer" },
    Lock_:                               function() { return "Zet op slot!" },
    Locking_a_Crownstone:                function() { return "Zet Crownstone op slot" },
  },
  LockedStateUI:{
    __filename: "../js/views/components/LockedStateUI.tsx",
    Ask_an_admin_nto_unlock_m:           function() { return "Vraag een admin/nom het slot te verwijderen" },
    Unlocking___:                        function() { return "Haal Crownstone van het slot..." },
    Done:                                function() { return "Gedaan" },
    Couldnt_unlock____nYou_mu:           function() { return "Van slot halen is niet gelukt...\nBen je dichtbij?" },
    Press_and_hold_nto_unlock:           function() { return "Klik en hou ingedrukt\nom slot te verwijderen!" },
  },
  Locking:{
    __filename: "../js/views/overlays/WhatsNew/2.0.0/Locking.tsx",
    Lock_your_Crownstones_:              function() { return "Zet Crownstones op slot!" },
    You_can_lock_a_Crownstone:           function() { return "Je kan een Crownstone digitaal op slot zetten zodat het niet per ongeluk wordt geschakeld." },
    Useful_for_a_fridge__pc_a:           function() { return "Handig voor een koelkast, computer, en andere apparatuur!" },
  },
  Login:{
    __filename: "../js/views/startupViews/Login.tsx",
    Back:                                function() { return "Terug" },
    _Check_Email_Address__Ple_header:    function() { return "Controleer emailadres" },
    _Check_Email_Address__Ple_body:      function() { return "Voer een juist emailadres in en klik opnieuw op 'Wachtwoord vergeten'" },
    _Check_Email_Address__Ple_left:      function() { return "Ok√©" },
    _Send_Password_Reset_Emai_header:    function() { return "Email om opnieuww wachtwoord in te stellen" },
    _Send_Password_Reset_Emai_body:      function() { return "Wil je graag een email krijgen op " + arguments[0] + " om je wachtwoord opnieuw in te stellen?" },
    _Send_Password_Reset_Emai_left:      function() { return "Annuleren" },
    _Send_Password_Reset_Emai_right:     function() { return "Ok√©" },
    _Cannot_Send_Email_argume_header:    function() { return "Kan email niet verzenden" },
    _Cannot_Send_Email_argume_body:      function() { return arguments[0] },
    _Cannot_Send_Email_argume_left:      function() { return "Ok√©" },
    _Your_email_address_has_n_header:    function() { return "Je emailadres is niet geverifieerd." },
    _Your_email_address_has_n_body:      function() { return "Klik op de link in de email die je hebt ontvangen. Als je deze email niet hebt gekregen, klik Email Opnieuw Zenden om nog eens te proberen." },
    _Your_email_address_has_n_left:      function() { return "Email Opnieuw Zenden" },
    _Your_email_address_has_n_right:     function() { return "Ok√©" },
    arguments___arguments___O_header:    function() { return arguments[0] },
    arguments___arguments___O_body:      function() { return arguments[0] },
    arguments___arguments___O_left:      function() { return "Ok√©" },
    _Almost_there___Please_in_header:    function() { return "Bijna klaar!" },
    _Almost_there___Please_in_body:      function() { return "Voer emailadres en wachtwoord in" },
    _Almost_there___Please_in_left:      function() { return "Ok√©" },
    _Your_email_address_has_no_header:   function() { return "Je emailadres is not niet geverifieerd" },
    _Your_email_address_has_no_body:     function() { return "Er is een email verzonden. Klik op de link in deze email. Indien de email niet is ontvangen, klik Opnieuw Zenden om opnieuw te proberen." },
    _Your_email_address_has_no_left:     function() { return "Opnieuw Zenden" },
    _Your_email_address_has_no_right:    function() { return "Ok√©" },
    _Incorrect_Email_or_Passw_header:    function() { return "Incorrect emailadres of wachtwoord." },
    _Incorrect_Email_or_Passw_body:      function() { return "Fout bij het aanmelden!" },
    _Incorrect_Email_or_Passw_left:      function() { return "Ok√©" },
    _Connection_Problem__Coul_header:    function() { return "Een verbindingsprobleem" },
    _Connection_Problem__Coul_body:      function() { return "Kan niet verbinden met de Crownstone servers. Controleer de verbinding met het internet." },
    _Connection_Problem__Coul_left:      function() { return "Ok√©" },
    _Whoops___An_error_has_oc_header:    function() { return "Oeps!" },
    _Whoops___An_error_has_oc_body:      function() { return "Tijdens het synchroniseren met de Crownstone server is er een fout opgetreden. Probeer later opnieuw." },
    _Whoops___An_error_has_oc_left:      function() { return "Ok√©" },
    _DEBUG__err__arguments____header:    function() { return "DEBUG: fout:" },
    _DEBUG__err__arguments____body:      function() { return arguments[0] },
    _DEBUG__err__arguments____left:      function() { return "Ok√©" },
    Logging_in___:                       function() { return "Aanmelden..." },
    Cannot_Send_Email:                   function() { return "Email kan niet worden verzonden" },
    Unknown_Email:                       function() { return "Onbekend emailadres" },
    emailemail_address:                  function() { return "emailadres" },
    password____:                        function() { return "wachtwoord" },
    Getting_user_data_:                  function() { return "Ophalen gebruikersgegevens." },
    Received_user_data_:                 function() { return "Gebruikersgegegevens ontvangen." },
    Handle_profile_picture_:             function() { return "Profielfoto bewerken." },
    Syncing_with_the_Cloud_:             function() { return "Synchronisatie met de Crownstone server." },
    Creating_first_Sphere_:              function() { return "Eerste Sphere wordt aangemaakt." },
    Sphere_available_:                   function() { return "Sphere is beschikbaar." },
    Done:                                function() { return "Ok√©" },
    Forgot_Password_:                    function() { return "Wachtwoord vergeten?" },
    Log_In:                              function() { return "Meld aan" },
    Verification_Email_Sent:             function() { return "Verificatie√´mail verzonden" },
    Reset_Email_Sent:                    function() { return "Resetemail verzonden" },
  },
  LoginSplash:{
    __filename: "../js/views/startupViews/LoginSplash.tsx",
    Register:                            function() { return "Registreren" },
    Log_In:                              function() { return "Aanmelden" },
    Buy_Crownstones_:                    function() { return "Koop Crownstones!" },
    version__:                           function() { return "versie: " + arguments[0] },
  },
  Mesh:{
    __filename: "../js/views/overlays/WhatsNew/2.0.0/Mesh.tsx",
    Crownstones_now_Mesh__nLe:           function() { return "Crownstones in een Mesh!\nLekker kletsen samen!" },
    Your_Crownstones_can_now_:           function() { return "Je Crownstones kunnen nu onderling communiceren\n\n" + "Deze eigenschap betekent dat je Crownstones kan aansturen via andere Crownstones, levert betere AANKOMST/VERTREK bepaling, en maakt het mogelijk om snel meerdere Crownstones tegelijk te schakelen!" },
  },
  MeshElement:{
    __filename: "../js/views/components/MeshElement.tsx",
    _Update_Required__The_fir_header:    function() { return "Update Vereist" },
    _Update_Required__The_fir_body:      function() { return "De firmware van deze Crownstone moet worden ge≈±pdated voordat de onderlinge verbindingen kunnen worden gevisualiseerd." },
    _Update_Required__The_fir_left:      function() { return "Ok√©" },
  },
  MeshTopology:{
    __filename: "../js/views/overlays/WhatsNew/2.1.0/MeshTopology.tsx",
    Mesh_Topology_Visualizati:           function() { return "Mesh netwerk visualisatie" },
    Weve_added_a_visualisatio:           function() { return "Mesh netwerken kunnen nu worden gevisualiseerd. Dit maakt het mogelijk om snel de kwaliteit van de verbindingen tussen Crownstones te observeren." },
  },
  MessageAdd:{
    __filename: "../js/views/messaging/MessageAdd.tsx",
    Back:                                function() { return "Terug" },
    _Message_is_empty____I_ca_header:    function() { return "Geen berichttekst" },
    _Message_is_empty____I_ca_body:      function() { return "Ik kan geen leeg berichtje sturen." },
    _Message_is_empty____I_ca_left:      function() { return "Rechts" },
    _No_recipients____I_cant__header:    function() { return "Geen ontvangers.." },
    _No_recipients____I_cant__body:      function() { return "Ik heb een ontvanger nodig om een berichtje te sturen." },
    _No_recipients____I_cant__left:      function() { return "Rechts" },
    Create:                              function() { return "Maak" },
    IN_A_ROOM:                           function() { return "IN EEN KAMER" },
    ANYWHERE_IN_THE_SPHERE:              function() { return "ERGENS IN DE SFEER" },
    EVERYONE_IN_YOUR_SPHERE:             function() { return "IEDEREEN IN DE SFEER" },
    Everyone_in_the_Sphere:              function() { return "Iedereen in de Sfeer" },
    SPECIFIC_USERS:                      function() { return "SPECIFIEKE PERSONEN" },
    MESSAGE:                             function() { return "BERICHT" },
    Your_message___:                     function() { return "Je berichtje..." },
    __________:                          function() { return "( " + arguments[0] + " / 140 )" },
    RECIPIENTS:                          function() { return "ONTVANGERS" },
    Including_you:                       function() { return "Inclusief jezelf" },
    Add_recipient:                       function() { return "Voeg ontvanger toe" },
    LEAVE_MESSAGE_IN:                    function() { return "LAAT BERICHT ACHTER IN" },
    Select:                              function() { return "Selecteer" },
    WHEN_SHOULD_IT_BE_DELIVER:           function() { return "WANNEER MOET HET WORDEN AFGELEVERD" },
    Deliver_message_on:                  function() { return "Lever berichtje af op" },
    Entering:                            function() { return "Aankomst" },
    Exiting:                             function() { return "Vertrek" },
    When_entering_is_selected:           function() { return "Als aankomst is geselecteerd en de ontvanger is alreeds aanwezig, dan zal het berichtje alsnog worden afgeleverd!" },
    New_Message:                         function() { return "Nieuw berichtje" },
    Recipients:                          function() { return "Ontvangers" },
    Leave_where_:                        function() { return "Waar achterlaten?" },
  },
  MessageEntry:{
    __filename: "../js/views/messaging/MessageEntry.tsx",
    Unknown_User:                        function() { return "Onbekende gebruiker" },
    You:                                 function() { return "Jij zelf" },
    Everyone_in_:                        function() { return "Iedereen in " + arguments[0] },
    __:                                  function() { return ", " + arguments[0] },
    _and_:                               function() { return " en " + arguments[0] },
    Failed_to_send__tap_to_re:           function() { return "Foutje bij het zenden. Klik om opnieuw te proberen." },
    Sending_message___:                  function() { return "Berichtje verzenden..." },
  },
  MessageInbox:{
    __filename: "../js/views/messaging/MessageInbox.tsx",
    MESSAGES:                            function() { return "BERICHTEN" },
    Messages:                            function() { return "Berichtjes" },
    Back:                                function() { return "Terug" },
    _in_:                                function() { return " in " + arguments[0] },
    You_can_leave_messages_in:           function() { return "Je kan berichtjes achterlaten in een Sfeer of kamer voor vrienden of familie!" },
    Tap_the_envelope_icon_to_:           function() { return "Klik het envelopje om een berichtje op te stellen!" },
    Add_some_Crownstones_to_u:           function() { return "Voeg Crownstones toe om berichtjes achter te kunnen laten." },
    Add_a_Sphere_to_use_messa:           function() { return "Voeg een Sfeer toe om berichtjes achter te kunnen laten." },
  },
  Messages:{
    __filename: "../js/views/overlays/WhatsNew/1.11.0/Messages.tsx",
    You_can_now_leave_a_messa:           function() { return "Je kan nu een berichtje achterlaten voor jezelf of iemand anders!" },
    Its_like_you_leave_a_digi:           function() { return "Het is alsof je een post-it achterlaat in een ruimte of in je Sfeer." },
  },
  MoveRooms:{
    __filename: "../js/views/overlays/WhatsNew/2.2.0/MoveRooms.tsx",
    Custom_screen_positions_:            function() { return "Verankeren van schermposities" },
    You_can_now_choose_where_:           function() { return "Je kan nu kiezen waar je de icoontjes van je kamers wil plaatsen.\n\n" + "Je kan dit vinden in het nieuwe Sfeer menu, onder kamers!\n\n" },
  },
  NewDeviceUI:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/NewDeviceUI.tsx",
    The_Crownstone_settings_h:           function() { return "De Crownstone instellingen hebben een facelift gekregen. Je kan naar links en rechts vegen om alle opties te zien. Ga naar beneden voor meer..." },
    You_get_there_by_tapping_:           function() { return "Klik op de Crownstones in het kameroverzicht en klik \"instellingen\"." + "\n\nIn het nieuwe overzicht, klik op het icoontje om een apparaat in te stellen, veeg naar links om het gedrag in te stellen en om het verbruikte vermogen te zien." },
  },
  NewDeviceUIGraph:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/NewDeviceUIGraph.tsx",
    You_can_now_see_a_running:           function() { return "Je kan nu een real-time grafiek zien van het energieverbruik gemeten door een Crownstone. Zie onder voor meer." },
    You_access_it_by_swiping_:           function() { return "Het energieverbruik kan worden gevonden via het naar links vegen in het overzicht per Crownstone.\n\nDeze grafiek is een preview. Het wordt nog ooier. " + "In de toekomst wordt het overzicht bijvoorbeeld nog dynamischer. Er komt ook een overzicht voor de gehele Sfeer." },
  },
  NewLocalizationSettings:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/NewLocalizationSettings.tsx",
    There_are_new_settings_to:           function() { return "There are new settings to allow you to use the Crownstone App without localization." },
  },
  NewScheduler:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/NewScheduler.tsx",
    You_can_tell_the_Crownsto:           function() { return "You can tell the Crownstone to do something at a certain time!" },
    In_order_to_use_the_sched:           function() { return "In order to use the scheduler, the Crownstone will need to update its firmware first. " + "The new firmware should also be available now!" + "\n\nWhen the update is available, the Crownstones in your room will show an up arrow. Press it to start the update process." + "\n\nIf you do not see it right away, check back later to see if the update is available!" },
  },
  NewSphereSettings:{
    __filename: "../js/views/overlays/WhatsNew/2.2.0/NewSphereSettings.tsx",
    New_Sphere_menu_:                    function() { return "New Sphere menu!" },
    Press_Edit_in_the_top_rig:           function() { return "Press Edit in the top right corner of the Sphere overview and customize your Sphere!\n\n" },
  },
  NoStones:{
    __filename: "../js/views/settingsViews/diagnostics/NoStones.tsx",
    If_the_Crownstone_has_pow:           function() { return "If the Crownstone has power, and my scanning is working fine... You can try to take the power off the Crownstone and restarting your phone." },
    If_none_of_these_work_this:          function() { return "If none of these work, this Crownstone may be broken.\n\nContact us at team@crownstone.rocks and we'll do our best to help you!" },
    The_Crownstone_needs_powe:           function() { return "The Crownstone needs power to work." },
    There_is_a_Crownstone_in_:           function() { return "There is a Crownstone in setup mode nearby!" },
    There_is_a_Crownstone_in_s:          function() { return "There is a Crownstone in setup mode nearby. However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Cro:           function() { return "Only admins can setup Crownstones." },
    I_can_hear_a_Crownstone__:           function() { return "I can hear a Crownstone, but it does not seem to belong to your Sphere." },
    Are_you_visiting_a_friends:          function() { return "Are you visiting a friend's Sphere?" },
    If_you_want_to_join_a_friend:        function() { return "If you want to join a friend's Sphere, they will need to invite you." },
    Once_they_invite_you__you:           function() { return "Once they invite you, you can use their Crownstones!." },
    Please_ensure_the_Crownstone:        function() { return "Please ensure the Crownstone is powered and rerun the diagnostic if you still can't see it." },
    Are_you_near_a_Crownstone:           function() { return "Are you near a Crownstone?" },
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Searching_for_Crownstones:           function() { return "Searching for Crownstones" },
    You_re_near_a_Crownstone_but:        function() { return "You're near a Crownstone but I can't hear it. I am picking up other Bluetooth signals however. Are you sure the Crownstone has power?" },
    You_re_near_a_crownstone_:           function() { return "You're near a Crownstone and I'm not detecting any BLE signals, Crownstones or otherwise..." },
    It_could_be_that_your_phone:         function() { return "It could be that your phone's scanning has stopped.\n\nTap the button below to start the troubleshooter." },
    I_m_not_detecting_anythin:           function() { return "I'm not detecting anything and you're not near any Crownstones, everything should be OK!" },
    You_can_add_it_to_your_sphere:       function() { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
    Since_you_are_not_an_admin:          function() { return "Since you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    Im_not_picking_up_anything:          function() { return "I'm not picking up anything on my Bluetooth scan, Crownstone or otherwise." },
    Im_not_picking_up_any:               function() { return "I'm not picking up any Crownstones, but I am receiving other Bluetooth advertisements so my scanning should be working fine." },
    if_it_does_belong_to_you:            function() { return "If it does belong to you, you can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    You_dont_have_any_Crownst:           function() { return "You don't have any Crownstones yet..." },
  },
  NotInSphere:{
    __filename: "../js/views/settingsViews/diagnostics/NotInSphere.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Listening_for_Crownstones:           function() { return "Listening for Crownstones" },
    This_can_happen_if_there_:           function() { return "This can happen if there is a miscommunication between your phone and the app. Try restarting both to fix this problem." },
    Only_admins_can_setup_Cro:           function() { return "Only admins can setup Crownstones." },
    In_this_case__you_can_try:           function() { return "In this case, you can try to restart the app, Bluetooth and/or your phone.\n\nTap the button below to start the troubleshooter." },
    Once_they_invite_you__you:           function() { return "Once they invite you, you can use their Crownstones!." },
    I_can_hear_a_Crownstone__:           function() { return "I can hear a Crownstone, but it does not seem to belong to your Sphere." },
    In_that_case__everything_:           function() { return "In that case, everything seems to be working as it should be!" },
    If_you_have_any_questions:           function() { return "If you have any questions you can take a look at the Help menu, or run the diagnostic again when you're in your Sphere." },
    It_could_be_that_your_phone:         function() { return "It could be that your phone's scanning has stopped.\n\nTap the button below to start the troubleshooter." },
    So_far_so_good__n_nAre_yo:           function() { return "So far so good!\n\nAre you in a Sphere right now?" },
    I_m_not_picking_up_anythi:           function() { return "I'm not picking up anything on my Bluetooth scan, Crownstone or otherwise." },
    _close_to_your_Crownstone:           function() { return "(close to your Crownstones)" },
    This_can_happen_if_there_i:          function() { return "This can happen if there is a miscommunication between your phone and the app. Try restarting both to fix this problem.\n\n" +
                                                  "If this persists, your Crownstones may be unpowered or defective. Contact us at team@crownstone.rocks for more assistance." },
    Im_not_picking_up_any_Crow:          function() { return "I'm not picking up any Crownstones, but I am receiving other Bluetooth advertisements so my scanning should be working fine." },
    Are_you_visiting_a_friends:          function() { return "Are you visiting a friend's Sphere?" },
    If_you_want_to_join_a_frie:          function() { return "If you want to join a friend's Sphere, they will need to invite you." },
    I_can_hear_a_Crownstone__b:          function() { return "I can hear a Crownstone, but it does not seem to belong to your Sphere.\n\nSince you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    I_can_hear_a_Crownstone__noAdm:      function() { return "I can hear a Crownstone, but it does not seem to belong to your Sphere.\n\nIf it does belong to you, you can try to factory reset it." },
    Tap_the_button_below_to_go:          function() { return "Tap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    I_can_hear_a_Crownstone_bu:          function() { return "I can hear a Crownstone but the app does not think you're in a Sphere." },
    I_cant_hear_any_of_your_Cr:          function() { return "I can't hear any of your Crownstones, nor beacon signals from your Sphere.\n\nThere is a Crownstone in setup mode nearby. However, you do not have any Spheres in which you are an Admin." },
    You_can_add_it_to_your_Sph:          function() { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
    I_cant_hear_any_of_your_Cr_adm:      function() { return "I can't hear any of your Crownstones, nor beacon signals from your Sphere. But there is a Crownstone in setup mode nearby!" },
    Im_picking_up_data_from_y:           function() { return "I'm picking up data from your Crownstones, but no beacon signals from your Sphere." },
    This_can_be_bad_timing_or:           function() { return "This can be bad timing or this can happen if someone has removed a Crownstone from your Sphere without telling it to forget your Sphere.\n\n" +
                                                  "If this happens more often, you can factory reset the Crownstone that was wrongly removed.\n\n" +
                                                  "To do this, tap the button below to go to the Help menu and tap on 'I need to factory reset a Crownstone'." },
    Im_picking_up_beacon_sign:           function() { return "I'm picking up beacon signals from your Sphere, but no data from your Crownstones." },
    This_can_happen_if_someon:           function() { return "This can happen if someone has removed a Crownstone from your Sphere without telling it to forget your Sphere.\n\nYou should ask the admin of your Sphere to factory reset this Crownstone." },
    Sphere_tests_completed_:             function() { return "Sphere tests completed!" },
    Running_Sphere_tests___:             function() { return "Running Sphere tests..." },
    Initial_tests_completed_:            function() { return "Initial tests completed!" },
    Let_me_run_a_few_more_tes:           function() { return "Let me run a few more tests..." },
  },
  OptionPopup:{
    __filename: "../js/views/components/OptionPopup.tsx",
    Cancel:                              function() { return "Annuleren" },
  },
  OptionalSwitchBar:{
    __filename: "../js/views/components/editComponents/OptionalSwitchBar.tsx",
    NULL:                                function() { return "NULL" },
  },
  PhysicsBasedSphereUI:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/PhysicsBasedSphereUI.tsx",
    The_Sphere_overview_now_p:           function() { return "The Sphere overview now positions the rooms automatically. Scroll down for more." },
    You_can_move_it_around_as:           function() { return "You can move it around as well as zoom in. Double tap the background to reset the camera." },
  },
  PictureCircle:{
    __filename: "../js/views/components/PictureCircle.tsx",

    Take_Photo:                          function() { return "Take Photo" },
    Choose_from_Gallery:                 function() { return "Choose from Gallery" },
    Take_Picture:                        function() { return "Take Picture" },
    Choose_Existing:                     function() { return "Choose Existing" },





    _Delete_this_picture__arg_header:    function() { return "Delete this picture?" },
    _Delete_this_picture__arg_body:      function() { return arguments[0] },
    _Delete_this_picture__arg_left:      function() { return "No" },
    _Delete_this_picture__arg_right:     function() { return "Yes" },
    _Sorry_arguments___OKnull_header:    function() { return "Sorry" },
    _Sorry_arguments___OKnull_body:      function() { return arguments[0] },
    _Sorry_arguments___OKnull_left:      function() { return "Ok√©" },
    Can_t_make_a_picture_with:           function() { return "Can\'t make a picture without camera permission. You'll need to enable this in the Android settings menu (of your phone, not in the app)!" },
    Cant_take_a_picture_witho:           function() { return "Can't take a picture without permission!" },
    Can_t_read_a_stored_pictu:           function() { return "Can\'t read a stored picture without permission!" },
    Can_t_store_a_captured_pi:           function() { return "Can\'t store a captured picture without permission!" },
    Profile_Picture:                     function() { return "Profile Picture" },
  },
  PictureView:{
    __filename: "../js/views/cameraViews/PictureView.tsx",
    Done:                                function() { return "Done" },
    Cancel:                              function() { return "Annuleren" },
    Take_Picture:                        function() { return "Take Picture" },

    Retry:                               function() { return "Retry" },
    Select:                              function() { return "Select" },





  },
  ProblemWithCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithCrownstone.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Is_the_problem_with_a_new:           function() { return "Is the problem with a new or an existing Crownstone?" },
    Youre_in_your_Sphere_:               function() { return "You're in your Sphere!" },
  },
  ProblemWithExistingCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithExistingCrownstone.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Looking_for_beacon:                  function() { return "Looking for beacon" },
    Looking_for_data:                    function() { return "Looking for data" },
    Looking_for_mesh:                    function() { return "Looking for mesh" },
    Looking_for_address:                 function() { return "Looking for address" },
    Checking_mesh:                       function() { return "Checking mesh" },
    Switching_Crownstone:                function() { return "Switching Crownstone" },
    Are_you_close_to_it_:                function() { return "Are you close to it?" },
    It_could_just_be_out_of_r:           function() { return "It could just be out of range, could you hold your phone as close as possible?" },
    Press_the_button_to_conti:           function() { return "Press the button to continue?" },
    OK__we_can_do_it_later_:             function() { return "OK, we can do it later!" },
    Crownstone_successfully_r:           function() { return "Crownstone successfully reset!" },
    It_will_be_in_setup_mode_:           function() { return "It will be in setup mode now. You can add it to your Sphere again from the Sphere overview.\n\nTap the button below to go there now." },
    Failed_to_reset_Crownston:           function() { return "Failed to reset Crownstone..." },
    Factory_resetting_your_lo:           function() { return "Factory resetting your lost Crownstone..." },
    This_can_happen_when_some:           function() { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nWould you like me to reset it?" },
    OK__done_:                           function() { return "OK, done!" },
    Power_has_been_cycled_:              function() { return "Power has been cycled." },
    Contact_us_at_team_crowns:           function() { return "Contact us at team@crownstone.rocks for further assistance." },
    I_can_see_this_Crownstone:           function() { return "I can see this Crownstone perfectly!" },
    I_see_what_you_mean__:               function() { return "I see what you mean.." },
    I_can_hear_other_Crownsto:           function() { return "I can hear other Crownstones talking about this one!" },
    I_can_hear_this_Crownston:           function() { return "I can hear this Crownstone broadcasting the state of his fellow Crownstones." },
    This_is_usually_because_t:           function() { return "This is usually because the message has to go through the mesh network." },
    Something_went_wrong_:               function() { return "Something went wrong." },
    Please_restart_the_diagno:           function() { return "Please restart the diagnostic." },
    This_Crownstone_seems_to_:           function() { return "This Crownstone seems to have a hardware error." },
    Someone_has_locked_this_C:           function() { return "Someone has locked this Crownstone." },
    A_Crownstone_can_be_locke:           function() { return "A Crownstone can be locked to prevent it from switching. You can disable the lock by going to the Device settings (tap on room, tap on Crownstone) and holding your finger on the button." },
    Someone_has_locked_this_Cr:          function() { return "Someone has locked this Crownstone." },
    Let_me_try_to_switch_this:           function() { return "Let me try to switch this Crownstone." },
    No_problem__maybe_next_ti:           function() { return "No problem, maybe next time!" },
    OK:                                  function() { return "Ok√©" },
    I_see____It_failed_to_swi:           function() { return "I see... It failed to switch." },
    It_could_be_this_Crownsto:           function() { return "It could be this Crownstone or it could be your phone. Can you swith another Crownstone successfully?" },
    Could_you_try_restarting_:           function() { return "Could you try restarting the Crownstone?" },
    It_looks_like_I_can_switc:           function() { return "It looks like I can switch it OK, could you verify that it was switched?" },
    Did_it_switch_successfull:           function() { return "Did it switch successfully?" },
    It_could_be_that_the_conn:           function() { return "It could be that the connected device is broken.." },
    If_you_try_it_with_a_simp:           function() { return "If you try it with a simple light (which works on another outlet), did it switch successfully?" },
    Glad_it_works_now_:                  function() { return "Glad it works now!" },
    In_that_case__this_Crowns:           function() { return "In that case, this Crownstone may be broken." },
    Contact_us_at_team_crownst:          function() { return "Contact us at team@crownstone.rocks for assistance." },
    Glad_it_works_:                      function() { return "Glad it works!" },
    It_could_just_be_out_of_ra:          function() { return "It could just be out of range, could you hold your phone as close as possible?" },
    Press_the_button_to_contin:          function() { return "Press the button to continue." },
    Scroll_down_to_see_all_op:           function() { return "Scroll down to see all options." },
    You_can_look_at_the_Activ:           function() { return "You can look at the Activity Log to see why the Crownstone switched.\n\nAnother possible cause is that Switchcraft is enabled for this Crownstone." },
    We_have_recently_added_an:           function() { return "We have recently added an Activity Log just for this!" },
    You_can_find_it_in_the_st:           function() { return "You can find it in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    Weird_how_:                          function() { return "Weird how?" },
    You_can_take_a_look_at_th:           function() { return "You can take a look at the help menu or let us know how we can help you and improve the app by sending an email at team@crownstone.rocks!" },
    This_differs_from_phone_t:           function() { return "This differs from phone to phone. Press the button to go to the BLE troubleshooter." },
    Perhaps_the_Help_menu_can:           function() { return "Perhaps the Help menu can help you further." },
    Settings:                            function() { return "Settings" },
    Sidebar_:                            function() { return "Sidebar." },
    I_cant_hear_this_Crownsto:           function() { return "I can't hear this Crownstone at all..." },
    Try_disconnecting_its_pow:           function() { return "Try disconnecting it's power, then wait 5 seconds, make sure it's powered again, wait 5 more seconds and press the button below." },
    very:                                function() { return "very" },
    pretty:                              function() { return "pretty" },
    somewhat:                            function() { return "somewhat" },
    not_that:                            function() { return "not that" },
    The_nearest_Crownstone_I_:           function() { return "The nearest Crownstone I can detect is " + arguments[0] + " and it's " + arguments[1] + " close!" },
    If_youre_sure_youre_near_:           function() { return "If you're sure you're near the right Crownstone, Try disconnecting it's power, then wait 5 seconds, make sure it's powered again, wait 5 more seconds and press the button below." },
    I_didnt_hear_it_via_the_o:           function() { return "I didn't hear it via the other Crownstones right now, but it is connected to the mesh. This if normal, as Crownstones take turns to broadcast eachothers's state." },
    I_didnt_hear_it_via_the_m:           function() { return "I didn't hear it via the mesh though. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_me:          function() { return "I didn't hear it via the mesh though. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_mes:         function() { return "I didn't hear it via the mesh right now.. This could be just a momentary issue as Crownstones take turns to broadcast eachothers's state." },
    I_didnt_hear_it_via_the_mesh:        function() { return "I didn't hear it via the mesh though. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_mesh_:       function() { return "I didn't hear it via the mesh though. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh." },
    I_cant_hear_it_via_the_me:           function() { return "I can't hear it via the mesh but it was in the network. From where I am, I can only hear this Crownstone so maybe it's not close enough enough to other Crownstones to form a mesh?\n\n" },
    I_cant_hear_it_via_the_mes:          function() { return "I can't hear it via the mesh nor is it currently in one. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh.\n\n" },
    I_cant_hear_it_via_the_mesh:         function() { return "I can't hear it via the mesh nor is it currently in one. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh.\n\n" },
    You_can_try_moving_it_clo:           function() { return "You can try moving it closer or adding more Crownstones to your network. You can use the Mesh Topology view to see how well the mesh is connected. It's in the " },
    Settings_:                           function() { return "Settings." },
    It_is_in_the_mesh__You_ca:           function() { return "It is in the mesh. You can take a look at the network in the Mesh Topology view which you can find in the " },
    It_is_in_the_mesh__You_can:          function() { return "It is in the mesh. You can take a look at the network in the Mesh Topology view which you can find in the " },
    To_find_the_Activity_Log_:           function() { return "To find the Activity Log, tap on the room, tap on the Crownstone icon and navigate to the right until you see it.\n\n" + "Switches triggered by Switchcraft won't show up in this overview. Keep in mind that Switchcraft is still experimental and it is not intended for normal use yet.\n\n" },
    Alternatively_you_can_sen:           function() { return "Alternatively you can send us an email at team@crownstone.rocks and we'll do our best to help you!" },
    Sometimes_the_background_:           function() { return "Sometimes the background processes don't work the way they should." },
    Its_very_possible_that_so:           function() { return "It's very possible that some of the behaviour has not been comminucated clearly :)." },
    I_think_it_should_react_d:           function() { return "I think it should react differently based on how I configured it." },
    It_switches_unexpectedly_:           function() { return "It switches unexpectedly." },
    It_does_not_work_if_the_a:           function() { return "It does not work if the app is not open" },
    Other___:                            function() { return "Other..." },
    The_app_says_Searching___:           function() { return "The app says 'Searching...'." },
    I_cant_get_it_to_switch_:            function() { return "I can't get it to switch." },
    It_is_not_in_the_mesh_:              function() { return "It is not in the mesh." },
    It_only_switches_when_Im_:           function() { return "It only switches when I'm nearby." },
    Its_behaviour_is_weird_:             function() { return "It's behaviour is weird." },
    Whats_wrong_with__:                  function() { return "What's wrong with " + arguments[0] + "?" },
    You_can_ask_an_Admin_to_d:           function() { return "You can ask an Admin to disable Switchcraft for this Crownstone." },
    The_option_for_Switchcraf:           function() { return "The option for Switchcraft is hidden since you're not in the Alpha program. You can enable it in the developer menu, which is in the user profile.\n\nYou can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    The_option_for_Switchcraf_dev:       function() { return "The option for Switchcraft is hidden since you're not in the alpha program. You can enable it in the developer menu.\n\nYou can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    You_can_disable_Switchcra:           function() { return "You can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    I_cant_hear_this_Crownsto2:          function() { return "I can't hear this Crownstone.." },
    If_theres_anything_else__:           function() { return "If there's anything else, please run the diagnostics again!" },
    In_that_case__its_probabl:           function() { return "In that case, it's probably your phone's Bluetooth. Tap the button below to resolve this!" },
    Could_you_try_moving_a_li:           function() { return "Could you try moving a little closer? Tap the button once you're a bit closer to this Crownstone." },
    I_couldnt_hear_any_messag:           function() { return "I couldn't hear any messages from that Crownstone, but I could before.." },
    Trying_to_switch____:                function() { return "Trying to switch " + arguments[0] + "..." },
    Rerun_the_diagnostic_once:           function() { return "Rerun the diagnostic once you're ready to let me try to switch this Crownstone." },
    Is_that_OK__Its_currently:           function() { return "Is that OK? It's currently " + (arguments[0] ? "on" : "off") + "and I'd like to turn it " + (arguments[0] ? 'off' : 'on') + "."},
    A_Crownstone_can_be_locke_noAdm:     function() { return "A Crownstone can be locked to prevent it from switching. You'll need to ask an Admin in your Sphere to unlock it for you." },
    This_does_not_mean_your_d:           function() { return "This does not mean your device is broken. Tap on it's room and tap on the Crownstone. It will guide to to fixing the hardware error." },
    A_Crownstone_does_not_swi:           function() { return "A Crownstone does not switch back to 'Searching...' directly when you're out of range.\n\n" +
      "It could be that the app thinks the Crownstone is still in range while you're already too far away.\n\n" +
      "If a Crownstone is in range of another, they form a mesh network. This can help you to relay a command from a Crownstone in your range to another." },
    Youre_probably_out_of_ran:           function() { return "You're probably out of range when that happens." },
    It_can_happen_that_messag:           function() { return "It can happen that messages over the mesh network are lost if there is only one path between Crownstones." +
      "\n\nWe're working to improve this!" +
      "\n\nAlternatively, a Crownstone does not switch back to 'Searching...' directly when you're out of range. It could be that the app thinks the Crownstone is still in range while you're already too far away." },
    You_can_try_to_take_the_p:           function() { return "You can try to take the power off this Crownstone for a little while and see if it's fixed.\n\nIf this keeps happening, contact us at team@crownstone.rocks."},
    I_can_hear_this_Crownston2:          function() { return "I can hear this Crownstone beacon signal but not it's data." },
    It_is_not_on_Searching___:           function() { return "It is not on 'Searching...' now." },
    I_can_hear_the_Crownstone:           function() { return "I can hear the Crownstone's data but not it's beacon signal." },
    Since_I_cant_hear_this_Cr:           function() { return "Since I can't hear this Crownstone directly from where I am, some commands will go through the mesh and won't always be delivered. We're working to improve that!" },
    I_can_hear_the_Crown_mesh:           function() { return "I can hear the Crownstone via the mesh, it should not be 'Seaching...' anymore." },
    I_can_hear_the_directly:             function() { return "I can hear the Crownstone directly, it should not be 'Seaching...' anymore." },
    I_still_cant_hear_this_Cr:           function() { return "I still can't hear this Crownstone at all." },
    I_cant_hear_this_Crowns_atAll:       function() { return "I can't hear this Crownstone at all..." },
    If_youre_sure_its_one_of_:           function() { return "If you're sure it's one of your Crownstones, you can try to factory reset it!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    The_nearest_Crownstone_is:           function() { return "The nearest Crownstone is not registered to your Sphere, and it's " + arguments[0] + " close!" },
    This_can_happen_when_some_noAdm:     function() { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nYou will have to ask an admin to reset it for you." },
    The_nearest_Crownstone_be:           function() { return "The nearest Crownstone belongs to your Sphere but it has been removed from your database.\n\nIt's " + arguments[0] + " close by." },
    Something_went_wrong_duri:           function() { return "Something went wrong during the recover process.. You can try to factory reset it yourself!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    Run_the_diagnostic_again_:           function() { return "Run the diagnostic again when you're ready or factory reset the Crownstone yourself.\n\nGo to help in the " + arguments[0] + " and tap on 'I need to factory reset a Crownstone'." },
    You_can_try_to_factory_re:           function() { return "You can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    I_can_hear_a_Crownstone_w:           function() { return "I can hear a Crownstone with the same address as the one we're looking for, but it does not seem to belong to your Sphere." },
    Im_near_now_:                        function() { return "I'm near now!" },
    Problem_with_existing_Cro:           function() { return "Problem with existing Crownstone..." },
  },
  ProblemWithLocalization:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithLocalization.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Checking_for_Beacons:                function() { return "Checking for Beacons" },
    Indoor_localization_is_ru:           function() { return "Indoor localization is running!" },
    You_can_see_your_face_on_:           function() { return "You can see your face on the room bubbles showing where the app thinks you are!" },
    There_are_not_enough_Crow:           function() { return "There are not enough Crownstones in range at the moment to do the indoor localization. We need at least 3." },
    Since_the_radio_field_is_:           function() { return "Since the radio field is radially symmetric, we require at least 3 Crownstones in range to determine where you are." },
    Indoor_localization_is_di:           function() { return "Indoor localization is disabled by you." },
    You_need_to_train_the_roo:           function() { return "You need to train the rooms before the localization can run." },
    You_can_do_this_by_tappin:           function() { return "You can do this by tapping on the location icon in the top right corner of the room and following the instructions." },
    Room_level_localization_i:           function() { return "Room level localization is only available if you have 4 or more Crownstones in your Sphere." },
    This_is_required_to_be_ab:           function() { return "This is required to be able to pinpoint you in a room. The more Crownstones you have, the better the localization will be!" },
    Indoor_localization_is_dis:          function() { return "Indoor localization is disabled by you." },
    When_indoor_localization_:           function() { return "When indoor localization at room-level is available, we do not use near/further away." },
    You_will_need_to_train_th:           function() { return "You will need to train the distance of what exactly is near. This differs from phone to phone so everyone using this will have to train it." },
    Tap_on_the_room__tap_on_t:           function() { return "Tap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. You can train the distance there." },
    Near_further_away_behavio:           function() { return "Near/further away behaviour has not been configured by you." },
    Near_further_away_is_conf:           function() { return "Near/further away is configured correctly on this Crownstone." },
    Tap_to_toggle_is_disabled:           function() { return "Tap-to-toggle is disabled." },
    Tap_to_toggle_is_not_conf:           function() { return "Tap-to-toggle is not configured yet!" },
    Tap_to_toggle_is_configur:           function() { return "Tap-to-toggle is configured correctly on this Crownstone." },
    Tap_to_toggle_is_disabled_:          function() { return "Tap-to-toggle is disabled on this Crownstone." },
    You_can_enable_it_by_tapp:           function() { return "You can enable it by tapping on the room, tapping on the Crownstone icon, tapping edit in the top right corner and enabling it there." },
    Tap_to_toggle_is_disabled_o:         function() { return "Tap-to-toggle is disabled on this Crownstone." },
    You_will_have_to_ask_an_a:           function() { return "You will have to ask an admin in your Sphere to enable this." },
    Press_the_button_to_conti:           function() { return "Press the button to continue, or close the diagnostic menu." },
    Continue:                            function() { return "Continue" },
    You_can_find_the_Activity:           function() { return "You can find the Activity Log in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    We_have_recently_added_an:           function() { return "We have recently added an Activity Log just for this!" },
    You_can_find_it_in_the_st:           function() { return "You can find it in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    This_is_currently_unavoid:           function() { return "This is currently unavoidable for the room events. However, the Sphere Exit event does work with multiple users." },
    We_are_working_on_new_beh:           function() { return "We are working on new behaviour that will combine the schedules and the behaviour to facilitate this!" },
    Only_turn_on_when_dark_wi:           function() { return "Only turn on when dark will only suppress the action the moment you enter a room or enter your Sphere." },
    Scroll_down_to_see_all_op:           function() { return "Scroll down to see all options." },
    Perhaps_the_Help_menu_can:           function() { return "Perhaps the Help menu can help you further." },
    Make_sure_the_Crownstones:           function() { return "Make sure the Crownstones are spread around the space evenly! If they're all side by side, it's very difficult to pinpoint you.\n\n" + "Alternatively you can try to retrain your rooms. You can do this by tapping on a room bubble in the overview, then tapping on the button in the top right corner.\n\n" + "Finally, we're working on brand new algorithms that will make this much more reliable! You'll get these as a free update when they're available!" },
    You_have_a_good_amount_of:           function() { return "You have a good amount of Crownstones! If you have a large area to cover, you'll need more Crownstones as well." },
    The_more_Crownstones_you_:           function() { return "The more Crownstones you have, the better the indoor localization will be." },
    Make_sure_the_Crownstones_:          function() { return "Make sure the Crownstones are spread around the space evenly! If they're all side by side, it's very difficult to pinpoint you.\n\n" + "Alternatively you can try to retrain your rooms. You can do this by tapping on a room bubble in the overview, then tapping on the button in the top right corner.\n\n" + "Finally, we're working on brand new algorithms that will make this much more reliable! You'll get these as a free update when they're available!" },
    Alternatively_you_can_sen:           function() { return "Alternatively you can send us an email at team@crownstone.rocks and we'll do our best to help you!" },
    Whats_wrong_with_the_Loca:           function() { return "What's wrong with the Localization?" },
    It_does_not_do_room_level:           function() { return "It does not do room-level localization." },
    Room_level_localization_is:          function() { return "Room-level localization is inaccurate." },
    Near_far_does_not_work_:             function() { return "Near/far does not work." },
    Tap_to_toggle_does_not_wo:           function() { return "Tap to toggle does not work." },
    Things_turn_off_while_Im_:           function() { return "Things turn off while I'm still there." },
    If_I_leave_the_room_but_s:           function() { return "If I leave the room but someone is still there, Crownstones still turn off." },
    Only_on_when_dark_does_no:           function() { return "'Only on when dark' does not turn on." },
    Other___:                            function() { return "Other..." },
    It_will_not_turn_on_at_a_:           function() { return "It will not turn on at a later time if you don't re-enter your room or Sphere.\n\nWe are working on new behaviour that will combine the schedules and the behaviour to facilitate this!" },
    We_have_recently_added_an2:          function() { return "We have recently added an Activity Log just for this! For room events, like room exit, I can't take multiple users into account yet.\n\nWe're working on this!" },
    I_cant_help_you_with_this:           function() { return "I can't help you with this." },
    Tap_to_toggle_does_not_wo2:          function() { return "Tap-to-toggle does not work on a device that can't toggle anything." },
    We_dont_generally_recomme:           function() { return "We don't generally recommend using tap-to-toggle on built-ins. Calibrating tap-to-toggle for built-ins can cause issues with tap-to-toggle on plugs." },
    If_its_not_working_as_you:           function() { return "If it's not working as you'd like, try recalibrating the distance.\n\nYou can do this in the in the " + (arguments[0] ? "Sidebar" : "settings menu") + " by tapping on 'Calibrate Tap-to-Toggle'."},
    You_can_enable_this_in_th:           function() { return "You can enable this in the in the " + (arguments[0] ? "Sidebar" : "settings menu") + " by tapping on 'Calibrate Tap-to-Toggle'."},
    You_can_enable_this_in_th2:          function() { return "You can enable this in the 'App Settings' which you can find in the" + (arguments[0] ? "Sidebar" : "settings menu") + "." },
    You_can_retrain_where_you:           function() { return "You can retrain where you want 'near' to be by editing the behaviour.\n\nTap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. You can train the distance there.\n\nKeep in mind, since human beings are essentially big sacks of water, if you sit between your phone and the Crownstone it will think it's further away than it really is!" },
    Tap_on_the_room__tap_on_t2:          function() { return "Tap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. Tell me what you'd like me to do when you get near and move further away and train the distance." },
    This_is_a_design_choice__:           function() { return "This is a design choice, not a bug. We're working on smarter behaviour though, which will allow you to incorporate near/further away together with room-level localization." },
    Not_all_rooms_in_the_app_:           function() { return "Not all rooms in the app require Crownstones inside of them.\n\nAs long as you pick up a signal from at least 3 Crownstones in a room, it can be used for localization. Even if the Crownstones that send the signals are in other rooms." },
    You_need_to_have_at_least:           function() { return "You need to have at least 4 Crownstoens places in rooms. Take the ones that are 'Floating' and assign a room to them!" },
    __Apart_from_the_amount__:           function() { return "\n\nApart from the amount, the spread of Crownstones is important too!" },
    Even_thought_you_have_a_g:           function() { return "Even thought you have a good amount of Crownstones, if you have a large area to cover, you'll need more Crownstones as well.\n\nWhere you are right now, I can't see at least 3 Crownstones to do the indoor localization." },
    The_more_Crownstones_you_expl:       function() { return "The more Crownstones you have, the better the indoor localization will be. If you have a large area to cover, you'll need more Crownstones as well.\n\nWhere you are right now, I can't see at least 3 Crownstones to do the indoor localization." },
    Problem_with_localization:           function() { return "Problem with localization..." },
  },
  ProblemWithNewCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithNewCrownstone.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Checking_nearest_Crownsto:           function() { return "Checking nearest Crownstone" },
    Looking_for_setup_Crownst:           function() { return "Looking for setup Crownstones" },
    In_order_to_check_what_ma:           function() { return "In order to check what may the the problem, your phone should be nearly touching this Crownstone and it should be powered on." },
    Press_the_button_below_on:           function() { return "Press the button below once everything is ready." },
    Ready_to_Test_:                      function() { return "Ready to Test!" },
    The_nearest_Crownstone_is:           function() { return "The nearest Crownstone is in setup mode!" },
    The_nearest_Crownstone_is_:          function() { return "The nearest Crownstone is in setup mode! However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Cro:           function() { return "Only admins can setup Crownstones." },
    There_is_a_Crownstone_in_:           function() { return "There is a Crownstone in setup mode nearby!" },
    There_is_a_Crownstone_in_s:          function() { return "There is a Crownstone in setup mode nearby! However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Crow:          function() { return "Only admins can setup Crownstones." },
    I_can_hear_a_Crownstone_n:           function() { return "I can hear a Crownstone near, but it does not seem to belong to your Sphere." },
    I_can_hear_a_Crownstone_ne:          function() { return "I can hear a Crownstone near , but it does not seem to belong to your Sphere." },
    _in_:                                function() { return " in '" + arguments[0] + "'" },
    Since_you_are_not_an_admi:           function() { return "Since you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    If_it_does_belong_to_you_:           function() { return "If it does belong to you, you can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    Please_ensure_that_the_Cr:           function() { return "Please ensure that the Crownstone you're near is in fact a new one." },
    The_nearest_stone_I_can_f:           function() { return "The nearest stone I can find is " + arguments[0]},
    _with_device_:                       function() { return " with device '" },
    You_can_add_it_to_your_Sp:           function() { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
    Problem_with_new_Crownsto:           function() { return "Problem with new Crownstone..." },
    Let_me_run_a_few_more_tes:           function() { return "Let me run a few more tests..." },
  },
  ProblemWithOtherCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithOtherCrownstone.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Scanning_for_nearby_Crown:           function() { return "Scanning for nearby Crownstones" },
    If_you_think_this_is_the_:           function() { return "If you think this is the case here, go close to the Crownstone that has disappeared and press the button below." },
    Checking_for_nearby_Crown:           function() { return "Checking for nearby Crownstones..." },
    Crownstone_successfully_r:           function() { return "Crownstone successfully reset!" },
    It_will_be_in_setup_mode_:           function() { return "It will be in setup mode now. You can add it to your Sphere again from the Sphere overview.\n\nTap the button below to go there now." },
    Failed_to_reset_Crownston:           function() { return "Failed to reset Crownstone..." },
    Factory_resetting_your_lo:           function() { return "Factory resetting your lost Crownstone..." },
    This_can_happen_when_some:           function() { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nWould you like me to reset it?" },
    Something_went_wrong___:             function() { return "Something went wrong..." },
    Please_restart_the_diagno:           function() { return "Please restart the diagnostic and try again." },
    very:                                function() { return "very" },
    pretty:                              function() { return "pretty" },
    somewhat:                            function() { return "somewhat" },
    not_that:                            function() { return "not that" },
    If_this_is_not_the_one_yo:           function() { return "If this is not the one you were looking for, then take the power off it for a while and restart the diagnostic.\n\nIf this keeps happening, contact us at team@crownstone.rocks and we'll do our best to help!" },
    The_nearest_Crownstone_I_:           function() { return "The nearest Crownstone I can detect is " + arguments[0] + " and it's " + arguments[1] + " close!"},
    If_youre_sure_its_one_of_:           function() { return "If you're sure it's one of your Crownstones, you can try to factory reset it!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    The_nearest_Crownstone_is:           function() { return "The nearest Crownstone is not registered to your Sphere, and it's " + arguments[0] + " close!"},
    This_can_happen_when_some_noAdm:     function() { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nYou will have to ask an admin to reset it for you." },
    The_nearest_Crownstone_be:           function() { return "The nearest Crownstone belongs to your Sphere but it has been removed from your database.\n\nIt's " + arguments[0] + " close by." },
    Something_went_wrong_duri:           function() { return "Something went wrong during the recover process.. You can try to factory reset it yourself!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    If_this_keeps_happening__:           function() { return "If this keeps happening, contact us at team@crownstone.rocks and we'll do our best to help!" },
    I_cant_detect_any_Crownst:           function() { return "I can't detect any Crownstone nearby... You can try to take the power off it for a while and restart the diagnostic." },
    It_can_sometimes_happen_t:           function() { return "It can sometimes happen that a Crownstone that used to be in your Sphere is gone.\n\nThis does not mean it is 'Searching...' in the app. If that is what you're looking for, restart the diagnostics and select 'existing'." },
    Problem_with_missing_Crow:           function() { return "Problem with missing Crownstone..." },
  },
  Register:{
    __filename: "../js/views/startupViews/Register.tsx",
    _Invalid_Email_Address__P_header:    function() { return "Invalid Email Address" },
    _Invalid_Email_Address__P_body:      function() { return "Please double check the supplied email address." },
    _Invalid_Email_Address__P_left:      function() { return "Ok√©" },
    _Check_the_Verification_P_header:    function() { return "Check the Verification Password." },
    _Check_the_Verification_P_body:      function() { return arguments[0] },
    _Check_the_Verification_P_left:      function() { return "Ok√©" },
    _Invalid_Password_argumen_header:    function() { return "Invalid Password" },
    _Invalid_Password_argumen_body:      function() { return arguments[0] },
    _Invalid_Password_argumen_left:      function() { return "Ok√©" },
    _You_Must_Enter_a_First_N_header:    function() { return "You Must Enter a First Name." },
    _You_Must_Enter_a_First_N_body:      function() { return "Without numbers and at least 2 letters." },
    _You_Must_Enter_a_First_N_left:      function() { return "Ok√©" },
    _You_Must_Enter_a_Last_Na_header:    function() { return "You Must Enter a Last Name." },
    _You_Must_Enter_a_Last_Na_body:      function() { return "Without numbers and at least 2 letters." },
    _You_Must_Enter_a_Last_Na_left:      function() { return "Ok√©" },
    _Registration_Error_argum_header:    function() { return "Registration Error" },
    _Registration_Error_argum_body:      function() { return arguments[0] },
    _Registration_Error_argum_left:      function() { return "Ok√©" },
    ACCOUNT_INFORMATION:                 function() { return "ACCOUNT INFORMATION" },
    Email:                               function() { return "Email" },
    Password:                            function() { return "Password" },
    PROFILE_INFORMATION:                 function() { return "PROFILE INFORMATION" },
    First_Name:                          function() { return "First Name" },
    Last_Name:                           function() { return "Last Name" },
    Picture:                             function() { return "Picture" },
    Your_picture_is_used_so_o:           function() { return "Your picture is used so other people can see your face when you\'re in a room." },
    Optional:                            function() { return "Optional" },
    Next:                                function() { return "Next" },
    Your_password_must_not_be:           function() { return "Your password must not be empty." },
    Passwords_do_not_match_:             function() { return "Passwords do not match." },
    By_registering__you_agree:           function() { return "By registering, you agree to our" },
    terms_:                              function() { return "terms" },
    __:                                  function() { return "& " },
    privacy_policy:                      function() { return "privacy policy" },
    Register:                            function() { return "Register" },
  },
  RegisterConclusion:{
    __filename: "../js/views/startupViews/RegisterConclusion.tsx",
    An_email_has_been_sent_to:           function() { return "An email has been sent to:" },
    Please_click_the_link_in_:           function() { return arguments[0] ? "Please click the link in the email and follow the instructions to reset your password." : "After you click the validation link in the email, you can login to the app using your email address." },
    It_can_take_up_to_a_minut:           function() { return "It can take up to a minute for the email to be received. Make sure you check your spam folder as well." },
    OK:                                  function() { return "Ok√©" },
    Almost_Done_:                        function() { return "Almost Done!" },
  },
  ReviewInitialTests:{
    __filename: "../js/views/settingsViews/diagnostics/ReviewInitialTests.tsx",
    Problem_in_database__:               function() { return "Problem in database.." },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_disabled___:             function() { return "Scanning is disabled..." },
    Receiving_Sphere_beacons:            function() { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:           function() { return "Receiving Crownstone data" },
    Problems_found__:                    function() { return "Problems found.." },
    To_fix_this_well_have_to_:           function() { return "To fix this we'll have to fully re-sync with the Cloud. Press the button below to fix this!" },
    Restore_database:                    function() { return "Restore database" },
    Your_phone_is_currently_n:           function() { return "Your phone is currently not scanning for the beacon signals sent by the Crownstones.\n\n" + "To fix this, make sure the Bluetooth is on, the permission for Location Services is set to \"always\" and try to restart the app.\n\n" + "Press the button below to fully quit the app." },
    Quit_app_now:                        function() { return "Quit app now" },
    Running_initial_tests___:            function() { return "Running initial tests..." },
  },
  RoomAdd:{
    __filename: "../js/views/roomViews/RoomAdd.tsx",
    Creating_room___:                    function() { return "Creating room..." },
    _Room_name_must_be_at_lea_header:    function() { return "Room name must be at least 1 character long." },
    _Room_name_must_be_at_lea_body:      function() { return "Please change the name and try again." },
    _Room_name_must_be_at_lea_left:      function() { return "Ok√©" },
    _Whoops___Something_went__header:    function() { return "Whoops!" },
    _Whoops___Something_went__body:      function() { return "Something went wrong, please try again later!" },
    _Whoops___Something_went__left:      function() { return "Ok√©" },
    _Room_already_exists___Pl_header:    function() { return "Room already exists." },
    _Room_already_exists___Pl_body:      function() { return "Please change the name and try again." },
    _Room_already_exists___Pl_left:      function() { return "Ok√©" },
    Create:                              function() { return "Create" },
    NEW_ROOM:                            function() { return "NEW ROOM" },
    My_New_Room:                         function() { return "My New Room" },
    Room_Name:                           function() { return "Room Name" },
    Icon:                                function() { return "Icon" },
    Picture:                             function() { return "Picture" },
    ADD_CROWNSTONES_TO_ROOM:             function() { return "ADD CROWNSTONES TO ROOM" },
    Optional:                            function() { return "Optional" },


    You_can_select_floating_C:           function() { return "You can select floating Crownstones to immediately add them to this new room!" },
    CURRENTLY_MOVING_CROWNSTO:           function() { return "CURRENTLY MOVING CROWNSTONE" },
    Create_Room:                         function() { return "Create Room" },
  },
  RoomBanner:{
    __filename: "../js/views/components/RoomBanner.tsx",
    Not_in_Sphere:                       function() { return "Not in Sphere" },
    Nobody_Present:                      function() { return "Nobody Present" },
    No_Crownstones_in_this_ro:           function() { return "No Crownstones in this room" },
    _Crownstone:                         function() { return arguments[0] + " Crownstone" },
    _Crownstones:                        function() { return arguments[0] + " Crownstones" },
    _W:                                  function() { return arguments[0] + " W" },
  },
  RoomCircle:{
    __filename: "../js/views/components/RoomCircle.tsx",
    _W:                                  function() { return arguments[0] + " W" },
  },
  RoomDeleted:{
    __filename: "../js/views/static/RoomDeleted.tsx",
    Room_Deleted_:                       function() { return "Room Deleted." },
    Deleted:                             function() { return "Deleted" },
  },
  RoomEdit:{
    __filename: "../js/views/roomViews/RoomEdit.tsx",
    _Encountered_Cloud_Issue__header:    function() { return "Er is een Cloud-probleem opgetreden." },
    _Encountered_Cloud_Issue__body:      function() { return "We cannot delete this Room in the Cloud. Please try again later." },
    _Encountered_Cloud_Issue__left:      function() { return "Ok√©" },
    _Retrain_Room__Only_do_th_header:    function() { return "Retrain Room" },
    _Retrain_Room__Only_do_th_body:      function() { return "Only do this if you experience issues with the indoor localization." },
    _Retrain_Room__Only_do_th_left:      function() { return "Annuleren" },
    _Retrain_Room__Only_do_th_right:     function() { return "Ok√©" },
    _Are_you_sure___Removing__header:    function() { return "Are you sure?" },
    _Are_you_sure___Removing__body:      function() { return "Removing this Room will make all contained Crownstones floating." },
    _Are_you_sure___Removing__left:      function() { return "Annuleren" },
    _Are_you_sure___Removing__right:     function() { return "Remove" },
    Save:                                function() { return "Save" },
    ROOM_SETTINGS:                       function() { return "ROOM SETTINGS" },
    Room_Name:                           function() { return "Room Name" },
    Icon:                                function() { return "Icon" },
    Picture:                             function() { return "Picture" },
    INDOOR_LOCALIZATION:                 function() { return "INDOOR LOCALIZATION" },
    Optional:                            function() { return "Optional" },
    Retrain_Room:                        function() { return "Retrain Room" },
    Removing_this_room_in_the:           function() { return "Removing this room in the Cloud..." },


    If_the_indoor_localizatio:           function() { return "If the indoor localization seems off or when you have moved Crownstones around, " + "you can retrain this room so " + arguments[0] + " can find you again!" },
    Teach__to_find_you_:                 function() { return "Teach " + arguments[0] + " to find you!" },
    Teach__to_identify_when_y:           function() { return "Teach " + arguments[0] + " to identify when you\'re in this room by walking around in it." },
    You_can_only_train_this_r:           function() { return "You can only train this room if you are in this Sphere." },
    Indoor_localization_on_ro:           function() { return "Indoor localization on room-level is only possible when you have 4 or more Crownstones registered and placed in rooms." },
    Enable_indoor_localizatio:           function() { return "Enable indoor localization in the app settings to be able to train this room." },
    Remove_Room:                         function() { return "Remove Room" },
    Removing_this_Room_will_m:           function() { return "Removing this Room will make all contained Crownstones floating." },
    Edit_Room:                           function() { return "Edit Room" },
  },
  RoomExplanation:{
    __filename: "../js/views/components/RoomExplanation.tsx",
    Crownstones_in_setup_mode:           function() { return "Crownstones in setup mode have a blue icon." },
    No_Crownstones_found_:               function() { return "No Crownstones found." },
    To_add_a_Crownstones_to_y:           function() { return "To add a Crownstones to your sphere, hold your phone really close to a new one!" },
    Tap_here_to_see_all_Crown:           function() { return "Tap here to see all Crownstones without rooms!" },
    No_Crownstones_in_this_ro:           function() { return "No Crownstones in this room." },
  },
  RoomIconSelection:{
    __filename: "../js/views/roomViews/RoomIconSelection.tsx",
    Hallway:                             function() { return "Hallway" },
    Living_Room:                         function() { return "Living Room" },
    Kitchen:                             function() { return "Kitchen" },
    Bathroom:                            function() { return "Bathroom" },
    Office:                              function() { return "Office" },
    Bedroom:                             function() { return "Bedroom" },
    Garage:                              function() { return "Garage" },
    Play_Room:                           function() { return "Play Room" },
    Music_Room:                          function() { return "Music Room" },
    Nature___Outside:                    function() { return "Nature / Outside" },
    Miscellaneous:                       function() { return "Miscellaneous" },
    Pick_an_Icon:                        function() { return "Pick an Icon" },
  },
  RoomImages:{
    __filename: "../js/views/overlays/WhatsNew/2.1.0/RoomImages.tsx",
    Customize_Rooms_:                    function() { return "Customize Rooms!" },
    If_youre_the_admin_of_you:           function() { return "If you're the admin of your Sphere, this update enables to add a picture to a room!" },
  },
  RoomList:{
    __filename: "../js/views/components/RoomList.tsx",
    Number_of_Crownstones__:             function() { return "Number of Crownstones: " + arguments[0] },
  },
  RoomOverview:{
    __filename: "../js/views/roomViews/RoomOverview.tsx",
    _Lets_teach_____arguments_header:    function() { return "Lets teach " + arguments[0] + " how to identify this room!" },
    _Lets_teach_____arguments_body:      function() { return "Tap the flashing icon in the top right corner to go the edit menu and tap the button 'Teach " + arguments[0] + " to find you!'." },
    _Lets_teach_____arguments_left:      function() { return "Ok√©" },
    _Youre_not_in_the_Sphere__header:    function() { return "You're not in the Sphere" },
    _Youre_not_in_the_Sphere__body:      function() { return "Training is only possible if you're in the Sphere. Try again when you are." },
    _Youre_not_in_the_Sphere__left:      function() { return "Ok√©" },
    Floating:                            function() { return "Floating" },
    Edit:                                function() { return "Edit" },
    Train:                               function() { return "Train" },
  },
  RoomSelection:{
    __filename: "../js/views/roomViews/RoomSelection.tsx",
    ROOMS_IN_CURRENT_SPHERE:             function() { return "ROOMS IN CURRENT SPHERE" },
    Add_a_room:                          function() { return "Add a room" },
    DECOUPLE_THIS_CROWNSTONE:            function() { return "DECOUPLE THIS CROWNSTONE" },
    Not_in_a_specific_room:              function() { return "Not in a specific room" },
    If_you_do_not_add_the_Cro:           function() { return "If you do not add the Crownstone to a room, it can not be used for indoor localization purposes." },
    Move_where_:                         function() { return "Move where?" },
  },
  RoomTraining:{
    __filename: "../js/views/roomViews/RoomTraining.tsx",
    _No_Crownstones_in_range__header:    function() { return "No Crownstones in range..." },
    _No_Crownstones_in_range__body:      function() { return "To be able to identify this room, I need to see at least 3 Crownstones, but I can't see any from here... Try to reposition your Crownstones so I can see more of them." },
    _No_Crownstones_in_range__left:      function() { return "Ok√©" },
    _I_can_not_see_enough_Cro_header:    function() { return "I can not see enough Crownstones..." },
    _I_can_not_see_enough_Cro_body:      function() { return "To be able to identify this room, I need to see at least 3 Crownstones but I see only " + arguments[0] + "." + "Try to reposition your Crownstones so I can see more of them." },
    _I_can_not_see_enough_Cro_left:      function() { return "Ok√©" },
    _Do_you_want_to_cancel_tr_header:    function() { return "Do you want to cancel training?" },
    _Do_you_want_to_cancel_tr_body:      function() { return "Cancelling this process will revert it to the way it was before." },
    _Do_you_want_to_cancel_tr_left:      function() { return "No" },
    _Do_you_want_to_cancel_tr_right:     function() { return "Yes" },
    All_Done_:                           function() { return "All Done!" },
    Teaching_:                           function() { return "Teaching " + arguments[0] },
  },
  RoomTraining_explanation:{
    __filename: "../js/views/roomViews/trainingComponents/RoomTraining_explanation.tsx",
    OK__so_its_a__room__Lets_:           function() { return "OK, so it's a " + arguments[0] + " room. Let's start training " + arguments[1] + "!" },
    Walk_around_the_room_with:           function() { return "Walk around the room with your phone in your hand. " + "Try to get to every spot in the room, near the walls as well and through the center. " + "The teaching process takes " + arguments[0] + " seconds and you can see the progress on your screen." },
    Press_the_button_below_to:           function() { return "Press the button below to get started!" },
  },
  RoomTraining_finished:{
    __filename: "../js/views/roomViews/trainingComponents/RoomTraining_finished.tsx",
    Finished_learning_about_t:           function() { return "Finished learning about this room!" },
    Once_you_have_taught__all:           function() { return "Once you have taught " + arguments[0] + " all the rooms, " + arguments[1] + " will start doing " + arguments[2] + " best to determine in which room you are!\n\nPress the button below to go back!" },
  },
  RoomTraining_roomSize:{
    __filename: "../js/views/roomViews/RoomTraining_roomSize.tsx",
    To_let__find_you_in___we_:           function() { return "To let " + arguments[0] + " find you in " + arguments[1] + ", we need to help " + arguments[2] + " a little!" },
    How_large_is_this_room_:             function() { return "How large is this room?" },
    Large_rooms_take_a_bit_mo:           function() { return "Large rooms take a bit more time to learn about than small rooms." },
    Teaching_:                           function() { return "Teaching " + arguments[0] },
  },
  RoomTraining_training:{
    __filename: "../js/views/roomViews/trainingComponents/RoomTraining_training.tsx",
    Walk_around_the_room_so__:           function() { return "Walk around the room so " + arguments[0] + " can learn to locate you within it. Each beat " + arguments[1] + " learns a bit more about the room!" },
  },
  SchedulerEntry:{
    __filename: "../js/views/components/SchedulerEntry.tsx",
    __disabled_:                         function() { return " (disabled)" },
    Do_X_at:                             function() { return (arguments[0] ? "Turn on" : "Turn off") + " at " + arguments[1] },
    Mon_day_first_letter:                function() { return "M" },
    Tue_day_first_letter:                function() { return "T" },
    Wed_day_first_letter:                function() { return "W" },
    Thu_day_first_letter:                function() { return "T" },
    Fri_day_first_letter:                function() { return "F" },
    Sat_day_first_letter:                function() { return "S" },
    Sun_day_first_letter:                function() { return "S" },
  },
  SeparatedItemList:{
    __filename: "../js/views/components/SeparatedItemList.tsx",
    UNKNOWN_TYPE:                        function() { return "UNKNOWN TYPE" },
  },
  SettingConstructor:{
    __filename: "../js/util/SettingConstructor.tsx",
    _Log_out__Are_you_sure__I_header:    function() { return "Log out" },
    _Log_out__Are_you_sure__I_body:      function() { return "Are you sure? I will tidy up and close the app. Next time you open it you can log in again!" },
    _Log_out__Are_you_sure__I_left:      function() { return "Annuleren" },
    _Log_out__Are_you_sure__I_right:     function() { return "Ok√©" },
    My_Account:                          function() { return "My Account" },
    My_AccountLabel:                     function() { return "MY PROFILE" },
    Privacy:                             function() { return "Privacy" },
    PrivacyLabel:                        function() { return "You are in control of which data is shared with the cloud." },
    ConfigurationLabel:                  function() { return "CONFIGURATION" },
    Mesh_Overview:                       function() { return "Mesh Overview" },
    App_Settings:                        function() { return "App Settings" },
    Calibrate_Tap_to_Toggle:             function() { return "Calibrate Tap-to-Toggle" },
    androidWhats_new_Whats_ne:           function() { return arguments[0] ? "What's new?" : "What's new in this version?" },
    TROUBLESHOOTING:                     function() { return "TROUBLESHOOTING" },
    Diagnostics:                         function() { return "Diagnostics" },
    Help:                                function() { return "Help" },
    Log_Out:                             function() { return "Log Out" },
  },
  SettingsApp:{
      __filename: "../js/views/settingsViews/SettingsApp.tsx",
    FEATURES:                            function() { return "FEATURES" },
    Use_Tap_To_Toggle:                   function() { return "Use Tap To Toggle" },
    Tap_to_toggle_allows_you_:           function() { return "Tap to toggle allows you to hold your phone against a Crownstone to toggle it automatically!" },
    If_indoor_localization_is:           function() { return "If indoor localization is disabled, tap to toggle does only work when the app is on the screen." },
    BATTERY_USAGE:                       function() { return "BATTERY USAGE" },
    Use_Heartbeat:                       function() { return "Use Heartbeat" },
    The_heartbeat_is_part_of_:           function() { return "The heartbeat is part of the indoor localization process. Every now and then, the app will tell the Crownstones that you're still there." + "\n\nThis is used for the following behaviours:" + "\n  - Exit Sphere" + "\n  - Exit Room" + "\n\nIf you disable the heartbeat and another user is using it with the exit events, the Crownstones can turn off when that user leaves the house (according to their behaviour)." },
    The_heartbeat_is_part_of_t:          function() { return "The heartbeat is part of the indoor localization process. If indoor localization is disabled, the heartbeat will also be disabled." },
    Use_Indoor_localization:             function() { return "Use Indoor localization" },
    Indoor_localization_allow:           function() { return "Indoor localization allows the Crownstones to react to: " + "\n  - Enter/Exit Sphere" + "\n  - Enter/Exit Room" + "\n  - Your distance to the Crownstone (Near and Away) " + "\n  - Tap to Toggle" + "\n\nTo do this, the app has to run in the background. If you are in the Sphere, this can use more power than an average app." + "\n\nIf you do not wish to make use of any of the behaviours listed above, you can disable Indoor Localization and use the app as a remote control.\n\n" },
    App_Settings:                        function() { return "App Settings" },
  },
  SettingsBleDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsBleDebug.tsx",
    Any:                                 function() { return (arguments[0] ? arguments[1] : "Any") },
    You_have_to_be_in_a_spher:           function() { return "You have to be in a sphere in order to debug BLE" },
    Floating___:                         function() { return "Floating..." },
    BLE_Debug:                           function() { return "BLE Debug" },
  },
  SettingsBleTroubleshooting:{
    __filename: "../js/views/settingsViews/SettingsBleTroubleshooting.tsx",
    BLE_Troubleshooting:                 function() { return "BLE Troubleshooting" },
  },
  SettingsBleTroubleshootingAndroid:{
    __filename: "../js/views/settingsViews/troubleshooting/SettingsBleTroubleshootingAndroid.tsx",
    Troubleshooting:                     function() { return "Troubleshooting" },
    Sometimes__the_Bluetooth_:           function() { return "Sometimes, the Bluetooth on your iPhone can act up, refuse to work or be stuck on a connection." },
    Unfortunately__sometimes_:           function() { return "Unfortunately, sometimes things go wrong, and we're not allowed by the phone manufacturers reset the Bluetooth chip (and rightfully so!).\n\n" + "There are a few things you can do however, to fix most of these issues. This guide will walk you through the steps to reset your Bluetooth on iOS." },
    Im_sure_youre_all_familia:           function() { return "I'm sure you're all familiar with the Apple Control Center. If you're not, it's this one:" },
    There_is_a_Bluetooth_icon:           function() { return "There is a Bluetooth icon on there, but if you press it, you do NOT disable Bluetooth. You only tell it to stop connecting:" },
    To_reset_Bluetooth_the_ri:           function() { return "To reset Bluetooth the right way, we have to go into the settings of your iPhone by pressing on the cogwheel icon:" },
    In_the_settings_overview_:           function() { return "In the settings overview, we select the Bluetooth bar:" },
    Finally__in_the_Bluetooth:           function() { return "Finally, in the Bluetooth menu, we disable Bluetooth by tapping on the switch:" },
    The_result_should_be_:               function() { return "The result should be:" },
    You_wait_for_a_few_second:           function() { return "You wait for a few seconds and then turn Bluetooth back on. Your Bluetooth has now been restarted, which will solve most related problems.\n\n" + "If any issues persist, you can try restarting your iPhone or run the Diagnostics in the Crownstone app.\n\n" + "If none of this works for you, contact us at team@crownstone.rocks and we'd be happy to help you solve the issue!" },
    Enjoy_using_your_Crownsto:           function() { return "Enjoy using your Crownstones!" },
  },
  SettingsBleTroubleshootingIOS:{
    __filename: "../js/views/settingsViews/troubleshooting/SettingsBleTroubleshootingIOS.tsx",
    Troubleshooting:                     function() { return "Troubleshooting" },
    Sometimes__the_Bluetooth_:           function() { return "Sometimes, the Bluetooth on your iPhone can act up, refuse to work or be stuck on a connection." },
    Unfortunately__sometimes_:           function() { return "Unfortunately, sometimes things go wrong, and we're not allowed by the phone manufacturers reset the Bluetooth chip (and rightfully so!).\n\n" + "There are a few things you can do however, to fix most of these issues. This guide will walk you through the steps to reset your Bluetooth on iOS." },
    Im_sure_youre_all_familia:           function() { return "I'm sure you're all familiar with the Apple Control Center. If you're not, it's this one:" },
    There_is_a_Bluetooth_icon:           function() { return "There is a Bluetooth icon on there, but if you press it, you do NOT disable Bluetooth. You only tell it to stop connecting:" },
    To_reset_Bluetooth_the_ri:           function() { return "To reset Bluetooth the right way, we have to go into the settings of your iPhone by pressing on the cogwheel icon:" },
    In_the_settings_overview_:           function() { return "In the settings overview, we select the Bluetooth bar:" },
    Finally__in_the_Bluetooth:           function() { return "Finally, in the Bluetooth menu, we disable Bluetooth by tapping on the switch:" },
    The_result_should_be_:               function() { return "The result should be:" },
    You_wait_for_a_few_second:           function() { return "You wait for a few seconds and then turn Bluetooth back on. Your Bluetooth has now been restarted, which will solve most related problems.\n\n" + "If any issues persist, you can try restarting your iPhone or run the Diagnostics in the Crownstone app.\n\n" + "If none of this works for you, contact us at team@crownstone.rocks and we'd be happy to help you solve the issue!" },
    Enjoy_using_your_Crownsto:           function() { return "Enjoy using your Crownstones!" },
  },
  SettingsDeveloper:{
    __filename: "../js/views/settingsViews/SettingsDeveloper.tsx",
    _Clear_all_Logs___Press_O_header:    function() { return "Clear all Logs?" },
    _Clear_all_Logs___Press_O_body:      function() { return "Press OK to clear logs." },
    _Clear_all_Logs___Press_O_left:      function() { return "" },
    _Clear_all_Logs___Press_O_right:     function() { return "Ok√©" },
    _Error_during_sync__argum_header:    function() { return "Error during sync." },
    _Error_during_sync__argum_body:      function() { return arguments[0] && arguments[1] || arguments[2] },
    _Error_during_sync__argum_left:      function() { return "Ok√©" },
    _Sync_already_in_progress_header:    function() { return "Sync already in progress." },
    _Sync_already_in_progress_body:      function() { return "There already is an active syncing process running in the background. Syncing can take a long time if there are a lot op power measurements that require syncing." },
    _Sync_already_in_progress_left:      function() { return "Ok√©" },
    _Notification_Received____header:    function() { return "Notification Received!" },
    _Notification_Received____body:      function() { return "Everything is working as it should be!" },
    _Notification_Received____left:      function() { return "Great!" },
    _Nothing_Received_____May_header:    function() { return "Nothing Received..." },
    _Nothing_Received_____May_body:      function() { return "Maybe try again?" },
    _Nothing_Received_____May_left:      function() { return "OK..." },
    _Could_not_send_Request___header:    function() { return "Could not send Request!" },
    _Could_not_send_Request___body:      function() { return "There was an error. \n" + arguments[0] },
    _Could_not_send_Request___left:      function() { return "Hmm.." },
    _No_device_Id___There_was_header:    function() { return "No device Id!" },
    _No_device_Id___There_was_body:      function() { return "There was an error." },
    _No_device_Id___There_was_left:      function() { return "Hmm.." },
    _Are_you_sure___Only_enab_header:    function() { return "Are you sure?" },
    _Are_you_sure___Only_enab_body:      function() { return "Only enable this if you know what you're doing!" },
    _Are_you_sure___Only_enab_left:      function() { return "Nevermind..." },
    _Are_you_sure___Only_enab_right:     function() { return "Do it." },
    _Are_you_sure___This_will_header:    function() { return "Are you sure?" },
    _Are_you_sure___This_will_body:      function() { return "This will reset all mesh networks in the current Sphere." },
    _Are_you_sure___This_will_left:      function() { return "Do it." },
    _Reset_Done__Rediscovery__header:    function() { return "Reset Done" },
    _Reset_Done__Rediscovery__body:      function() { return "Rediscovery will start automatically." },
    _Reset_Done__Rediscovery__left:      function() { return "Ok√©" },
    _EXPERIMENTAL___Switchcra_header:    function() { return "EXPERIMENTAL!" },
    _EXPERIMENTAL___Switchcra_body:      function() { return "Switchcraft is currently in the experimental phase. It will not detect all switches, " + "it might switch accidentally or your Built-in Crownstone might be unsupported.\n\n" + "Use this at your own risk! Are you sure?" },
    _EXPERIMENTAL___Switchcra_left:      function() { return "I'll wait." },
    _EXPERIMENTAL___Switchcra_right:     function() { return "Yes." },
    Syncing___:                          function() { return "Syncing..." },
    Done_:                               function() { return "Done!" },
    Requesting_Notifications_:           function() { return "Requesting Notifications..." },
    LOGGING:                             function() { return "LOGGING" },
    Enable_Logging:                      function() { return "Enable Logging" },
    Logging_will_keep_a_histo:           function() { return "Logging will keep a history of what the app is doing for the last 3 days." },
    Logging_Configuration:               function() { return "Logging Configuration" },
    Clear_Logs_:                         function() { return "Clear Logs!" },
    Logging_will_keep_a_histor:          function() { return "Logging will keep a history of what the app is doing for the last 3 days." },
    CLOUD:                               function() { return "CLOUD" },
    Sync_Now_:                           function() { return "Sync Now!" },
    Test_Notifications:                  function() { return "Test Notifications" },
    DEBUG_VIEWS:                         function() { return "DEBUG VIEWS" },
    BLE_Debug:                           function() { return "BLE Debug" },
    Localization_Debug:                  function() { return "Localization Debug" },
    ACTIVITY_LOGS:                       function() { return "ACTIVITY LOGS" },
    Show_Full_Activity_Log:              function() { return "Show Full Activity Log" },
    Show_only_own_activity:              function() { return "Show only own activity" },
    DO_NOT_USE:                          function() { return "DO NOT USE" },
    Use_Advertisement_RSSI:              function() { return "Use Advertisement RSSI" },
    By_default_we_use_iBeacon:           function() { return "By default we use iBeacon RSSI values since they are averaged. When enabled, we will ALSO use the RSSI values from advertisements. Advertisment RSSI values only come in in the foreground." },
    MESH:                                function() { return "MESH" },
    Change_Channels:                     function() { return "Change Channels" },
    Show_RSSI_in_Topology:               function() { return "Show RSSI in Topology" },
    Reset_networks:                      function() { return "Reset networks" },
    ALPHA_FEATURES_WILL_LOOK_:           function() { return "ALPHA FEATURES WILL LOOK LIKE THIS" },
    EXPERIMENTAL_FEATURES:               function() { return "EXPERIMENTAL FEATURES" },
    Join_Alpha_Program:                  function() { return "Join Alpha Program" },
    This_will_give_you_early_:           function() { return "This will give you early access to new experimental features!" },
    RESET_DEVELOPER_STATE:               function() { return "RESET DEVELOPER STATE" },
    Disable_Developer_Mode:              function() { return "Disable Developer Mode" },
    CLOUD_URL__:                         function() { return "CLOUD URL: " + arguments[0] },
    Cancel:                              function() { return "" },
    Developer:                           function() { return "Developer" },
  },
  SettingsDiagnostics:{
    __filename: "../js/views/settingsViews/SettingsDiagnostics.tsx",
    Database_is_healthy:                 function() { return "Database is healthy" },
    Scanning_is_enabled:                 function() { return "Scanning is enabled" },
    Since_everything_communic:           function() { return "Since everything communicates via wireless signals, it is sometimes a little difficult to see what is happening if something goes wrong." },
    I_can_run_a_few_tests_to_:           function() { return "I can run a few tests to check if everything is working as intended! Press the button below to start the tests." },
    Run_diagnostics:                     function() { return "Run diagnostics" },
    Running_initial_tests___:            function() { return "Running initial tests..." },
    Diagnostics:                         function() { return "Diagnostics" },
  },
  SettingsFAQ:{
    __filename: "../js/views/settingsViews/SettingsFAQ.tsx",
    Revert_to_Cloud_Data:                function() { return "Revert to Cloud Data" },
    Reset_Crownstone:                    function() { return "Reset Crownstone" },
    Frequently_Asked_Question:           function() { return "Frequently Asked Questions\n\nHow do I ..." },
    ____add_a_Crownstone_:               function() { return "... add a Crownstone?" },
    ____add_someone_to_my_Sph:           function() { return "... add someone to my Sphere?" },
    ____create_a_room_:                  function() { return "... create a room?" },
    ____move_a_Crownstone_to_:           function() { return "... move a Crownstone to a room?" },
    ____dim_with_my_Crownston:           function() { return "... dim with my Crownstone?" },
    ____use_indoor_localizati:           function() { return "... use indoor localization?" },
    ____use_schedules_:                  function() { return "... use schedules?" },
    ____use_Switchcraft_:                function() { return "... use Switchcraft?" },
    What_to_do_if____:                   function() { return "What to do if ..." },
    ____a_new_Crownstone_wont:           function() { return "... a new Crownstone won't show up." },
    ____a_Crownstone_is_on_Se:           function() { return "... a Crownstone is on 'Searching'." },
    ____I_want_to_have_a_clea:           function() { return "... I want to have a clean install." },
    ____my_Sphere_name_is_gon:           function() { return "... my Sphere name is gone and things are weird." },
    ____it_always_says_No_Cro:           function() { return "... it always says 'No Crownstones in Range'." },
    ____the_setup_process_fai:           function() { return "... the setup process fails." },
    ____a_Crownstone_toggles_:           function() { return "... a Crownstone toggles unexpectedly." },
    ____I_need_to_factory_res:           function() { return "... I need to factory reset a Crownstone." },
    Solve_most_BLE_issues:               function() { return "Solve most BLE issues" },
    BLE_Troubleshooting:                 function() { return "BLE Troubleshooting" },
    More_help_is_available_on:           function() { return "More help is available on the website" },
    Help:                                function() { return "Help" },
    App_Store:                           function() { return "App Store" },
    Play_Store:                          function() { return "Play Store" },
    If_that_fails__quit_the_a:           function() { return "If that fails, quit the app (double tap home button and swipe it up to really close it).\n" },
    If_that_fails__quit_the_ap:          function() { return "If that fails, quit the app (Go to the side menu and select force quit).\n" },
    You_just_have_to_hold_it_:           function() { return "You just have to hold it close if the Crownstone is in setup mode:\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Hold the phone physically close to the Crownstone you want to add.\n- Select the blue bubble.\n- Tap the blue Crownstone icon to add it." },
    If_youre_an_Admin_or_Memb:           function() { return "If you're an Admin or Member you can invite people.\n\n- Go to the Settings -> Spheres\n- Select the Sphere you want to add people to.\n- Select 'Invite someone new'" },
    You_need_to_be_an_admin_o:           function() { return "You need to be an admin of the Sphere to add rooms.\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Tap the icon  with the + sign on it in the lower right corner.\n- Select add room." },
    Moving_the_Crownstone_is_:           function() { return "Moving the Crownstone is done in the Crownstone overview:\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Tap the bubble containing your Crownstone.\n- Select the Crownstone you want to move.\n- Tap 'Located in' in the top right corner." },
    Make_sure_dimming_is_enab:           function() { return "Make sure dimming is enabled on the Crownstone:\n\n- Make sure you are an Admin.\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select the Crownstone you want to dim.\n- Tap 'Edit' in the top right corner.\n- Enable the Allow Dimming switch." },
    Indoor_localization_on_ro:           function() { return "Indoor localization on room level works when you have 4 or more Crownstones. If you have less than 4, you can use home enter/exit and near/far. You set these rules per Crownstone.\n\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a Crownstone.\n- Swipe the Crownstone overview left to go to the Behaviours.\n" },
    These_can_be_found_in_the:           function() { return "These can be found in the Crownstone overview.\n\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a Crownstone.\n- Swipe the Crownstone overview left twice to go to the Schedules.\n" },
    Switchcraft_is_currently_:           function() { return "Switchcraft is currently a beta feature. You can join the Beta program by enabling this in your Account settings.\n\n- Go to the Settings -> My Account\n- Enable 'Join Beta Program'.\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a built-in Crownstone.\n- Tap 'Edit' in the top right corner.\n- Enable the 'Enable Switchcraft' switch.\n- Tap the question mark next to 'Enable Switchcraft' and follow the instructions to upgrade your wall switch.\n" },
    Make_sure_the_Crownstone_:           function() { return "Make sure the Crownstone is powered and that you're close to it. During setup mode the Crownstone is transmitting very quietly so other people can't claim your Crownstones!\n\nIf it still won't show up, you may want to try the factory reset procedure (see 'what to do if I need to factory reset a Crownstone' below)." },
    Ensure_there_is_power_on_:           function() { return "Ensure there is power on the Crownstone and that you can reach it.\n\nIf you're near (within a meter) and it is still on 'Searching' you may want to try the factory reset procedure (see 'what to do if I need to factory reset a Crownstone' below)." },
    Retry_a_few_times___If_th:           function() { return "Retry a few times.\n\nIf that fails, turn your bluetooth off and on.\n\n" + arguments[0] + "Check if there are updates available in the " + arguments[1] + ".\n\n" +
                                                  "Certain Android phones have issues with Bluetooth. If you have a different phone available, log in there with your account and use that phone to do the setup."},
    This_could_happen_due_to_:           function() { return "This could happen due to Tap-to-Toggle. If this is the case, you can retrain or disable it.\n\nRoom enter and room exit behaviour is currently not accounting for multiple users. We are working hard on much smarter behaviour that will solve this issue.\n\nSphere enter and sphere exit require you to be in range of the Crownstones as well as the app running in the background." },
    Sometimes_something_goes_:           function() { return "Sometimes something goes wrong in the persisting of the local data.\n\nTo solve this you can try to redownload the data from the Cloud. Press the button below to do this." },
    Sometimes_something_goes_w:          function() { return "Sometimes something goes wrong in the persisting of the local data.\n\nTo solve this you can try to redownload the data from the Cloud. Press the button below to do this." },
    It_could_be_that_youre_no:           function() { return "It could be that you're not close enough to the nearest Crownstone. Try going closer.\n\n" + "If that does not work, try to restarting your Bluetooth, restarting the App or even restarting your Phone.\n\n" + "If that does not work either, you can try to press the button below to resync with the Cloud. This will delete all your local preferences and replace it by the data in the Cloud." },
    Only_use_this_as_a_last_r:           function() { return "Only use this as a last resort. \n\n- Tap the button below and follow the instructions.\n" + "- If something goes wrong, read the error message. It explains what is going on." },
    FAQ:                                 function() { return "FAQ" },
  },
  SettingsFactoryResetStep1:{
    __filename: "../js/views/settingsViews/SettingsFactoryResetStep1.tsx",
    If_youre_physically_next_:           function() { return "If you're physically next to the Crownstone, you can reset it to factory defaults." },
    Please_take_the_Crownston:           function() { return "Please take the Crownstone out of the outlet, wait 5 seconds, and plug it back in. Hold your phone close to it and press Next to continue." },
    Factory_Reset:                       function() { return "Factory Reset" },
  },
  SettingsFactoryResetStep2:{
    __filename: "../js/views/settingsViews/SettingsFactoryResetStep2.tsx",
    _Crownstone_in_Setup_mode_header:    function() { return "Crownstone in Setup mode nearby." },
    _Crownstone_in_Setup_mode_body:      function() { return "We detect a Crownstone in setup mode close by, as well as one in normal mode which is already in your Sphere (" + arguments[0] + "). Do you want to try to factory reset your own Crownstone?" },
    _Crownstone_in_Setup_mode_left:      function() { return "" },
    _Crownstone_in_Setup_mode_right:     function() { return "Recover" },
    _Crownstone_in_Setup_mode__header:   function() { return "Crownstone in Setup mode nearby." },
    _Crownstone_in_Setup_mode__body:     function() { return "We detect a Crownstone in setup mode close by, as well as one in normal mode which is already in your Sphere and a bit farther away (" + arguments[0] + "). If you want to try to factory reset this one, move closer to it." },
    _Crownstone_in_Setup_mode__left:     function() { return "Ok√©" },
    _Crownstone_in_Setup_mode_n_header:  function() { return "Crownstone in Setup mode nearby." },
    _Crownstone_in_Setup_mode_n_body:    function() { return "We detect a Crownstone in setup mode close by, as well as one in normal mode that is not in your Spheres. Do you still want to try to factory reset the one in normal mode?" },
    _Crownstone_in_Setup_mode_n_left:    function() { return "" },
    _Crownstone_in_Setup_mode__right:    function() { return "Recover" },
    _Crownstone_in_Setup_mode_ne_header: function() { return "Crownstone in Setup mode nearby." },
    _Crownstone_in_Setup_mode_ne_body:   function() { return "We detect a Crownstone in setup mode close by, and one in normal mode (that is not in your Spheres) a bit further away. Do you still want to try to factory reset the one in normal mode?" },
    _Crownstone_in_Setup_mode_ne_left:   function() { return "" },
    _Crownstone_in_Setup_mode_n_right:   function() { return "Recover" },
    _No_unknown_Crownstone_ne_header:    function() { return "No unknown Crownstone nearby." },
    _No_unknown_Crownstone_ne_body:      function() { return "We detect a Crownstone that is already in your Sphere (" + arguments[0] + "). Do you want to try to factory reset your own Crownstone?" },
    _No_unknown_Crownstone_ne_left:      function() { return "" },
    _No_unknown_Crownstone_ne_right:     function() { return "Recover" },
    _No_unknown_Crownstones_f_header:    function() { return "No unknown Crownstones found." },
    _No_unknown_Crownstones_f_body:      function() { return "We detect a Crownstone that is already in your Sphere (" + arguments[0] + ") and not very close. If you want to try to factory reset this one, move closer to it." },
    _No_unknown_Crownstones_f_left:      function() { return "Ok√©" },
    _No_Crownstones_near___We_header:    function() { return "No Crownstones near." },
    _No_Crownstones_near___We_body:      function() { return "We detect a Crownstone but it's not very close by. Please move closer and try again. If you are already holding your phone very close to the Crownstone something may be wrong." },
    _No_Crownstones_near___We_left:      function() { return "Ok√©" },
    _Recovery_might_not_be_ne_header:    function() { return "Recovery might not be needed." },
    _Recovery_might_not_be_ne_body:      function() { return "We can not find a suitable Crownstone in range, though there is a Crownstone in setup mode close by. Maybe the Crownstone has already been set to factory defaults? Try adding it to your Sphere!" },
    _Recovery_might_not_be_ne_left:      function() { return "Ok√©" },
    _No_nearby_Crownstones____header:    function() { return "No nearby Crownstones." },
    _No_nearby_Crownstones____body:      function() { return "We can't find any Crownstones nearby, please follow the steps again to retry. Make sure to hold your phone close!" },
    _No_nearby_Crownstones____left:      function() { return "Ok√©" },
    _Success___This_Crownston_header:    function() { return "Success!" },
    _Success___This_Crownston_body:      function() { return "This Crownstone has been reset to factory defaults. After plugging it in and out once more, you can add it to a new Sphere." },
    _Success___This_Crownston_left:      function() { return "Ok√©" },
    _Not_in_Factory_Reset_mod_header:    function() { return "Not in Factory Reset mode." },
    _Not_in_Factory_Reset_mod_body:      function() { return "You have 20 seconds after you plug the Crownstone in to factory reset it. Please follow the steps again to retry." },
    _Not_in_Factory_Reset_mod_left:      function() { return "Ok√©" },
    _Error_during_Factory_Res_header:    function() { return "Error during Factory Reset." },
    _Error_during_Factory_Res_body:      function() { return "Please repeat the process to try again." },
    _Error_during_Factory_Res_left:      function() { return "Ok√©" },
    Hold_your_phone_next_to_t:           function() { return "Hold your phone next to the Crownstone." },
    Resettings:                          function() { return "Resettings" },
  },
  SettingsLocalizationDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsLocalizationDebug.tsx",
    You_have_to_be_in_a_Spher:           function() { return "You have to be in a Sphere" },
    _Crownstones_in_vector:              function() { return arguments[0] + " Crownstone" + (arguments[1] ? "s" : "") + " in vector" },
    Localization_Debug:                  function() { return "Localization Debug" },
  },
  SettingsLogging:{
    __filename: "../js/views/settingsViews/dev/SettingsLogging.tsx",
    SET_LOGGING_LEVELS:                  function() { return "SET LOGGING LEVELS" },
    General:                             function() { return "General" },
    Native:                              function() { return "Native" },
    Mesh:                                function() { return "Mesh" },
    Notifications:                       function() { return "Notifications" },
    Scheduler:                           function() { return "Scheduler" },
    BLE:                                 function() { return "BLE" },
    Batch_C_Handler:                     function() { return "Batch C Handler" },
    Events:                              function() { return "Events" },
    Store:                               function() { return "Store" },
    Cloud:                               function() { return "Cloud" },
    disabled:                            function() { return "disabled" },
    error:                               function() { return "error" },
    warning:                             function() { return "warning" },
    info:                                function() { return "info" },
    debug:                               function() { return "debug" },
    verbose:                             function() { return "verbose" },
    NATIVE_EXTENDED_LOGGING:             function() { return "NATIVE EXTENDED LOGGING" },
    Native_Extended_Logging:             function() { return "Native Extended Logging" },
    Basic_native_logging_is_a:           function() { return "Basic native logging is already enabled when logging is enabled in the developer menu." },
    DISABLE_LOGGING:                     function() { return "DISABLE LOGGING" },
    Disable_Logging:                     function() { return "Disable Logging" },
    Logging:                             function() { return "Logging" },
  },
  SettingsMeshDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsMeshDebug.tsx",
    _All_done___This_went_ver_header:    function() { return "All done!" },
    _All_done___This_went_ver_body:      function() { return "This went very well!" },
    _All_done___This_went_ver_left:      function() { return "Nice." },
    _Missed_one__I_could_not__header:    function() { return "Missed one" },
    _Missed_one__I_could_not__body:      function() { return "I could not change " + arguments[0] },
    _Missed_one__I_could_not__left:      function() { return "OK" },
    Any:                                 function() { return arguments[0] ? arguments[1] : "Any" },
    You_have_to_be_in_a_sphere:          function() { return "You have to be in a sphere in order to debug Mesh" },
    VISIBLE_STONES:                      function() { return "VISIBLE STONES" },
    ACTIONS:                             function() { return "ACTIONS" },
    Set_to_Channel___:                   function() { return "Set to Channel " + arguments[0] },
    Done:                                function() { return "Done" },
    Setting_Mesh_Channels_n_n:           function() { return "Setting Mesh Channels to " + arguments[0] + "\n\n(" + arguments[1] + " out of " + arguments[2] + ")" },
    Floating___:                         function() { return "Floating..." },
    Mesh_Debug:                          function() { return "Mesh Debug" },
    Setting_Mesh_Channels__St:           function() { return "Setting Mesh Channels to " + arguments[0] + "\n\nStarting..." },
  },
  SettingsMeshOverview:{
    __filename: "../js/views/settingsViews/SettingsMeshOverview.tsx",
    network:                             function() { return "Network #" + arguments[0] + ":" },
    not_in_mesh:                         function() { return "Not in Mesh:" },
    Here_you_can_see_which_Cr:           function() { return "Here you can see which Crownstones in your Sphere are connected via the Mesh." },
    It_can_take_some_time_for:           function() { return "It can take some time for me to hear what is connected to what. Make sure your phone is near Crownstones to hear they are connected to. If one Crownstone cannot see the others, try moving it closer to the nearest one." },
    Mesh_Networks_:                      function() { return "Mesh Networks:" },
    Mesh_Overview:                       function() { return "Mesh Overview" },
  },
  SettingsMeshTopology:{
    __filename: "../js/views/settingsViews/SettingsMeshTopology.tsx",
    _Refresh_Topology__While__header:    function() { return "Refresh Topology" },
    _Refresh_Topology__While__body:      function() { return "While the topology updates automatically, if you move a Crownstone out of range of the others " + "it will take a while for the connection to time out. Manually refreshing like this will speed up this process." },
    _Refresh_Topology__While__left:      function() { return "" },
    _Refresh_Topology__While__right:     function() { return "Ok√©" },
    Networks:                            function() { return "Networks" },
    Refreshing_Mesh_Topology_:           function() { return "Refreshing Mesh Topology\n\n(" + arguments[0] + " out of " + arguments[1] + ")" },
    Floating___:                         function() { return "Floating..." },
    cancel:                              function() { return "Annuleren" },
    No_Crownstones_in_Sphere_:           function() { return "No Crownstones in Sphere \"" + arguments[0] + "\" yet." },
    Mesh_Topology:                       function() { return "Mesh Topology" },
    Refreshing_Mesh_Topology_Start:      function() { return "Refreshing Mesh Topology\n\nStarting..." },
  },
  SettingsMeshTopologyHelp:{
    __filename: "../js/views/settingsViews/SettingsMeshTopologyHelp.tsx",
    Mesh_Topology:                       function() { return "Mesh Topology" },
    Crownstones_can_talk_to_e:           function() { return "Crownstones can talk to each other, and a group of Crownstones chatting makes up a mesh network." + "\n\nThey can only talk to each other if they are in range of each other. The topology view shows you which Crownstones can talk to each other." + "\n\nThe icons show the Crownstone with its device icon as shown here:" },
    Every_other_second_the_Cr:           function() { return "Every other second the Crownstones will advertise the state of other Crownstones, as well as how well they can hear them. " + "This information is gathered by your phone when the app is open (on the foreground)." + "\n\nIf your phone can hear this information from a Crownstone, the border of the circle will become green:" },
    Every_second__the_backgro:           function() { return "Every second, the background will blink green to show you you're still in range of that Crownstone." + "\n\nIf you tap on the bubble, it will expand to show you its name and the room that it's currently in:" },
    The_connectivity_among_Cr:           function() { return "The connectivity among Crownstones can only be heard directly. If there are unconnected Crownstones in the overview and " + "you want to check how well they are connected to rest of the network, you'll have to be in range of that Crownstone to check." + "\n\nAs an alternative, you can press the 'Networks' button in the top right to see which Crownstones are in which network." + "\n\nThese networks will be cleared and rediscovered every time you reopen the app as an ensurance that the mesh networks are always up te date." },
    Enjoy_the_Mesh_:                     function() { return "Enjoy the Mesh!" },
    Mesh_Help:                           function() { return "Mesh Help" },
  },
  SettingsOverview:{
    __filename: "../js/views/settingsViews/SettingsOverview.tsx",
    Crownstone_:                         function() { return "Crownstone" },
    Back:                                function() { return "Back" },
    terms_:                              function() { return "terms" },
    __:                                  function() { return "& " },
    privacy_policy:                      function() { return "privacy policy" },
    version__:                           function() { return "version: " + arguments[0] },
    Settings:                            function() { return "Settings" },
  },
  SettingsPrivacy:{
    __filename: "../js/views/settingsViews/SettingsPrivacy.tsx",
    _Phone_Details_Removed__W_header:    function() { return "Phone Details Removed" },
    _Phone_Details_Removed__W_body:      function() { return "We have removed your phone details from the Cloud." },
    _Phone_Details_Removed__W_left:      function() { return "Ok√©" },
    _Whoops___We_could_not_re_header:    function() { return "Whoops!" },
    _Whoops___We_could_not_re_body:      function() { return "We could not remove your phone details from the Cloud. Please try again later." },
    _Whoops___We_could_not_re_left:      function() { return "Ok√©" },
    You_can_choose_what_you_w:           function() { return "You can choose what you want to share with the cloud and what you prefer to keep on your phone.\n\n" + "If you have multiple users in a Sphere, sharing location is required to see them in the overview." },
    Share_location:                      function() { return "Share location" },
    Show_the_other_people_in_:           function() { return "Show the other people in your Sphere in which room you are!" },
    Share_switch_state:                  function() { return "Share switch state" },
    Show_the_other_people_in_y:          function() { return "Show the other people in your sphere if the Crownstone is on or off!" },
    Share_diagnostics:                   function() { return "Share diagnostics" },
    Help_us_gather_statistics:           function() { return "Help us gather statistics on the health of your Crownstones!" },
    Share_acitvity_logs:                 function() { return "Share acitvity logs" },
    Activity_logs_are_used_to:           function() { return "Activity logs are used to show you why a Crownstone is on or off. We make a coherent list per Crownstone using your localization events, manual switches and scheduled actions. If others in your Sphere choose not to share their activity logs, the inferred state might be wrong..." },
    Share_power_usage:                   function() { return "Share power usage" },
    Upload_frequently:                   function() { return "Upload frequently" },
    The_power_usage_data_coll:           function() { return "The power usage data collected by the app will be sent to the cloud every " + arguments[0] + " seconds. This might drain your battery faster." },
    The_power_usage_data_colle:          function() { return "The power usage data collected by the app will be sent to the cloud during sync every " + arguments[0] + " minutes." + "\n\nIf Upload frequently is enabled, it will upload every " + arguments[1] + " seconds. This might drain your battery faster." },
    If_sharing_power_usage_is:           function() { return "If sharing power usage is enabled, all updates in power usage gathered by the app will be sent to the cloud." },
    Share_phone_type_details:            function() { return "Share phone type details" },
    Help_us_improve_your_expe:           function() { return "Help us improve your experience by sharing what type of phone you have!" },
    Privacy_Policy:                      function() { return "Privacy Policy" },
    Privacy:                             function() { return "Privacy" },
  },
  SettingsProfile:{
    __filename: "../js/views/settingsViews/SettingsProfile.tsx",
    _First_name_must_be_at_le_header:    function() { return "First name must be at least 1 letter long" },
    _First_name_must_be_at_le_body:      function() { return "No numbers allowed either." },
    _First_name_must_be_at_le_left:      function() { return "Ok√©" },
    _Last_name_must_be_at_lea_header:    function() { return "Last name must be at least 1 letter long" },
    _Last_name_must_be_at_lea_body:      function() { return "No numbers allowed either." },
    _Last_name_must_be_at_lea_left:      function() { return "Ok√©" },
    _Are_you_sure_you_want_to_header:    function() { return "Are you sure you want to reset your password?" },
    _Are_you_sure_you_want_to_body:      function() { return "You will receive a password reset email with instructions at \'" + arguments[0] + "\'. You will be logged out when the email has been sent." },
    _Are_you_sure_you_want_to_left:      function() { return "Annuleren" },
    _Are_you_sure_you_want_to_right:     function() { return "Ok√©" },
    _Reset_email_has_been_sen_header:    function() { return "Reset email has been sent" },
    _Reset_email_has_been_sen_body:      function() { return "You will now be logged out. Follow the instructions in the email and log in with your new password." },
    _Reset_email_has_been_sen_left:      function() { return "Ok√©" },
    _Cannot_Send_Email_argume_header:    function() { return "Cannot Send Email" },
    _Cannot_Send_Email_argume_body:      function() { return arguments[0] },
    _Cannot_Send_Email_argume_left:      function() { return "Ok√©" },
    First_Name:                          function() { return "First Name" },
    Last_Name:                           function() { return "Last Name" },
    Email:                               function() { return "Email" },
    Change_Password:                     function() { return "Change Password" },
    Enable_Developer_Mode:               function() { return "Enable Developer Mode" },
    This_will_enable_certain_:           function() { return "This will enable certain features that are useful for developers. Only use if you know what you\'re doing." },
    Developer_Menu:                      function() { return "Developer Menu" },
    My_Account:                          function() { return "My Account" },
  },
  SettingsRedownloadFromCloud:{
    __filename: "../js/views/settingsViews/SettingsRedownloadFromCloud.tsx",
    Replace_local_data_with_C:           function() { return "Replace local data with Cloud data" },
    To_restore_your_local_dat:           function() { return "To restore your local data with the Cloud data, press the button below. If you don't want to do this, just go back to the help menu.\n\n" + "Replacing the local data with the 'fresh' Cloud data might solve some issues you experience in your app." },
    Im_sure__do_it_:                     function() { return "I'm sure, do it!" },
    Reset_from_Cloud:                    function() { return "Reset from Cloud" },
  },
  SettingsStoneBleDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsStoneBleDebug.tsx",
    iBeacon_UUID___niBeacon_M:           function() { return "iBeacon UUID: " + arguments[0] + "\n" + "iBeacon Major: " + arguments[1] + "\n" + "iBeacon Minor: " + arguments[2] + "\n" },
    Latest_iBeacon_data_:                function() { return "Latest iBeacon data:" },
    Time_received__no_data:              function() { return "Time received: " + (arguments[0] ? arguments[1] : "no data") },
    Green_Background_means_ex:           function() { return "Green Background means external state." },
    Latest_Direct_Advertiseme:           function() { return "Latest Direct Advertisement data:" },
    Latest_Applied_Advertisem:           function() { return "Latest Applied Advertisement data:" },
    No_Data:                             function() { return arguments[0] || "No Data" },
  },
  SetupDeviceEntry:{
    __filename: "../js/views/components/deviceEntries/SetupDeviceEntry.tsx",
    _You_dont_have_permission_header:    function() { return "You don't have permission" },
    _You_dont_have_permission_body:      function() { return "You can ask an admin in your Sphere to setup this Crownstone" },
    _You_dont_have_permission_left:      function() { return "Ok√©" },
    Tap_here_to_add_it_to_thi:           function() { return "Tap here to add it to this Sphere!" },
    _Very_Near_:                         function() { return "(Very Near)" },
    _Near_:                              function() { return "(Near)" },
    _Visible_:                           function() { return "(Visible)" },
    _Barely_visible_:                    function() { return "(Barely visible)" },
    _Too_far_away_:                      function() { return "(Too far away)" },
  },
  SetupShared:{
    __filename: "../js/views/settingsViews/SetupShared.tsx",
    Next:                                function() { return "Next" },
    Start_setup:                         function() { return "Start setup" },
    Skip:                                function() { return "Skip" },
    Cancel:                              function() { return "Annuleren" },
  },
  SideBar:{
    __filename: "../js/views/components/sideMenu/SideBar.tsx",
    _Are_you_sure___Crownston_header:    function() { return "Are you sure?" },
    _Are_you_sure___Crownston_body:      function() { return "Crownstones will not respond to you if you force quit the app. It will not run in the background anymore either." },
    _Are_you_sure___Crownston_left:      function() { return "Annuleren" },
    _Are_you_sure___Crownston_right:     function() { return "Ok√©" },
    Setup_localization:                  function() { return "Setup localization" },
    __New_Message__Messages:             function() { return arguments[0] ? "* New Message *" : "Messages" },
    Force_Quit:                          function() { return "Force Quit" },
    Crownstone:                          function() { return "Crownstone" },
  },
  Sphere:{
    __filename: "../js/views/main/Sphere.tsx",
    No_Crownstones_added_yet_:           function() { return "No Crownstones added yet!" },
    Ask_the_admin_of_this_Sph:           function() { return "Ask the admin of this Sphere to add some!" },
    Get_close_to_a_new_Crowns:           function() { return "Get close to a new Crownstone and it will appear here automatically!" },
    If_nothing_happens__ensur:           function() { return "If nothing happens, ensure the Crownstone is powered on and not paired with another user.\n\n" + (arguments[0] ? "More help is available under 'help' in the side menu." : "More help is available in the help menu in the settings.") },
  },
  SphereBehaviour:{
    __filename: "../js/views/main/editSubviews/SphereBehaviour.tsx",
    _5_Minutes:                          function() { return "5 Minutes" },
    _10_Minutes:                         function() { return "10 Minutes" },
    _15_Minutes:                         function() { return "15 Minutes" },
    _30_Minutes:                         function() { return "30 Minutes" },
    SPHERE_EXIT_DELAY:                   function() { return "SPHERE EXIT DELAY" },
    Delay:                               function() { return "Delay" },
    If_nobody_is_left_in_the_:           function() { return "If nobody is left in the sphere, the Crownstones that are configured to switch when you leave the sphere will do so after this delay." },
    Sphere_behaviour:                    function() { return "Sphere behaviour" },
  },
  SphereCrownstoneOverview:{
    __filename: "../js/views/main/editSubviews/SphereCrownstoneOverview.tsx",
    _Ask_your_Sphere_Admin__A_header:    function() { return "Ask your Sphere Admin" },
    _Ask_your_Sphere_Admin__A_body:      function() { return "Admins can add new Crownstones to Spheres. If you have a new Crownstone you'd like to add, ask the sphere Admin." },
    _Ask_your_Sphere_Admin__A_left:      function() { return "Ok√©" },
    There_are_no_Crownstones_:           function() { return "There are no Crownstones in this Sphere yet!" },
    This_is_an_overview_of_al:           function() { return "This is an overview of all your Crownstones. To access the settings of these Crownstones, go to their rooms and tap on them there." },
    Add_a_Crownstone:                    function() { return "Add a Crownstone" },
    CROWNSTONES_IN_:                     function() { return "CROWNSTONES IN " + arguments[0] },
    Crownstones_in_:                     function() { return "Crownstones in " + arguments[0] },
  },
  SphereDeleted:{
    __filename: "../js/views/static/SphereDeleted.tsx",
    Sphere_Deleted_:                     function() { return "Sphere Deleted." },
    Deleted:                             function() { return "Deleted" },
  },
  SphereEdit:{
    __filename: "../js/views/main/SphereEdit.tsx",
    Syncing_with_the_Cloud___:           function() { return "Syncing with the Cloud..." },
    What_can_I_help_you_with_:           function() { return "What can I help you with?" },
    Create_Sphere:                       function() { return "Create Sphere" },
    A_Sphere_contains_your_Cr:           function() { return "A Sphere contains your Crownstones, Rooms and preferences. You can add others to your Sphere so they may also use your Crownstones!" },
    Rooms:                               function() { return "Rooms" },
    Crownstones:                         function() { return "Crownstones" },
    Users:                               function() { return "Users" },
    Behaviour:                           function() { return "Behaviour" },
    Integrations:                        function() { return "Integrations" },
    Settings:                            function() { return "Settings" },
    Welcome_:                            function() { return "Welcome!" },
  },
  SphereEditSettings:{
    __filename: "../js/views/main/editSubviews/SphereEditSettings.tsx",
    Changing_sphere_name___:             function() { return "Changing sphere name..." },
    Removing_you_from_this_Sp:           function() { return "Removing you from this Sphere in the Cloud." },
    Still_Crownstones_detecte:           function() { return "Still Crownstones detected in Sphere" },
    You_can_remove_then_by_go:           function() { return "You can remove then by going to them in their rooms, tap them, click on the settings -> edit and press remove." },
    _Sphere_name_must_be_at_l_header:    function() { return "Sphere name must be at least 2 letters long" },
    _Sphere_name_must_be_at_l_body:      function() { return "Please try again." },
    _Sphere_name_must_be_at_l_left:      function() { return "Ok√©" },
    _Are_you_sure_you_want_to_header:    function() { return "Are you sure you want to leave this Sphere?" },
    _Are_you_sure_you_want_to_body:      function() { return "If you are the Sphere owner, you will have to transfer ownership first." },
    _Are_you_sure_you_want_to_left:      function() { return "No" },
    _Are_you_sure_you_want_to_right:     function() { return "Yes" },
    _Are_you_sure_you_want_to__header:   function() { return "Are you sure you want to delete this Sphere?" },
    _Are_you_sure_you_want_to__body:     function() { return "This is only possible if you have removed all Crownstones from this Sphere." },
    _Are_you_sure_you_want_to__left:     function() { return "No" },
    _Are_you_sure_you_want_to__right:    function() { return "Yes" },
    _Could_not_delete_Sphere__header:    function() { return "Could not delete Sphere!" },
    _Could_not_delete_Sphere__body:      function() { return "Please try again later." },
    _Could_not_delete_Sphere__left:      function() { return "Ok√©" },
    SPHERE_DETAILS:                      function() { return "SPHERE DETAILS" },
    Name:                                function() { return "Name" },
    PERSONAL_ARTIFICIAL_INTEL:           function() { return "PERSONAL ARTIFICIAL INTELLIGENCE" },
    _will_do__very_best_help_:           function() { return arguments[0] + " will do " + arguments[1] + " very best help you!" },
    DANGER:                              function() { return "DANGER" },
    Leave_Sphere:                        function() { return "Leave Sphere" },
    Delete_Sphere:                       function() { return "Delete Sphere" },
    This_cannot_be_undone_:              function() { return "This cannot be undone!" },
    Please_try_again_later_:             function() { return "Please try again later." },
    You_are_the_owner_of_this:           function() { return "You are the owner of this Sphere. You cannot leave without transferring ownership to another user." },
    Edit_:                               function() { return "Edit " + arguments[0] },
  },
  SphereIntegrations:{
    __filename: "../js/views/main/editSubviews/SphereIntegrations.tsx",
    _Working_on_it___Support__header:    function() { return "Working on it!" },
    _Working_on_it___Support__body:      function() { return "Support for Philips Hue will be added in a future update." },
    _Working_on_it___Support__left:      function() { return "Ok√©" },
    Here_you_can_integrate_wi:           function() { return "Here you can integrate with different services. We\'re hard at work to add more!" },
    Thermostats_:                        function() { return "Thermostats:" },
    Toon:                                function() { return "Toon" },
    Coming_Soon_:                        function() { return "Coming Soon:" },
    Philips_Hue:                         function() { return "Philips Hue" },
    Integrations:                        function() { return "Integrations" },
  },
  SphereInvitedUser:{
    __filename: "../js/views/main/editSubviews/SphereInvitedUser.tsx",
    _Lets_remind_someone___Wo_header:    function() { return "Let's remind someone!" },
    _Lets_remind_someone___Wo_body:      function() { return "Would you like me to send another invitation email?." },
    _Lets_remind_someone___Wo_left:      function() { return "No" },
    _Lets_remind_someone___Wo_right:     function() { return "Yes" },
    _Could_not_resend_email___header:    function() { return "Could not resend email.." },
    _Could_not_resend_email___body:      function() { return "Please try again later." },
    _Could_not_resend_email___left:      function() { return "Ok√©" },
    _Are_you_sure___Shall_I_r_header:    function() { return "Are you sure?" },
    _Are_you_sure___Shall_I_r_body:      function() { return "Shall I revoke the invitation?" },
    _Are_you_sure___Shall_I_r_left:      function() { return "No" },
    _Are_you_sure___Shall_I_r_right:     function() { return "Yes" },
    _Could_not_revoke_invitat_header:    function() { return "Could not revoke invitation.." },
    _Could_not_revoke_invitat_body:      function() { return "Please try again later." },
    _Could_not_revoke_invitat_left:      function() { return "Ok√©" },
    INVITE_WAS_SENT_TO:                  function() { return "INVITE WAS SENT TO" },
    MANAGE_INVITE:                       function() { return "MANAGE INVITE" },
    Resend_Invitation:                   function() { return "Resend Invitation" },
    Revoke_Invite:                       function() { return "Revoke Invite" },
    Invited_User:                        function() { return "Invited User" },
  },
  SphereOverview:{
    __filename: "../js/views/main/SphereOverview.tsx",
    Edit:                                function() { return "Edit" },
    No_Spheres_available_:               function() { return "No Spheres available." },
    Press_Edit_in_the_upper_r:           function() { return "Press Edit in the upper right corner to create your own Sphere or wait to be added to those of others." },
    Sphere_Overview:                     function() { return "Sphere Overview" },
    Hello_there_:                        function() { return "Hello there!" },
    Back:                                function() { return "Back" },
  },
  SphereRoomArranger:{
    __filename: "../js/views/main/editSubviews/SphereRoomArranger.tsx",
    Save:                                function() { return "Save" },
    Solve_Positions:                     function() { return "Solve Positions" },
    Drag_it_around_:                     function() { return "Drag it around!" },
  },
  SphereRoomOverview:{
    __filename: "../js/views/main/editSubviews/SphereRoomOverview.tsx",
    Rearrange_Rooms_:                    function() { return "Rearrange Rooms!" },
    CUSTOMIZE_LAYOUT:                    function() { return "CUSTOMIZE LAYOUT" },
    ROOMS_IN_SPHERE:                     function() { return "ROOMS IN SPHERE" },
    Add_a_room:                          function() { return "Add a room" },
    Rooms_in_:                           function() { return "Rooms in " + arguments[0] },
  },
  SphereUser:{
    __filename: "../js/views/main/editSubviews/SphereUser.tsx",
    _Something_went_wrong__Pl_header:    function() { return "Something went wrong" },
    _Something_went_wrong__Pl_body:      function() { return "Please try again later." },
    _Something_went_wrong__Pl_left:      function() { return "Ok√©" },
    _Are_you_sure_you_want_to_header:    function() { return "Are you sure you want to remove this user from the sphere?" },
    _Are_you_sure_you_want_to_body:      function() { return "User's permissions will be revoked the next time he/she logs into the app." },
    _Are_you_sure_you_want_to_left:      function() { return "No" },
    _Are_you_sure_you_want_to_right:     function() { return "Yes" },
    _Something_went_wrong__Ple_header:   function() { return "Something went wrong" },
    _Something_went_wrong__Ple_body:     function() { return "Please try again later." },
    _Something_went_wrong__Ple_left:     function() { return "Ok√©" },
    Member:                              function() { return "Member" },
    Guest:                               function() { return "Guest" },
    Admin:                               function() { return "Admin" },
    User:                                function() { return "User" },
    Email:                               function() { return "Email" },
    Access_Level:                        function() { return "Access Level" },
    REVOKE_PERMISSIONS:                  function() { return "REVOKE PERMISSIONS" },
    Remove_from_Sphere:                  function() { return "Remove from Sphere" },
    Sphere_User:                         function() { return "Sphere User" },
  },
  SphereUserInvite:{
    __filename: "../js/views/main/editSubviews/SphereUserInvite.tsx",
    _Please_provide_an_email__header:    function() { return "Please provide an email address" },
    _Please_provide_an_email__body:      function() { return "" },
    _Please_provide_an_email__left:      function() { return "Ok√©" },
    _Please_provide_a_valid_e_header:    function() { return "Please provide a valid email address" },
    _Please_provide_a_valid_e_body:      function() { return "" },
    _Please_provide_a_valid_e_left:      function() { return "Ok√©" },
    _User_already_in_Sphere___header:    function() { return "User already in Sphere" },
    _User_already_in_Sphere___body:      function() { return "A user with this email address is already in the Sphere." },
    _User_already_in_Sphere___left:      function() { return "Ok√©" },
    _Invite_has_been_sent___A_header:    function() { return "Invite has been sent!" },
    _Invite_has_been_sent___A_body:      function() { return "An email has been sent to " + arguments[0] + "." },
    _Invite_has_been_sent___A_left:      function() { return "Ok√©" },
    _Could_not_send_invite____header:    function() { return "Could not send invite.." },
    _Could_not_send_invite____body:      function() { return "Please try again later." },
    _Could_not_send_invite____left:      function() { return "Ok√©" },
    Email:                               function() { return "Email" },
    Admin:                               function() { return "Admin" },
    Member:                              function() { return "Member" },
    Guest:                               function() { return "Guest" },
    Access_Level:                        function() { return "Access Level" },
    Access_level:                        function() { return "Access level" },
    Members_can_configure_Cro:           function() { return "Members can configure Crownstones." },
    Guests_can_control_Crowns:           function() { return "Guests can control Crownstones and devices will remain on if they are the last one in the room." },
    Send_invitation_:                    function() { return "Send invitation!" },
    Invite:                              function() { return "Invite" },
  },
  SphereUserOverview:{
    __filename: "../js/views/main/editSubviews/SphereUserOverview.tsx",
    ADMINS:                              function() { return "ADMINS" },
    Admins_can_add__configure:           function() { return "Admins can add, configure and remove Crownstones and Rooms." },
    MEMBERS:                             function() { return "MEMBERS" },
    Members_can_configure_Cro:           function() { return "Members can configure Crownstones." },
    GUESTS:                              function() { return "GUESTS" },
    Guests_can_control_Crowns:           function() { return "Guests can control Crownstones and devices will remain on if they are the last one in the room." },
    ADD_MORE_PEOPLE:                     function() { return "ADD MORE PEOPLE" },
    Invite_someone_new_:                 function() { return "Invite someone new!" },
    navigation:                          function() { return "navigation" },
    Users_in_:                           function() { return "Users in " + arguments[0] },
  },
  StoneUtil: {
    __filename: "../js/util/StoneUtil.ts",
    Attempting_to_Reset_Error:           function() { return "Attempting to Reset Error..." },
    Success_:                            function() { return "Success!" },
    The_Error_has_been_reset_:           function() { return "The Error has been reset. Normal functionality is re-enabled." },
    Failed_to_reset_error___:            function() { return "Failed to reset error :(" },
    You_can_move_closer_and_t:           function() { return "You can move closer and try again or ignore the error for now." },






  },
  Splash:{
    __filename: "../js/views/startupViews/Splash.tsx",
    version__:                           function() { return "version: " + arguments[0] },
  },
  StatusCommunication:{
    __filename: "../js/views/main/StatusCommunication.tsx",
    New_Crownstone_Detected__:           function() { return "New Crownstone Detected! Tap on it!" },
    No_Crownstones_in_range_:            function() { return "No Crownstones in range." },
    I_see_:                              function() { return "I see " + arguments[0] },
    _so_the_indoor_localizati:           function() { return " so the indoor localization is running." },
    I_see_only_:                         function() { return "I see only " + arguments[0] },
    _so_I_paused_the_indoor_l:           function() { return " so I paused the indoor localization." },
    Not_all_rooms_have_been_t:           function() { return "Not all rooms have been trained so I can\'t do indoor localization." },
    Not_enough_Crownstones_pl:           function() { return "Not enough Crownstones placed in rooms to do indoor localization." },
    I_can_see_:                          function() { return "I can see " + arguments[0] },
    Looking_for_Crownstones__:           function() { return "Looking for Crownstones..." },
  },
  StoneDeleted:{
    __filename: "../js/views/static/StoneDeleted.tsx",
    Stone_Deleted_:                      function() { return "Stone Deleted." },
    Deleted:                             function() { return "Deleted" },
  },
  SwitchBar:{
    __filename: "../js/views/components/editComponents/SwitchBar.tsx",
    EXPERIMENTAL:                        function() { return arguments[0] || "EXPERIMENTAL" },
  },
  SwitchCraftInformation:{
    __filename: "../js/views/deviceViews/elements/SwitchCraftInformation.tsx",
    Switchcraft_is_a_new__exp:           function() { return "Switchcraft is a new, experimental feature of the Crownstone that allows you to switch your lights with both Crownstone and an existing wall switch." + "\n\nIt is designed for Built-in Crownstones that are mounted in a ceiling light fixture." + "\n\nUsually, if you have a Crownstone in your ceiling light and the wall switch is off, there is no power to the Crownstone so it cannot switch the light." + "\n\nLet's take a look a the situation before Crownstone:" },
    The_symbols_shown_have_th:           function() { return "The symbols shown have the following meaning:" },
    Lamp:                                function() { return "Lamp" },
    Mains:                               function() { return "Mains" },
    Switch:                              function() { return "Switch" },
    Built_in_nCrownstone:                function() { return "Built-in\nCrownstone" },
    After_installing_the_buil:           function() { return "After installing the built-in Crownstone it should look like this:" },
    The_adaptation_in_the_ima:           function() { return "The adaptation in the image above shows the required change to enable Switchcraft. Most switches have 3 ports, where each port can have 2 slots. Let's take a look a the switch below:" },
    At_the_top__where_the_bro:           function() { return "At the top, where the brown wire goes in, that's where the power comes from the mains. In most cases, there will be one wire going out: to the light." + "\n\nIn the next picture we see the adaptation " + "which will allow this switch to be used with Switchcraft:" },
    Thats_all__When_youre_goi:           function() { return "That's all! When you're going to upgrade your existing wall switches to work with Switchcraft, make sure that there is NO POWER ON THE MAINS!" + "\n\nSince this is an experimental feature, we would like to get your feedback at team@crownstone.rocks." },
    Enjoy_Switchcraft_:                  function() { return "Enjoy Switchcraft!" },
    Switchcraft:                         function() { return "Switchcraft" },
  },
  Switchcraft:{
    __filename: "../js/views/overlays/WhatsNew/2.1.0/Switchcraft.tsx",
    Introducing___:                      function() { return "Introducing..." },
    Switchcraft_allows_you_to:           function() { return "Switchcraft allows you to use most wall switches with your built-in Crownstones. " + "If the Crownstone is connected to a ceiling light, you can modify your wall switch a little to use it with the Crownstone.\n\n" + "We have tested this feature a lot and are happy with the results so far! Since we can't test all possible wall switches, Switchcraft is " + "first released as a beta feature. Go to 'My Account' and select 'Join Beta Program' to enable the Switchcraft option for built-in Crownstones!" },
  },
  SyncingSchedules:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/SyncingSchedules.tsx",
    You_can_now_download_the_:           function() { return "You can now download the schedules from the Crownstone." },
    IMPORTANT__ALL_EXISTING_S:           function() { return "IMPORTANT: ALL EXISTING SCHEDULES NEED TO BE SYNCED UPDATED." },
    Use_this_to_change_or_del:           function() { return "Use this to change or delete schedules on the Crownstone if they are not in the app." },
  },
  SyncingSchedulesToTheCloud:{
    __filename: "../js/views/overlays/WhatsNew/1.11.0/SyncingSchedulesToTheCloud.tsx",
    Schedules_are_now_synchro:           function() { return "Schedules are now synchronized between phones via the cloud!" },
    This_happens_automaticall:           function() { return "This happens automatically so everyone will see the same schedules!" },
  },
  Tabs:{
    Overview:                            function() { return "Overview" },
    Messages:                            function() { return "Messages" },
    Settings:                            function() { return "Settings" },
    Back:                                function() { return "Back" },
  },
  TapToToggleCalibration:{
    __filename: "../js/views/overlays/TapToToggleCalibration.tsx",
    Waiting_to_start_learning:           function() { return "Waiting to start learning..." },
    Finding_Tap_to_Toggle_dis:           function() { return "Finding Tap-to-Toggle distance..." },
    Learning_Tap_to_Toggle_di:           function() { return "Learning Tap-to-Toggle distance..." },
    Tap_to_toggle_means_you_c:           function() { return "Tap-to-toggle means you can switch the Crownstone just by holding your phone really close to it!" },
    This_will_only_take_a_min:           function() { return "This will only take a minute and will only have to be done once. Hold your phone really close to a Crownstone and press 'Next'." },
    Now_that_I_can_recognise_:           function() { return "Now that I can recognise it with your phone, let's try tap-to-toggle!" },
    After_you_click_Next_Ill_:           function() { return "After you click 'Next' I'll enable tap-to-toggle and you can try it out! You can recalibrate your tap-to-toggle in the settings." },
    Once_the_phone_vibrates__:           function() { return "Once the phone vibrates, it will start to toggle. If you're trying this on a built-in, make sure you enable tap-to-toggle in it's settings (Room overview -> Crownstone Overview -> Edit)." },
    Try_it_again_later_when_y:           function() { return "Try it again later when you're in your Sphere" },
    _Thats_a_bit_far_away___M_header:    function() { return "That's a bit far away." },
    _Thats_a_bit_far_away___M_body:      function() { return "Maybe try again later." },
    _Thats_a_bit_far_away___M_left:      function() { return "Ok√©" },
    _Thats_a_bit_far_away___T_header:    function() { return "That's a bit far away." },
    _Thats_a_bit_far_away___T_body:      function() { return "Try to hold your phone really close to a Crownstone and press OK to retry!" },
    _Thats_a_bit_far_away___T_left:      function() { return "Ok√©" },
    _Something_went_wrong__Ma_header:    function() { return "Something went wrong" },
    _Something_went_wrong__Ma_body:      function() { return "Maybe try again later." },
    _Something_went_wrong__Ma_left:      function() { return "Ok√©" },
    _Training_Tap_to_Toggle_L_header:    function() { return "Training Tap-to-Toggle Later" },
    _Training_Tap_to_Toggle_L_body:      function() { return arguments[0] },
    _Training_Tap_to_Toggle_L_left:      function() { return "Ok√©" },
    Next:                                function() { return "Next" },
    Finish_:                             function() { return "Finish!" },
    OK:                                  function() { return "Ok√©" },
    Now_that_youve_added_a_Cr:           function() { return "Now that you've added a Crownstone, you can use tap-to-toggle!" },
    In_order_to_use_tap_to_to:           function() { return "In order to use tap-to-toggle, you need to help me a little." },
    Calibration:                         function() { return "Calibration" },
    To_start_calibrating_tap_:           function() { return "To start calibrating tap-to-toggle, hold your phone very close to a plug and press 'Start'." },
    The_new_distance_will_be_:           function() { return "The new distance will be used for all existing plugs." },
    Start:                               function() { return "Start" },
    Great_:                              function() { return "Great!" },
    Done_:                               function() { return "Done!" },
    The_new_distance_has_been:           function() { return "The new distance has been stored." },
    Once_you_press_Done_the_n:           function() { return "Once you press 'Done' the new distance will be used for tap-to-toggle." },
    Done:                                function() { return "Done" },
    Touch_your_phone_to_the_C:           function() { return "Touch your phone to the Crownstone to trigger tap-to-toggle!" },
    Tap_to_toggle_can_only_be:           function() { return "Tap-to-toggle can only be trained if you're in a Sphere." },
    You_can_calibrate_tap_to_:           function() { return "You can calibrate tap to toggle through the settings menu any time." },
    You_can_calibrate_tap_to_t:          function() { return "You can calibrate tap to toggle through the side menu any time." },
    Back:                                function() { return "Back" },
    Using_Tap_to_Toggle:                 function() { return "Using Tap-to-Toggle" },
    Setting_it_up:                       function() { return "Setting it up" },
    Lets_give_it_a_try_:                 function() { return "Let's give it a try!" },
    Training_Tap_to_Toggle:              function() { return "Training Tap-to-Toggle" },
  },
  TimezoneScheduler:{
    __filename: "../js/views/overlays/WhatsNew/1.10.2/TimezoneScheduler.tsx",
    Schedules_now_support_day:           function() { return "Schedules now support daylight saving time and timezones." },
    IMPORTANT__ALL_EXISTING_S:           function() { return "IMPORTANT: ALL EXISTING SCHEDULES NEED TO BE SYNCED UPDATED." },
    _______________Because_th:           function() { return "Because the time sent to the Crownstone has changed,              the existing schedules will fire a the wrong time.              Sync, then change the time to fix it!" },
  },
  ToonAdd:{
    __filename: "../js/views/thirdParty/toon/ToonAdd.tsx",
    _No_Toon_Found__This_acco_header:    function() { return "No Toon Found" },
    _No_Toon_Found__This_acco_body:      function() { return "This account does not seem to have a Toon we can use...." },
    _No_Toon_Found__This_acco_left:      function() { return "Ok√©" },
    _Whoops__The_provided_cod_header:    function() { return "Whoops" },
    _Whoops__The_provided_cod_body:      function() { return "The provided code seems to be incorrect." },
    _Whoops__The_provided_cod_left:      function() { return "Ok√©" },
    _Whoops__Something_went_w_header:    function() { return "Whoops" },
    _Whoops__Something_went_w_body:      function() { return "Something went wrong... Please try again later." },
    _Whoops__Something_went_w_left:      function() { return "Ok√©" },
    paste_code_ccc:                      function() { return "paste code"},
    Submit:                              function() { return "Submit" },
    Working____:                         function() { return "Working...." },
    If_something_went_wrong__:           function() { return "If something went wrong, tap here if you want to manually input the code." },
    Connect_with_Toon_:                  function() { return "Connect with Toon!" },
    Sometimes__Toon_is_set_to:           function() { return "Sometimes, Toon is set to \"Away\" while you're still there...\n\n... but Crownstone can ensure that it is set to \"Home\" as long as you're home!" },
    This_application_uses_the:           function() { return "This application uses the Toon API, follows the guiding principles for using the Toon API, but has not been developed by Toon." },
    Toon:                                function() { return "Toon" },
  },
  ToonIsNew:{
    __filename: "../js/views/overlays/WhatsNew/2.2.0/ToonIsNew.tsx",
    Crownstone_works_with_Too:           function() { return "Crownstone works with Toon" },
    Sometimes__Toon_is_set_to:           function() { return "Sometimes, Toon is set to \"Away\" while you're still there...\n\n" + "...but Crownstone can set it to \"Home\" as long as you're home!\n\n" + "Let your phone tell Toon when it's home!\n\n\n" },
  },
  ToonOverview:{
    __filename: "../js/views/thirdParty/toon/ToonOverview.tsx",
    _Are_you_sure__You_will_h_header:    function() { return "Are you sure" },
    _Are_you_sure__You_will_h_body:      function() { return "You will have to add Toon again to undo this." },
    _Are_you_sure__You_will_h_left:      function() { return "Annuleren" },
    _Are_you_sure__You_will_h_right:     function() { return "Yes" },
    Disconnect_from_Toon:                function() { return "Disconnect from Toon" },
    This_will_remove_the_Toon:           function() { return "This will remove the Toon integration for all users in your Sphere." },
    There_are_multiple_Toons_:           function() { return "There are multiple Toon's on your account.\n\nPick one to configure it!" },
    Toon:                                function() { return "Toon" },
  },
  ToonSettings:{
    __filename: "../js/views/thirdParty/toon/ToonSettings.tsx",
    _Whoops__Something_went_w_header:    function() { return "Whoops" },
    _Whoops__Something_went_w_body:      function() { return "Something went wrong..." },
    No_schedule_available:               function() { return "No schedule available..." },
    _Whoops__Something_went_w_left:      function() { return "Ok√©" },
    _Are_you_sure__You_will_h_header:    function() { return "Are you sure" },
    _Are_you_sure__You_will_h_body:      function() { return "You will have to add Toon again to undo this." },
    _Are_you_sure__You_will_h_left:      function() { return "Annuleren" },
    _Are_you_sure__You_will_h_right:     function() { return "Yes" },
    Use_this_phone:                      function() { return "Use this phone" },
    LAST_SCHEDULE_UPDATE__:              function() { return "LAST SCHEDULE UPDATE: " + arguments[0] },
    MANUAL_UPDATE:                       function() { return "MANUAL UPDATE" },
    Update_Schedule:                     function() { return "Update Schedule" },
    We_automatically_update_t:           function() { return "We automatically update the Toon schedule once a day. You can use this to update manually." },
    Disconnect_from_Toon:                function() { return "Disconnect from Toon" },
    This_will_remove_the_Toon:           function() { return "This will remove the Toon integration for all users in your Sphere." },
    Crownstone_and_Toon_are_c:           function() { return "Crownstone and Toon are connected!" },
    Sometimes__Toon_is_set_to:           function() { return "Sometimes, Toon is set to \"Away\" while you're still there..." },
    ___but_Crownstone_can_set:           function() { return "...but Crownstone can set it to \"Home\" as long as you're home!" },
    Should_this_phone_tell_To:           function() { return "Should this phone tell Toon when it's home?" },
    This_application_uses_the:           function() { return "This application uses the Toon API, follows the guiding principles for using the Toon API, but has not been developed by Toon." },
    Toon:                                function() { return "Toon" },
  },
  Tutorial:{
    __filename: "../js/views/tutorialViews/Tutorial.tsx",
    Welcome_:                            function() { return "Welcome!" },
  },
  TutorialBehaviour:{
    __filename: "../js/views/tutorialViews/elements/TutorialBehaviour.tsx",
    Behaviour:                           function() { return "Behaviour" },
    Behaviour_of_Crownstones_:           function() { return "Behaviour of Crownstones indicates how it responds to your location." + "\n\nYou can tell the Crownstone to turn on or off when you... " + "\n\n- Enter or exit the sphere." + "\n- Get near or move away from it." + "\n- Enter or exit a room (with 4 or more)." },
  },
  TutorialDevices:{
    __filename: "../js/views/tutorialViews/elements/TutorialDevices.tsx",
    Device_Types:                        function() { return "Device Types" },
    You_can_add_a_device_type:           function() { return "You can add a device type to a Crownstone. These device types have behaviour, icons and names." + "\n\nYou can add a single device type to multiple Crownstones. Behaviour of device types will overrule behaviour of Crownstones." },
    Got_it_:                             function() { return "Got it!" },
  },
  TutorialGetStarted:{
    __filename: "../js/views/tutorialViews/elements/TutorialGetStarted.tsx",
    Let_s_get_started_:                  function() { return "Let\'s get started!" },
    In_this_introduction_we_w:           function() { return "In this introduction we will explain the basics like spheres, behaviour and permissions." + "\n\nSwipe this screen to the left for a brief introduction of the app!" },
  },
  TutorialLocalization:{
    __filename: "../js/views/tutorialViews/elements/TutorialLocalization.tsx",
    Indoor_Localization:                 function() { return "Indoor Localization" },
    Your_phone_can_determine_:           function() { return "Your phone can determine how far it is from every Crownstone." + "\n\nIf you have 4 or more Crownstones, this information can be combined to determine in which room you are." + "\n\nWe are only using the Bluetooth iBeacon messages sent from the Crownstones, not your GPS. For this, we require the background location permissions." },
  },
  TutorialSphere:{
    __filename: "../js/views/tutorialViews/elements/TutorialSphere.tsx",
    Spheres:                             function() { return "Spheres" },
    Your_sphere_is_your_colle:           function() { return "Your sphere is your collection of Crownstones. This is usually your house, office or personal space." + "\n\nOnly one sphere can be active at a time. It contains rooms, Crownstones, device types and possibly other users." + "\n\nYou can invite other people (as admins, members or guests) to your sphere so they can use your Crownstones." },
  },
  UsbSummary:{
    __filename: "../js/views/deviceViews/elements/UsbSummary.tsx",
    Tap_here_to_move_me_:                function() { return "Tap here to move me!" },
    Not_in_room:                         function() { return "Not in room" },
    Located_in_:                         function() { return "Located in:" },
  },
  WhatsNew:{
    __filename: "../js/views/overlays/WhatsNew/1.10.0/WhatsNew.tsx",
    One_of_the_new_things_is_:           function() { return "One of the new things is the What's New popup!" },
    Swipe_left_to_see_more_of:           function() { return "Swipe left to see more of the new features." },
  },
  WhatsNewOverlay:{
    __filename: "../js/views/overlays/WhatsNewOverlay.tsx",
    Your_App_was_updated_:               function() { return "Your App was updated!" },
  },
  ZoomInstructionOverlay:{
    __filename: "../js/views/main/ZoomInstructionOverlay.tsx",
    You_can_go_to_the_sphere_:           function() { return "You can go to the sphere overview just by zooming out!" },
    Youll_have_to_do_this_onc:           function() { return "You'll have to do this once to get rid of this pop up!" },
    Ill_try_it_:                         function() { return "I'll try it!" },
  },
  __UNIVERSAL: {
    Back:                                function() { return "Back" },
  }
}
