export default {
  ActivityLogItem:{
    __filename: "../js/views/deviceViews/elements/activityLog/ActivityLogItem.tsx",
    You:                           () => { return "You" },
    on:                            () => { return "on" },
    off:                           () => { return "off" },
    Someone_else:                  () => { return "Someone else" },
    Switched_:                     () => { return "Switched " },
    Dimmed_to_:                    () => { return "Dimmed to " },
    Already_:                      () => { return "Already " },
    _for_a_scheduled_action_:      () => { return " for a scheduled action." },
    _for_schedule______:           () => { return " for schedule \"" + arguments[0] + "\"." },
    __but_it_was_cancelled_by:     () => { return ", but it was cancelled by a later event." },
    Heartbeat_:                    () => { return "Heartbeat." },
    Tap_to_Toggle__:               () => { return "Tap to Toggle: " },
    _Schedule:                     () => { return " Schedule" },
    _heartbeats_:                  () => { return " heartbeats." },
    Youre_out_of_range_:           () => { return "You're out of range." },
    You_went_away_:                () => { return "You went away." },
    You_left_the_:                 () => { return "You left the " + arguments[0] + '.'},
    Someone_left_the_:             () => { return "Someone left the " + arguments[0] + '.'},
    Someone_left_the_Sphere_:      () => { return "Someone left the Sphere." },
    Someone_is_away_:              () => { return "Someone is away." },
    You_entered_the_Sphere_:       () => { return "You entered the Sphere." },
    You_are_near_:                 () => { return "You are near." },
    You_entered_the_:              () => { return "You entered the " + arguments[0] + '.'},
    Someone_entered_the_Spher:     () => { return "Someone entered the Sphere." },
    Someone_is_near_:              () => { return "Someone is near." },
    Someone_entered_the_:          () => { return "Someone entered the " + arguments[0] },
    Switch_:                       () => { return "Switch." },
    Entered_the_Sphere_:           () => { return "Entered the Sphere." },
    Left_the_Sphere_:              () => { return "Left the Sphere." },
    Entered_room_:                 () => { return "Entered room." },
    Moved_near_:                   () => { return "Moved near." },
    Left_the_room_:                () => { return "Left the room." },
    Moved_away_:                   () => { return "Moved away." },
    _told_another_Crownstone_:     () => { return arguments[0] + " told another Crownstone to tell this one that it should not change if no more heartbeats come in." },
    _told_another_Crownstone_switch: () => { return arguments[0] + " told another Crownstone to turn " + arguments[1] + " this one after " + arguments[2] + " minutes if no more heartbeats come in."},
    It_will_not_change_if_no_:     () => { return "It will not change if no more heartbeats come in." },
    It_will_change_if_no_:         () => { return "It will turn " + arguments[0] + " after " + arguments[1] + " minutes if no more heartbeats come in."; },
    _held_the_phone_so_close_:     () => { return arguments[0] + ' held the phone so close to the Crownstone that ' + arguments[1] + ' triggered Tap-to-Toggle!' },
    _heartbeats_once_every_:       () => { return arguments[0] + " heartbeats once every " + arguments[1] + " seconds." },
    Im_still__because_there_a:     () => { return "I'm still " + arguments[0] + " because there are still others in the Sphere." },
    Last_heartbeat_sent_at_:       () => { return "Last heartbeat sent at " + arguments[0] + ".";},
    ___because_everyone_left_:     () => { return arguments[0] + arguments[1] + " % because everyone left the Sphere." },
    _because_everyone_left_th:     () => { return arguments[0] + arguments[1] + " because everyone left the Sphere." },
    Sphere_heartbeat_expired_:     () => { return "Sphere heartbeat expired." },
    Thereby_cancelling_the_pr:     () => { return "Thereby cancelling the previous command." },
    The_Crownstone_switched_:      () => { return "The Crownstone switched " + arguments[0] + "."},
    Dimmed_to_arg:                 () => { return "Dimmed to " + arguments[0] + "%."},

    _told_another_Crownstone_after:() => { return arguments[0] + " told another Crownstone to switch this one " + arguments[1] + "after" },
    _told_this_Crownstone_after:() => { return arguments[0] + " told this Crownstone to switch this one " + arguments[1] + "after" },
    _minutes:                      () => { return arguments[0] + " minutes" },
    _seconds:                      () => { return arguments[0] + " seconds" },
    _because_everyone_is_away:     () => { return arguments[0] + arguments[1] + " because everyone is away from this Crownstone." },
    ___because_everyone_is_away:   () => { return arguments[0] + arguments[1] + " % because everyone is away from this Crownstone." },
    _because_everyone_left_room:   () => { return arguments[0] + arguments[1] + " because everyone left the " + arguments[2] + '.' },
    _because_everyone_left_dim_room: () => { return arguments[0] + arguments[1] + " % because everyone left the " + arguments[2] + '.' },
































  },
  AddItemsToSphere:{
    __filename: "../js/views/main/AddItemsToSphere.tsx",
    Room:                          () => { return "Room" },
    Crownstone:                    () => { return "Crownstone" },
    Person:                        () => { return "Person" },
    Something_else_:               () => { return "Something else!" },
  },
  AiStart:{
    __filename: "../js/views/startupViews/AiStart.tsx",
    Name_your_house_:              () => { return "Name your house!" },
    Thank_you_:                    () => { return "Thank you!" },
    Its_nice_to_finally_meet_:     () => { return "It's nice to finally meet you!" },
    Lets_get_started_:             () => { return "Let's get started!" },
    I_think_my_name_and_gende:     () => { return "I think my name and gender describe me perfectly too!" },
    Youre_right_:                  () => { return "You're right!" },
    This_name_is_much_better_:     () => { return "This name is much better, great choice!" },
    It_suits_you_:                 () => { return "It suits you!" },
    Youre_right__I_feel_much_:     () => { return "You're right! I feel much more like myself as a " + (arguments[0] ? "man" : "woman") + "!" },
    I_thought_so_too_:             () => { return "I thought so too!" },
    Im_a_like_whole_new_perso:     () => { return "I'm a like whole new person now! Hi! It's great to meet you!" },
    Nice_to_meet_you_too_:         () => { return "Nice to meet you too!" },
  },
  ApplianceAdd:{
    __filename: "../js/views/deviceViews/ApplianceAdd.tsx",
    Create:                        () => { return "Create" },
    NEW_DEVICE:                    () => { return "NEW DEVICE" },
    Type_Name:                     () => { return "Type Name" },
    Icon:                          () => { return "Icon" },
    The_properties_of_device_:     () => { return "The properties of device types are shared among all Crownstones that have this device plugged in. Device type behaviour overrules the Crownstone behaviour." },
  },
  ApplianceSelection:{
    __filename: "../js/views/deviceViews/ApplianceSelection.tsx",
    ALL_DEVICES:                   () => { return "ALL DEVICES" },
    ADD_DEVICE_TYPES:              () => { return "ADD DEVICE TYPES" },
    Add_a_device_type:             () => { return "Add a device type" },
    No_device_type_assigned:       () => { return "No device type assigned" },
  },
  DeviceActivityLog:{
    __filename: "../js/views/deviceViews/elements/DeviceActivityLog.tsx",
    Syncing_with_the_other_us:     () => { return "Syncing with the other users..." },
  },
  DeviceBehaviour: {
    When_you_enter_the_Sphere:     () => { return "When you enter the Sphere" },
    When_you_leave_the_Sphere:     () => { return "When you leave the Sphere" },
    When_you_enter_the_Room:       () => { return "When you enter the Room" },
    When_you_leave_the_Room:       () => { return "When you leave the Room" },
    When_you_get_near_to_Me:       () => { return "When you get near to Me" },
    When_you_move_away_from_M:     () => { return "When you move away from Me" },



  },
  DeviceBehaviourEdit:{
    __filename: "../js/views/deviceViews/DeviceBehaviourEdit.tsx",
    turn_on:                       () => { return "turn on" },
    turn_off:                      () => { return "turn off" },
    do_nothing:                    () => { return "do nothing" },
    __seconds:                     () => { return "2 seconds" },
    ___seconds:                    () => { return "30 seconds" },
    __minute:                      () => { return "1 minute" },
    __minutes:                     () => { return "5 minutes" },
    ___minutes:                    () => { return "30 minutes" },
    turn_on_after_:                () => { return "turn on after " + arguments[0] },
    turn_off_after_:               () => { return "turn off after " + arguments[0] },
    turn_on_with_delay:            () => { return "turn on with delay" },
    turn_off_with_delay:           () => { return "turn off with delay" },
    WHEN_YOU____:                  () => { return "WHEN YOU ..." },
    Leaving_the_sphere_will_b:     () => { return "Leaving the sphere will be triggered " + arguments[0] + " after leaving. You can customize this in the Sphere settings." },
    You_need_to_define_the_ne:     () => { return "You need to define the near range before you can use this feature." },
    If_there_are_people__from:     () => { return "If there are people (from your Sphere) in the room, the enter/leave events will not be triggered." },
    Since_this_Crownstone_is_:     () => { return "Since this Crownstone is not in a room, we cannot give it behaviour for entering or leaving it\'s room." },
    EXCEPTIONS:                    () => { return "EXCEPTIONS" },
    Only_turn_on_if_it_s_dark:     () => { return "Only turn on if it\'s dark outside" },
    Today__for_this_Sphere__i:     () => { return "Today, for this Sphere, it is dark outside from " + arguments[0] + " until " + arguments[1] + " in the morning." },
    More_delay_options_will_b:     () => { return "More delay options will be enabled when this Crownstone's firmware is updated. You will be notified when this is possible." },
    More_delay_options_will_be:    () => { return "More delay options will be enabled when this Crownstone's firmware is identified. This will be done automatically. Please check back later." },
    Define_the___near___dista:     () => { return "Define the \"near\" distance" },
    Tap_here_to_define___near:     () => { return "Tap here to define \"near\"" },
  },
  DeviceEdit:{
    __filename: "../js/views/deviceViews/DeviceEdit.tsx",
    Save:                          () => { return "Save" },
    PLUGGED_IN_DEVICE_TYPE:        () => { return "PLUGGED IN DEVICE TYPE" },
    Device_Type:                   () => { return "Device Type" },
    Icon:                          () => { return "Icon" },
    Decouple_Device_Type:          () => { return "Decouple Device Type" },
    This_Crownstone_is_curren:     () => { return "This Crownstone is currently using the behaviour, name and icon of this device type. Decoupling it will revert the behaviour back to the empty Crownstone configuration." },
    CURRENT_CROWNSTONE_USING_:     () => { return "CURRENT CROWNSTONE USING THIS TYPE" },
    CROWNSTONE:                    () => { return "CROWNSTONE" },
    Name:                          () => { return "Name" },
    Allow_Dimming:                 () => { return "Allow Dimming" },
    View_Dimming_Compatibilit:     () => { return "View Dimming Compatibility" },
    Dimming_can_be_enabled_pe:     () => { return "Dimming can be enabled per Crownstone. It is up to you to make sure you are not dimming anything other than lights. To do so is at your own risk." },
    Tap_to_toggle:                 () => { return "Tap to toggle" },
    Tap_to_toggle_can_be_enab:     () => { return "Tap to toggle can be enabled per Crownstone." },
    Tap_to_toggle_is_disabled:     () => { return "Tap to toggle is disabled." },
    To_use_tap_to_toggle__you:     () => { return "To use tap to toggle, you have to enable it globally in the app settings." },
    Enable_Switchcraft:            () => { return "Enable Switchcraft" },
    Use_modified_wall_switche:     () => { return "Use modified wall switches to switch both the Crownstone and the light. Tap the questionmark for more information." },
    SWITCHCRAFT:                   () => { return "SWITCHCRAFT" },
    Firmware_update_required_:     () => { return "Firmware update required." },
    Use_modified_wall_switches:    () => { return "Use modified wall switches to switch both the Crownstone and the light." },
    SELECT_WHICH_DEVICE_TYPE_:     () => { return "SELECT WHICH DEVICE TYPE IS PLUGGED IN" },
    Select___:                     () => { return "Select..." },
    A_Device_Type_has_it_s_ow:     () => { return "A Device Type has it\'s own configuration and behaviour so you can set up once and quickly apply it to one or multiple Crownstones." },
    Remove_from_Sphere:            () => { return "Remove from Sphere" },
    Removing_this_Crownstone_:     () => { return "Removing this Crownstone from its Sphere will revert it back to factory defaults (and back in setup mode)." },
    cancel:                        () => { return "cancel" },
    I_have_removed_this_Crown:     () => { return "I have removed this Crownstone from the Cloud, your Sphere and reverted it to factory defaults. After plugging it in and out once more, you can freely add it to a Sphere." },
    I_have_removed_this_Crowns:    () => { return "I have removed this Crownstone from the Cloud and your Sphere. I could not reset it back to setup mode though.. You'll need to factory reset it to put it back into setup mode." },
  },
  DeviceIconSelection:{
    __filename: "../js/views/deviceViews/DeviceIconSelection.tsx",
    __new:                         () => { return "__new" },
    Lights:                        () => { return "Lights" },
    Tech:                          () => { return "Tech" },
    Furniture:                     () => { return "Furniture" },
    Bathroom:                      () => { return "Bathroom" },
    Office:                        () => { return "Office" },
    Bedroom:                       () => { return "Bedroom" },
    Tools:                         () => { return "Tools" },
    Kitchen:                       () => { return "Kitchen" },
    Outside:                       () => { return "Outside" },
    Rides:                         () => { return "Rides" },
    Miscellaneous:                 () => { return "Miscellaneous" },
  },
  DeviceOverview:{
    __filename: "../js/views/deviceViews/DeviceOverview.tsx",
    Edit:                          () => { return "Edit" },
    Change:                        () => { return "Change" },
  },
  DeviceSchedule:{
    __filename: "../js/views/deviceViews/elements/DeviceSchedule.tsx",
    SCHEDULED_ACTIONS:             () => { return "SCHEDULED ACTIONS" },
    You_can_tell__to_switch_t:     () => { return "You can tell " + arguments[0] + " to switch this Crownstone on or off at a certain time." },
  },
  DeviceScheduleEdit:{
    __filename: "../js/views/deviceViews/DeviceScheduleEdit.tsx",
    TAP_THE_TIME_TO_CHANGE_IT:     () => { return "TAP THE TIME TO CHANGE IT" },
    PICK_A_TIME:                   () => { return "PICK A TIME" },
    Label:                         () => { return "Label" },
    ACTION:                        () => { return "ACTION" },
    Turn_the_Crownstone__:         () => { return "Turn the Crownstone: " },
    On:                            () => { return "On" },
    Off:                           () => { return "Off" },
    REPEAT:                        () => { return "REPEAT" },
    SCHEDULING_OPTIONS:            () => { return "SCHEDULING OPTIONS" },
    Schedule_active:               () => { return "Schedule active" },
    Remove:                        () => { return "Remove" },
    Setting_the_Schedule_on_t:     () => { return "Setting the Schedule on the Crownstone!" },
    Activating_the_Schedule_o:     () => { return "Activating the Schedule on the Crownstone!" },
    Add_Schedule:                  () => { return "Add Schedule" },
    Create:                        () => { return "Create" },
    Edit_Schedule:                 () => { return "Edit Schedule" },
    Save:                          () => { return "Save" },
    I_could_not_set_the_Sched:     () => { return "I could not set the Schedule on the Crownstone... Would you like to try again? Make sure you\'re in range of the Crownstone! If you press no, you will have to add it again later." },
    I_could_not_activate_the_:     () => { return "I could not activate the Schedule on the Crownstone... Would you like to try again? Make sure you\'re in range of the Crownstone! If you press no, your changes will be reverted." },
  },
  DeviceSummary:{
    __filename: "../js/views/deviceViews/elements/DeviceSummary.tsx",
    Energy_Usage_:                 () => { return "Energy Usage:" },
    Turn_On:                       () => { return "Turn On" },
    Turn_Off:                      () => { return "Turn Off" },
    Location_:                     () => { return "Location:" },
    Not_in_room:                   () => { return "Not in room" },
    Located_in_:                   () => { return "Located in:" },
    Tap_here_to_move_me_:          () => { return "Tap here to move me!" },
    The_dimmer_is_starting_up:     () => { return "The dimmer is starting up!\nI'll dim as soon as I can!" },
    tap_icon_to_set_device_ty:     () => { return "tap icon to set device type" },



  },
  DfuDeviceEntry:{
    __filename: "../js/views/components/deviceEntries/DfuDeviceEntry.tsx",
    Tap_here_to_configure_me_:     () => { return "Tap here to configure me!" },
  },
  DfuOverlay:{
    __filename: "../js/views/overlays/DfuOverlay.tsx",
    Update_Available:              () => { return "Update Available" },
    There_is_an_update_availa:     () => { return "There is an update available for your Crownstone!" },
    This_process_may_take_a_f:     () => { return "This process may take a few minutes. Please stay close to the Crownstone until it is finished. Tap next to see whats new!" },
    Next:                          () => { return "Next" },
    Downloading_Updates:           () => { return "Downloading Updates" },
    Downloading_updates_from_:     () => { return "Downloading updates from cloud..." },
    Download_Complete:             () => { return "Download Complete" },
    Downloading_complete_:         () => { return "Downloading complete!" },
    Moving_on_:                    () => { return "Moving on!" },
    Searching:                     () => { return "Searching" },
    Looking_for_Crownstone__:      () => { return "Looking for Crownstone.." },
    Abort:                         () => { return "Abort" },
    Please_move_a_little_clos:     () => { return "Please move a little closer to it!" },
    Please_hold_your_phone_as:     () => { return "Please hold your phone as close to it as possible!" },
    Preparing_Crownstone:          () => { return "Preparing Crownstone" },
    Putting_the_Crownstone_in:     () => { return "Putting the Crownstone in update mode now..." },
    Updating_Crownstone:           () => { return "Updating Crownstone" },
    Update_is_in_progress__Pl:     () => { return "Update is in progress. Please stay close to the Crownstone." },
    Updating_Done_:                () => { return "Updating Done!" },
    Everything_is_finished__e:     () => { return "Everything is finished, enjoy the new version!" },
    Thanks_:                       () => { return "Thanks!" },
    Update_failed___:              () => { return "Update failed..." },
    OK:                            () => { return "OK" },
    We_could_not_download_the:     () => { return "We could not download the requested firmware version from the Cloud. Please try again later." },
    Success__But___:               () => { return "Success, But..." },
    The_update_was_successful:     () => { return "The update was successful but something went wrong with the setup phase afterwards. You can just setup it like a normal Crownstone to finalize the process." },
    OK_:                           () => { return "OK!" },
    Could_not_download_releas:     () => { return "Could not download release notes." },
    Release_notes_not_availab:     () => { return "Release notes not available." },
    determining___:                () => { return "determining..." },
    setting_up___:                 () => { return "setting up..." },
  },
  DiagnosticUtil:{
    __filename: "../js/views/settingsViews/diagnostics/DiagnosticUtil.tsx",
    To_Mesh_Topology:              () => { return "To Mesh Topology" },
    OK:                            () => { return "OK" },
    Go_to_Overview:                () => { return "Go to Overview" },
    Quit_app_now:                  () => { return "Quit app now" },
    Open_Troubleshooter:           () => { return "Open Troubleshooter" },
    To_Help_screen:                () => { return "To Help screen" },
    Which_Crownstone_is_givin:     () => { return "Which Crownstone is giving problems?" },
    Scroll_down_to_see_all_of:     () => { return "Scroll down to see all of them." },
    _in_:                          () => { return " in " + arguments[0] },
  },
  DimmerButton:{
    __filename: "../js/views/components/DimmerButton.tsx",
    Turn_On:                       () => { return "Turn On" },
    Turn_Off:                      () => { return "Turn Off" },
  },
  EditableItem:{
    __filename: "../js/views/components/EditableItem.tsx",
  },
  GuidestoneSummary:{
    __filename: "../js/views/deviceViews/elements/GuidestoneSummary.tsx",
    Tap_here_to_move_me_:          () => { return "Tap here to move me!" },
    Not_in_room:                   () => { return "Not in room" },
    Located_in_:                   () => { return "Located in:" },
  },
  IconButton:{
    __filename: "../js/views/components/IconButton.tsx",
    small:                         () => { return "small" },
  },
  InSphere:{
    __filename: "../js/views/settingsViews/diagnostics/InSphere.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Perhaps_the_Help_menu_can:     () => { return "Perhaps the Help menu can help you further." },
    Everything_is_working_pro:     () => { return "Everything is working properly." },
    You_can_close_the_diagnos:     () => { return "You can close the diagnostics now.\n\nPress the button below to go back." },
    What_are_you_having_probl:     () => { return "What are you having problems with?" },
    Scroll_down_to_see_all_op:     () => { return "Scroll down to see all options." },
    You_re_in_your_sphere_and:     () => { return "You're in your Sphere, and scanning is working as it should be." },
    Are_you_experiencing_any_:     () => { return "Are you experiencing any problems?" },
    You_do_not_have_permissio:     () => { return "You do not have permission to invite users to this Sphere...." },
    You_will_have_to_ask_a_me:     () => { return "You will have to ask a member or an admin to invite other users." },
    You_can_add_people_to_thi:     () => { return "You can add people to this Sphere by tapping on the '+' button in the lower right hand corner of the Sphere overview." },
    Alternatively_you_can_tap:     () => { return "Alternatively, you can tap 'Edit' in the top right hand corner of the Sphere overview." },
    Alternatively_you_can_send:    () => { return "Alternatively you can send us an email at team@crownstone.rocks and we'll do our best to help you!" },
    aCrownstone:                   () => { return "A Crownstone." },
    theIndoorLocalization:         () => { return "The indoor localization." },
    invitingUsers:                 () => { return "Inviting users." },
    other___:                      () => { return "Other..." },
  },
  Login:{
    __filename: "../js/views/startupViews/Login.tsx",
    Logging_in___:                 () => { return "Logging in..." },
    Cannot_Send_Email:             () => { return "Cannot Send Email" },
    Unknown_Email:                 () => { return "Unknown Email" },
    emailemail_address:            () => { return "email" },
    password____:                  () => { return "password" },
    Getting_user_data_:            () => { return "Getting user data." },
    Received_user_data_:           () => { return "Received user data." },
    Handle_profile_picture_:       () => { return "Handle profile picture." },
    Syncing_with_the_Cloud_:       () => { return "Syncing with the Cloud." },
    Creating_first_Sphere_:        () => { return "Creating first Sphere." },
    Sphere_available_:             () => { return "Sphere available." },
    Done:                          () => { return "Done" },
  },
  MessageAdd:{
    __filename: "../js/views/messaging/MessageAdd.tsx",
    Create:                        () => { return "Create" },
    IN_A_ROOM:                     () => { return "IN A ROOM" },
    ANYWHERE_IN_THE_SPHERE:        () => { return "ANYWHERE IN THE SPHERE" },
    EVERYONE_IN_YOUR_SPHERE:       () => { return "EVERYONE IN YOUR SPHERE" },
    Everyone_in_the_Sphere:        () => { return "Everyone in the Sphere" },
    SPECIFIC_USERS:                () => { return "SPECIFIC USERS" },
    MESSAGE:                       () => { return "MESSAGE" },
    Your_message___:               () => { return "Your message..." },
    __________:                    () => { return "( " + arguments[0] + " / 140 )" },
    RECIPIENTS:                    () => { return "RECIPIENTS" },
    Including_you:                 () => { return "Including you" },
    Add_recipient:                 () => { return "Add recipient" },
    LEAVE_MESSAGE_IN:              () => { return "LEAVE MESSAGE IN" },
    Select:                        () => { return "Select" },
    WHEN_SHOULD_IT_BE_DELIVER:     () => { return "WHEN SHOULD IT BE DELIVERED" },
    Deliver_message_on:            () => { return "Deliver message on" },
    Entering:                      () => { return "Entering" },
    Exiting:                       () => { return "Exiting" },
    When_entering_is_selected:     () => { return "When entering is selected and the user is already there, the message will also be delivered!" },
  },
  MessageEntry:{
    __filename: "../js/views/messaging/MessageEntry.tsx",
    Unknown_User:                  () => { return "Unknown User" },
    You:                           () => { return "You" },
    Everyone_in_:                  () => { return "Everyone in " + arguments[0] },
    __:                            () => { return ", " + arguments[0] },
    _and_:                         () => { return " and " + arguments[0] },
  },
  MessageInbox:{
    __filename: "../js/views/messaging/MessageInbox.tsx",
    MESSAGES:                      () => { return "MESSAGES" },
    Messages:                      () => { return "Messages" },
    _in_:                          () => { return " in " + arguments[0] },
  },
  NoStones:{
    __filename: "../js/views/settingsViews/diagnostics/NoStones.tsx",
    If_the_Crownstone_has_pow:     () => { return "If the Crownstone has power, and my scanning is working fine... You can try to take the power off the Crownstone and restarting your phone." },
    If_none_of_these_work_this:    () => { return "If none of these work, this Crownstone may be broken.\n\nContact us at team@crownstone.rocks and we'll do our best to help you!" },
    The_Crownstone_needs_powe:     () => { return "The Crownstone needs power to work." },
    There_is_a_Crownstone_in_:     () => { return "There is a Crownstone in setup mode nearby!" },
    There_is_a_Crownstone_in_s:    () => { return "There is a Crownstone in setup mode nearby. However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Cro:     () => { return "Only admins can setup Crownstones." },
    I_can_hear_a_Crownstone__:     () => { return "I can hear a Crownstone, but it does not seem to belong to your Sphere." },
    Are_you_visiting_a_friends:    () => { return "Are you visiting a friend's Sphere?" },
    If_you_want_to_join_a_friend:  () => { return "If you want to join a friend's Sphere, they will need to invite you." },
    Once_they_invite_you__you:     () => { return "Once they invite you, you can use their Crownstones!." },
    Please_ensure_the_Crownstone:  () => { return "Please ensure the Crownstone is powered and rerun the diagnostic if you still can't see it." },
    Are_you_near_a_Crownstone:     () => { return "Are you near a Crownstone?" },
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Searching_for_Crownstones:     () => { return "Searching for Crownstones" },
    You_re_near_a_Crownstone_but:  () => { return "You're near a Crownstone but I can't hear it. I am picking up other Bluetooth signals however. Are you sure the Crownstone has power?" },
    You_re_near_a_crownstone_:     () => { return "You're near a Crownstone and I'm not detecting any BLE signals, Crownstones or otherwise..." },
    It_could_be_that_your_phone:   () => { return "It could be that your phone's scanning has stopped.\n\nTap the button below to start the troubleshooter." },
    I_m_not_detecting_anythin:     () => { return "I'm not detecting anything and you're not near any Crownstones, everything should be OK!" },
    You_can_add_it_to_your_sphere: () => { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
    Since_you_are_not_an_admin:    () => { return "Since you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    Im_not_picking_up_anything:    () => { return "I'm not picking up anything on my Bluetooth scan, Crownstone or otherwise." },
    Im_not_picking_up_any:         () => { return "I'm not picking up any Crownstones, but I am receiving other Bluetooth advertisements so my scanning should be working fine." },
    if_it_does_belong_to_you:      () => { return "If it does belong to you, you can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
  },
  NotInSphere:{
    __filename: "../js/views/settingsViews/diagnostics/NotInSphere.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Listening_for_Crownstones:     () => { return "Listening for Crownstones" },
    This_can_happen_if_there_:     () => { return "This can happen if there is a miscommunication between your phone and the app. Try restarting both to fix this problem." },
    Only_admins_can_setup_Cro:     () => { return "Only admins can setup Crownstones." },
    In_this_case__you_can_try:     () => { return "In this case, you can try to restart the app, Bluetooth and/or your phone.\n\nTap the button below to start the troubleshooter." },
    Once_they_invite_you__you:     () => { return "Once they invite you, you can use their Crownstones!." },
    I_can_hear_a_Crownstone__:     () => { return "I can hear a Crownstone, but it does not seem to belong to your Sphere." },
    In_that_case__everything_:     () => { return "In that case, everything seems to be working as it should be!" },
    If_you_have_any_questions:     () => { return "If you have any questions you can take a look at the Help menu, or run the diagnostic again when you're in your Sphere." },
    It_could_be_that_your_phone:   () => { return "It could be that your phone's scanning has stopped.\n\nTap the button below to start the troubleshooter." },
    So_far_so_good__n_nAre_yo:     () => { return "So far so good!\n\nAre you in a Sphere right now?" },
    I_m_not_picking_up_anythi:     () => { return "I'm not picking up anything on my Bluetooth scan, Crownstone or otherwise." },
    _close_to_your_Crownstone:     () => { return "(close to your Crownstones)" },
    This_can_happen_if_there_i:    () => { return "This can happen if there is a miscommunication between your phone and the app. Try restarting both to fix this problem.\n\n" +
                                                  "If this persists, your Crownstones may be unpowered or defective. Contact us at team@crownstone.rocks for more assistance." },
    Im_not_picking_up_any_Crow:    () => { return "I'm not picking up any Crownstones, but I am receiving other Bluetooth advertisements so my scanning should be working fine." },
    Are_you_visiting_a_friends:    () => { return "Are you visiting a friend's Sphere?" },
    If_you_want_to_join_a_frie:    () => { return "If you want to join a friend's Sphere, they will need to invite you." },
    I_can_hear_a_Crownstone__b:    () => { return "I can hear a Crownstone, but it does not seem to belong to your Sphere.\n\nSince you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    I_can_hear_a_Crownstone__noAdm:() => { return "I can hear a Crownstone, but it does not seem to belong to your Sphere.\n\nIf it does belong to you, you can try to factory reset it." },
    Tap_the_button_below_to_go:    () => { return "Tap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    I_can_hear_a_Crownstone_bu:    () => { return "I can hear a Crownstone but the app does not think you're in a Sphere." },
    I_cant_hear_any_of_your_Cr:    () => { return "I can't hear any of your Crownstones, nor beacon signals from your Sphere.\n\nThere is a Crownstone in setup mode nearby. However, you do not have any Spheres in which you are an Admin." },
    You_can_add_it_to_your_Sph:    () => { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
    I_cant_hear_any_of_your_Cr_adm:() => { return "I can't hear any of your Crownstones, nor beacon signals from your Sphere. But there is a Crownstone in setup mode nearby!" },
    Im_picking_up_data_from_y:     () => { return "I'm picking up data from your Crownstones, but no beacon signals from your Sphere." },
    This_can_be_bad_timing_or:     () => { return "This can be bad timing or this can happen if someone has removed a Crownstone from your Sphere without telling it to forget your Sphere.\n\n" +
                                                  "If this happens more often, you can factory reset the Crownstone that was wrongly removed.\n\n" +
                                                  "To do this, tap the button below to go to the Help menu and tap on 'I need to factory reset a Crownstone'." },
    Im_picking_up_beacon_sign:     () => { return "I'm picking up beacon signals from your Sphere, but no data from your Crownstones." },
    This_can_happen_if_someon:     () => { return "This can happen if someone has removed a Crownstone from your Sphere without telling it to forget your Sphere.\n\nYou should ask the admin of your Sphere to factory reset this Crownstone." },
  },
  PictureCircle:{
    __filename: "../js/views/components/PictureCircle.tsx",
    Can_t_make_a_picture_with:     () => { return "Can\'t make a picture without camera permission. You'll need to enable this in the Android settings menu (of your phone, not in the app)!" },
    Cant_take_a_picture_witho:     () => { return "Can't take a picture without permission!" },
    Can_t_read_a_stored_pictu:     () => { return "Can\'t read a stored picture without permission!" },
    Can_t_store_a_captured_pi:     () => { return "Can\'t store a captured picture without permission!" },
  },
  PictureView:{
    __filename: "../js/views/cameraViews/PictureView.tsx",
    Done:                          () => { return "Done" },
  },
  ProblemWithCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithCrownstone.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Is_the_problem_with_a_new:     () => { return "Is the problem with a new or an existing Crownstone?" },
  },
  ProblemWithExistingCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithExistingCrownstone.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Looking_for_beacon:            () => { return "Looking for beacon" },
    Looking_for_data:              () => { return "Looking for data" },
    Looking_for_mesh:              () => { return "Looking for mesh" },
    Looking_for_address:           () => { return "Looking for address" },
    Checking_mesh:                 () => { return "Checking mesh" },
    Switching_Crownstone:          () => { return "Switching Crownstone" },
    Are_you_close_to_it_:          () => { return "Are you close to it?" },
    It_could_just_be_out_of_r:     () => { return "It could just be out of range, could you hold your phone as close as possible?" },
    Press_the_button_to_conti:     () => { return "Press the button to continue?" },
    OK__we_can_do_it_later_:       () => { return "OK, we can do it later!" },
    Crownstone_successfully_r:     () => { return "Crownstone successfully reset!" },
    It_will_be_in_setup_mode_:     () => { return "It will be in setup mode now. You can add it to your Sphere again from the Sphere overview.\n\nTap the button below to go there now." },
    Failed_to_reset_Crownston:     () => { return "Failed to reset Crownstone..." },
    Factory_resetting_your_lo:     () => { return "Factory resetting your lost Crownstone..." },
    This_can_happen_when_some:     () => { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nWould you like me to reset it?" },
    OK__done_:                     () => { return "OK, done!" },
    Power_has_been_cycled_:        () => { return "Power has been cycled." },
    Contact_us_at_team_crowns:     () => { return "Contact us at team@crownstone.rocks for further assistance." },
    I_can_see_this_Crownstone:     () => { return "I can see this Crownstone perfectly!" },
    I_see_what_you_mean__:         () => { return "I see what you mean.." },
    I_can_hear_other_Crownsto:     () => { return "I can hear other Crownstones talking about this one!" },
    I_can_hear_this_Crownston:     () => { return "I can hear this Crownstone broadcasting the state of his fellow Crownstones." },
    This_is_usually_because_t:     () => { return "This is usually because the message has to go through the mesh network." },
    Something_went_wrong_:         () => { return "Something went wrong." },
    Please_restart_the_diagno:     () => { return "Please restart the diagnostic." },
    This_Crownstone_seems_to_:     () => { return "This Crownstone seems to have a hardware error." },
    Someone_has_locked_this_C:     () => { return "Someone has locked this Crownstone." },
    A_Crownstone_can_be_locke:     () => { return "A Crownstone can be locked to prevent it from switching. You can disable the lock by going to the Device settings (tap on room, tap on Crownstone) and holding your finger on the button." },
    Someone_has_locked_this_Cr:    () => { return "Someone has locked this Crownstone." },
    Let_me_try_to_switch_this:     () => { return "Let me try to switch this Crownstone." },
    No_problem__maybe_next_ti:     () => { return "No problem, maybe next time!" },
    OK:                            () => { return "OK" },
    I_see____It_failed_to_swi:     () => { return "I see... It failed to switch." },
    It_could_be_this_Crownsto:     () => { return "It could be this Crownstone or it could be your phone. Can you swith another Crownstone successfully?" },
    Could_you_try_restarting_:     () => { return "Could you try restarting the Crownstone?" },
    It_looks_like_I_can_switc:     () => { return "It looks like I can switch it OK, could you verify that it was switched?" },
    Did_it_switch_successfull:     () => { return "Did it switch successfully?" },
    It_could_be_that_the_conn:     () => { return "It could be that the connected device is broken.." },
    If_you_try_it_with_a_simp:     () => { return "If you try it with a simple light (which works on another outlet), did it switch successfully?" },
    Glad_it_works_now_:            () => { return "Glad it works now!" },
    In_that_case__this_Crowns:     () => { return "In that case, this Crownstone may be broken." },
    Contact_us_at_team_crownst:    () => { return "Contact us at team@crownstone.rocks for assistance." },
    Glad_it_works_:                () => { return "Glad it works!" },
    It_could_just_be_out_of_ra:    () => { return "It could just be out of range, could you hold your phone as close as possible?" },
    Press_the_button_to_contin:    () => { return "Press the button to continue." },
    Scroll_down_to_see_all_op:     () => { return "Scroll down to see all options." },
    You_can_look_at_the_Activ:     () => { return "You can look at the Activity Log to see why the Crownstone switched.\n\nAnother possible cause is that Switchcraft is enabled for this Crownstone." },
    We_have_recently_added_an:     () => { return "We have recently added an Activity Log just for this!" },
    You_can_find_it_in_the_st:     () => { return "You can find it in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    Weird_how_:                    () => { return "Weird how?" },
    You_can_take_a_look_at_th:     () => { return "You can take a look at the help menu or let us know how we can help you and improve the app by sending an email at team@crownstone.rocks!" },
    This_differs_from_phone_t:     () => { return "This differs from phone to phone. Press the button to go to the BLE troubleshooter." },
    Perhaps_the_Help_menu_can:     () => { return "Perhaps the Help menu can help you further." },
    Settings:                      () => { return "Settings" },
    Sidebar_:                      () => { return "Sidebar." },
    I_cant_hear_this_Crownsto:     () => { return "I can't hear this Crownstone at all..." },
    Try_disconnecting_its_pow:     () => { return "Try disconnecting it's power, then wait 5 seconds, make sure it's powered again, wait 5 more seconds and press the button below." },
    very:                          () => { return "very" },
    pretty:                        () => { return "pretty" },
    somewhat:                      () => { return "somewhat" },
    not_that:                      () => { return "not that" },
    The_nearest_Crownstone_I_:     () => { return "The nearest Crownstone I can detect is " + arguments[0] + " and it's " + arguments[1] + " close!" },
    If_youre_sure_youre_near_:     () => { return "If you're sure you're near the right Crownstone, Try disconnecting it's power, then wait 5 seconds, make sure it's powered again, wait 5 more seconds and press the button below." },
    I_didnt_hear_it_via_the_o:     () => { return "I didn't hear it via the other Crownstones right now, but it is connected to the mesh. This if normal, as Crownstones take turns to broadcast eachothers's state." },
    I_didnt_hear_it_via_the_m:     () => { return "I didn't hear it via the mesh though. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_me:    () => { return "I didn't hear it via the mesh though. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_mes:   () => { return "I didn't hear it via the mesh right now.. This could be just a momentary issue as Crownstones take turns to broadcast eachothers's state." },
    I_didnt_hear_it_via_the_mesh:  () => { return "I didn't hear it via the mesh though. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh." },
    I_didnt_hear_it_via_the_mesh_: () => { return "I didn't hear it via the mesh though. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh." },
    I_cant_hear_it_via_the_me:     () => { return "I can't hear it via the mesh but it was in the network. From where I am, I can only hear this Crownstone so maybe it's not close enough enough to other Crownstones to form a mesh?\n\n" },
    I_cant_hear_it_via_the_mes:    () => { return "I can't hear it via the mesh nor is it currently in one. From where I am, I can only hear this Crownstone so it's unlikely that it's close enough to other Crownstones to form a mesh.\n\n" },
    I_cant_hear_it_via_the_mesh:   () => { return "I can't hear it via the mesh nor is it currently in one. From where I am, I can a few Crownstones but it could be too far from the other Crownstones to form a mesh.\n\n" },
    You_can_try_moving_it_clo:     () => { return "You can try moving it closer or adding more Crownstones to your network. You can use the Mesh Topology view to see how well the mesh is connected. It's in the " },
    Settings_:                     () => { return "Settings." },
    It_is_in_the_mesh__You_ca:     () => { return "It is in the mesh. You can take a look at the network in the Mesh Topology view which you can find in the " },
    It_is_in_the_mesh__You_can:    () => { return "It is in the mesh. You can take a look at the network in the Mesh Topology view which you can find in the " },
    To_find_the_Activity_Log_:     () => { return "To find the Activity Log, tap on the room, tap on the Crownstone icon and navigate to the right until you see it.\n\n" + "Switches triggered by Switchcraft won't show up in this overview. Keep in mind that Switchcraft is still experimental and it is not intended for normal use yet.\n\n" },
    Alternatively_you_can_sen:     () => { return "Alternatively you can send us an email at team@crownstone.rocks and we'll do our best to help you!" },
    Sometimes_the_background_:     () => { return "Sometimes the background processes don't work the way they should." },
    Its_very_possible_that_so:     () => { return "It's very possible that some of the behaviour has not been comminucated clearly :)." },
    I_think_it_should_react_d:     () => { return "I think it should react differently based on how I configured it." },
    It_switches_unexpectedly_:     () => { return "It switches unexpectedly." },
    It_does_not_work_if_the_a:     () => { return "It does not work if the app is not open" },
    Other___:                      () => { return "Other..." },
    The_app_says_Searching___:     () => { return "The app says 'Searching...'." },
    I_cant_get_it_to_switch_:      () => { return "I can't get it to switch." },
    It_is_not_in_the_mesh_:        () => { return "It is not in the mesh." },
    It_only_switches_when_Im_:     () => { return "It only switches when I'm nearby." },
    Its_behaviour_is_weird_:       () => { return "It's behaviour is weird." },
    Whats_wrong_with__:            () => { return "What's wrong with " + arguments[0] + "?" },
    You_can_ask_an_Admin_to_d:     () => { return "You can ask an Admin to disable Switchcraft for this Crownstone." },
    The_option_for_Switchcraf:     () => { return "The option for Switchcraft is hidden since you're not in the Alpha program. You can enable it in the developer menu, which is in the user profile.\n\nYou can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    The_option_for_Switchcraf_dev: () => { return "The option for Switchcraft is hidden since you're not in the alpha program. You can enable it in the developer menu.\n\nYou can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    You_can_disable_Switchcra:     () => { return "You can disable Switchcraft in the settings of the Crownstone. Navigate to the room, tap on the Crownstone, tap 'Edit' in the top right corner and disable SwitchCraft" },
    I_cant_hear_this_Crownsto2:    () => { return "I can't hear this Crownstone.." },
    If_theres_anything_else__:     () => { return "If there's anything else, please run the diagnostics again!" },
    In_that_case__its_probabl:     () => { return "In that case, it's probably your phone's Bluetooth. Tap the button below to resolve this!" },
    Could_you_try_moving_a_li:     () => { return "Could you try moving a little closer? Tap the button once you're a bit closer to this Crownstone." },
    I_couldnt_hear_any_messag:     () => { return "I couldn't hear any messages from that Crownstone, but I could before.." },
    Trying_to_switch____:          () => { return "Trying to switch " + arguments[0] + "..." },
    Rerun_the_diagnostic_once:     () => { return "Rerun the diagnostic once you're ready to let me try to switch this Crownstone." },
    Is_that_OK__Its_currently:     () => { return "Is that OK? It's currently " + (arguments[0] ? "on" : "off") + "and I'd like to turn it " + (arguments[0] ? 'off' : 'on') + "."},
    A_Crownstone_can_be_locke_noAdm: () => { return "A Crownstone can be locked to prevent it from switching. You'll need to ask an Admin in your Sphere to unlock it for you." },
    This_does_not_mean_your_d:     () => { return "This does not mean your device is broken. Tap on it's room and tap on the Crownstone. It will guide to to fixing the hardware error." },
    A_Crownstone_does_not_swi:     () => { return "A Crownstone does not switch back to 'Searching...' directly when you're out of range.\n\n" +
      "It could be that the app thinks the Crownstone is still in range while you're already too far away.\n\n" +
      "If a Crownstone is in range of another, they form a mesh network. This can help you to relay a command from a Crownstone in your range to another." },
    Youre_probably_out_of_ran:     () => { return "You're probably out of range when that happens." },
    It_can_happen_that_messag:     () => { return "It can happen that messages over the mesh network are lost if there is only one path between Crownstones." +
      "\n\nWe're working to improve this!" +
      "\n\nAlternatively, a Crownstone does not switch back to 'Searching...' directly when you're out of range. It could be that the app thinks the Crownstone is still in range while you're already too far away." },
    You_can_try_to_take_the_p:     () => { return "You can try to take the power off this Crownstone for a little while and see if it's fixed.\n\nIf this keeps happening, contact us at team@crownstone.rocks."},
    I_can_hear_this_Crownston2:    () => { return "I can hear this Crownstone beacon signal but not it's data." },
    It_is_not_on_Searching___:     () => { return "It is not on 'Searching...' now." },
    I_can_hear_the_Crownstone:     () => { return "I can hear the Crownstone's data but not it's beacon signal." },
    Since_I_cant_hear_this_Cr:     () => { return "Since I can't hear this Crownstone directly from where I am, some commands will go through the mesh and won't always be delivered. We're working to improve that!" },
    I_can_hear_the_Crown_mesh:     () => { return "I can hear the Crownstone via the mesh, it should not be 'Seaching...' anymore." },
    I_can_hear_the_directly:       () => { return "I can hear the Crownstone directly, it should not be 'Seaching...' anymore." },
    I_still_cant_hear_this_Cr:     () => { return "I still can't hear this Crownstone at all." },
    I_cant_hear_this_Crowns_atAll: () => { return "I can't hear this Crownstone at all..." },
    If_youre_sure_its_one_of_:     () => { return "If you're sure it's one of your Crownstones, you can try to factory reset it!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    The_nearest_Crownstone_is:     () => { return "The nearest Crownstone is not registered to your Sphere, and it's " + arguments[0] + " close!" },
    This_can_happen_when_some_noAdm: () => { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nYou will have to ask an admin to reset it for you." },
    The_nearest_Crownstone_be:     () => { return "The nearest Crownstone belongs to your Sphere but it has been removed from your database.\n\nIt's " + arguments[0] + " close by." },
    Something_went_wrong_duri:     () => { return "Something went wrong during the recover process.. You can try to factory reset it yourself!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    Run_the_diagnostic_again_:     () => { return "Run the diagnostic again when you're ready or factory reset the Crownstone yourself.\n\nGo to help in the " + arguments[0] + " and tap on 'I need to factory reset a Crownstone'." },
    You_can_try_to_factory_re:     () => { return "You can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    I_can_hear_a_Crownstone_w:     () => { return "I can hear a Crownstone with the same address as the one we're looking for, but it does not seem to belong to your Sphere." },
    Im_near_now_:                  () => { return "I'm near now!" },
  },
  ProblemWithLocalization:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithLocalization.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Checking_for_Beacons:          () => { return "Checking for Beacons" },
    Indoor_localization_is_ru:     () => { return "Indoor localization is running!" },
    You_can_see_your_face_on_:     () => { return "You can see your face on the room bubbles showing where the app thinks you are!" },
    There_are_not_enough_Crow:     () => { return "There are not enough Crownstones in range at the moment to do the indoor localization. We need at least 3." },
    Since_the_radio_field_is_:     () => { return "Since the radio field is radially symmetric, we require at least 3 Crownstones in range to determine where you are." },
    Indoor_localization_is_di:     () => { return "Indoor localization is disabled by you." },
    You_need_to_train_the_roo:     () => { return "You need to train the rooms before the localization can run." },
    You_can_do_this_by_tappin:     () => { return "You can do this by tapping on the location icon in the top right corner of the room and following the instructions." },
    Room_level_localization_i:     () => { return "Room level localization is only available if you have 4 or more Crownstones in your Sphere." },
    This_is_required_to_be_ab:     () => { return "This is required to be able to pinpoint you in a room. The more Crownstones you have, the better the localization will be!" },
    Indoor_localization_is_dis:    () => { return "Indoor localization is disabled by you." },
    When_indoor_localization_:     () => { return "When indoor localization at room-level is available, we do not use near/further away." },
    You_will_need_to_train_th:     () => { return "You will need to train the distance of what exactly is near. This differs from phone to phone so everyone using this will have to train it." },
    Tap_on_the_room__tap_on_t:     () => { return "Tap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. You can train the distance there." },
    Near_further_away_behavio:     () => { return "Near/further away behaviour has not been configured by you." },
    Near_further_away_is_conf:     () => { return "Near/further away is configured correctly on this Crownstone." },
    Tap_to_toggle_is_disabled:     () => { return "Tap-to-toggle is disabled." },
    Tap_to_toggle_is_not_conf:     () => { return "Tap-to-toggle is not configured yet!" },
    Tap_to_toggle_is_configur:     () => { return "Tap-to-toggle is configured correctly on this Crownstone." },
    Tap_to_toggle_is_disabled_:    () => { return "Tap-to-toggle is disabled on this Crownstone." },
    You_can_enable_it_by_tapp:     () => { return "You can enable it by tapping on the room, tapping on the Crownstone icon, tapping edit in the top right corner and enabling it there." },
    Tap_to_toggle_is_disabled_o:   () => { return "Tap-to-toggle is disabled on this Crownstone." },
    You_will_have_to_ask_an_a:     () => { return "You will have to ask an admin in your Sphere to enable this." },
    Press_the_button_to_conti:     () => { return "Press the button to continue, or close the diagnostic menu." },
    Continue:                      () => { return "Continue" },
    You_can_find_the_Activity:     () => { return "You can find the Activity Log in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    We_have_recently_added_an:     () => { return "We have recently added an Activity Log just for this!" },
    You_can_find_it_in_the_st:     () => { return "You can find it in the stone properties: tap on the room, tap on the Crownstone icon and navigate to the right until you see it." },
    This_is_currently_unavoid:     () => { return "This is currently unavoidable for the room events. However, the Sphere Exit event does work with multiple users." },
    We_are_working_on_new_beh:     () => { return "We are working on new behaviour that will combine the schedules and the behaviour to facilitate this!" },
    Only_turn_on_when_dark_wi:     () => { return "Only turn on when dark will only suppress the action the moment you enter a room or enter your Sphere." },
    Scroll_down_to_see_all_op:     () => { return "Scroll down to see all options." },
    Perhaps_the_Help_menu_can:     () => { return "Perhaps the Help menu can help you further." },
    Make_sure_the_Crownstones:     () => { return "Make sure the Crownstones are spread around the space evenly! If they're all side by side, it's very difficult to pinpoint you.\n\n" + "Alternatively you can try to retrain your rooms. You can do this by tapping on a room bubble in the overview, then tapping on the button in the top right corner.\n\n" + "Finally, we're working on brand new algorithms that will make this much more reliable! You'll get these as a free update when they're available!" },
    You_have_a_good_amount_of:     () => { return "You have a good amount of Crownstones! If you have a large area to cover, you'll need more Crownstones as well." },
    The_more_Crownstones_you_:     () => { return "The more Crownstones you have, the better the indoor localization will be." },
    Make_sure_the_Crownstones_:    () => { return "Make sure the Crownstones are spread around the space evenly! If they're all side by side, it's very difficult to pinpoint you.\n\n" + "Alternatively you can try to retrain your rooms. You can do this by tapping on a room bubble in the overview, then tapping on the button in the top right corner.\n\n" + "Finally, we're working on brand new algorithms that will make this much more reliable! You'll get these as a free update when they're available!" },
    Alternatively_you_can_sen:     () => { return "Alternatively you can send us an email at team@crownstone.rocks and we'll do our best to help you!" },
    Whats_wrong_with_the_Loca:     () => { return "What's wrong with the Localization?" },
    It_does_not_do_room_level:     () => { return "It does not do room-level localization." },
    Room_level_localization_is:    () => { return "Room-level localization is inaccurate." },
    Near_far_does_not_work_:       () => { return "Near/far does not work." },
    Tap_to_toggle_does_not_wo:     () => { return "Tap to toggle does not work." },
    Things_turn_off_while_Im_:     () => { return "Things turn off while I'm still there." },
    If_I_leave_the_room_but_s:     () => { return "If I leave the room but someone is still there, Crownstones still turn off." },
    Only_on_when_dark_does_no:     () => { return "'Only on when dark' does not turn on." },
    Other___:                      () => { return "Other..." },
    It_will_not_turn_on_at_a_:     () => { return "It will not turn on at a later time if you don't re-enter your room or Sphere.\n\nWe are working on new behaviour that will combine the schedules and the behaviour to facilitate this!" },
    We_have_recently_added_an2:    () => { return "We have recently added an Activity Log just for this! For room events, like room exit, I can't take multiple users into account yet.\n\nWe're working on this!" },
    I_cant_help_you_with_this:     () => { return "I can't help you with this." },
    Tap_to_toggle_does_not_wo2:    () => { return "Tap-to-toggle does not work on a device that can't toggle anything." },
    We_dont_generally_recomme:     () => { return "We don't generally recommend using tap-to-toggle on built-ins. Calibrating tap-to-toggle for built-ins can cause issues with tap-to-toggle on plugs." },
    If_its_not_working_as_you:     () => { return "If it's not working as you'd like, try recalibrating the distance.\n\nYou can do this in the in the " + (arguments[0] ? "Sidebar" : "settings menu") + " by tapping on 'Calibrate Tap-to-Toggle'."},
    You_can_enable_this_in_th:     () => { return "You can enable this in the in the " + (arguments[0] ? "Sidebar" : "settings menu") + " by tapping on 'Calibrate Tap-to-Toggle'."},
    You_can_enable_this_in_th2:    () => { return "You can enable this in the 'App Settings' which you can find in the" + (arguments[0] ? "Sidebar" : "settings menu") + "." },
    You_can_retrain_where_you:     () => { return "You can retrain where you want 'near' to be by editing the behaviour.\n\nTap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. You can train the distance there.\n\nKeep in mind, since human beings are essentially big sacks of water, if you sit between your phone and the Crownstone it will think it's further away than it really is!" },
    Tap_on_the_room__tap_on_t2:    () => { return "Tap on the room, tap on the Crownstone icon, navigate to the right and tap edit on the Behaviour menu. Tell me what you'd like me to do when you get near and move further away and train the distance." },
    This_is_a_design_choice__:     () => { return "This is a design choice, not a bug. We're working on smarter behaviour though, which will allow you to incorporate near/further away together with room-level localization." },
    Not_all_rooms_in_the_app_:     () => { return "Not all rooms in the app require Crownstones inside of them.\n\nAs long as you pick up a signal from at least 3 Crownstones in a room, it can be used for localization. Even if the Crownstones that send the signals are in other rooms." },
    You_need_to_have_at_least:     () => { return "You need to have at least 4 Crownstoens places in rooms. Take the ones that are 'Floating' and assign a room to them!" },
    __Apart_from_the_amount__:     () => { return "\n\nApart from the amount, the spread of Crownstones is important too!" },
    Even_thought_you_have_a_g:     () => { return "Even thought you have a good amount of Crownstones, if you have a large area to cover, you'll need more Crownstones as well.\n\nWhere you are right now, I can't see at least 3 Crownstones to do the indoor localization." },
    The_more_Crownstones_you_expl: () => { return "The more Crownstones you have, the better the indoor localization will be. If you have a large area to cover, you'll need more Crownstones as well.\n\nWhere you are right now, I can't see at least 3 Crownstones to do the indoor localization." },
  },
  ProblemWithNewCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithNewCrownstone.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Checking_nearest_Crownsto:     () => { return "Checking nearest Crownstone" },
    Looking_for_setup_Crownst:     () => { return "Looking for setup Crownstones" },
    In_order_to_check_what_ma:     () => { return "In order to check what may the the problem, your phone should be nearly touching this Crownstone and it should be powered on." },
    Press_the_button_below_on:     () => { return "Press the button below once everything is ready." },
    Ready_to_Test_:                () => { return "Ready to Test!" },
    The_nearest_Crownstone_is:     () => { return "The nearest Crownstone is in setup mode!" },
    The_nearest_Crownstone_is_:    () => { return "The nearest Crownstone is in setup mode! However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Cro:     () => { return "Only admins can setup Crownstones." },
    There_is_a_Crownstone_in_:     () => { return "There is a Crownstone in setup mode nearby!" },
    There_is_a_Crownstone_in_s:    () => { return "There is a Crownstone in setup mode nearby! However, you do not have any Spheres in which you are an admin." },
    Only_admins_can_setup_Crow:    () => { return "Only admins can setup Crownstones." },
    I_can_hear_a_Crownstone_n:     () => { return "I can hear a Crownstone near, but it does not seem to belong to your Sphere." },
    I_can_hear_a_Crownstone_ne:    () => { return "I can hear a Crownstone near , but it does not seem to belong to your Sphere." },
    _in_:                          () => { return " in '" + arguments[0] + "'" },
    Since_you_are_not_an_admi:     () => { return "Since you are not an admin in any Sphere, you cannot setup Crownstones.\n\nThis means you can't see them while they are in setup mode." },
    If_it_does_belong_to_you_:     () => { return "If it does belong to you, you can try to factory reset it.\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    Please_ensure_that_the_Cr:     () => { return "Please ensure that the Crownstone you're near is in fact a new one." },
    The_nearest_stone_I_can_f:     () => { return "The nearest stone I can find is " + arguments[0]},
    _with_device_:                 () => { return " with device '" },
    You_can_add_it_to_your_Sp:     () => { return "You can add it to your Sphere by going to the overview.\n\nTap the button below to go there now!" },
















  },
  ProblemWithOtherCrownstone:{
    __filename: "../js/views/settingsViews/diagnostics/ProblemWithOtherCrownstone.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
    Scanning_for_nearby_Crown:     () => { return "Scanning for nearby Crownstones" },
    If_you_think_this_is_the_:     () => { return "If you think this is the case here, go close to the Crownstone that has disappeared and press the button below." },
    Checking_for_nearby_Crown:     () => { return "Checking for nearby Crownstones..." },
    Crownstone_successfully_r:     () => { return "Crownstone successfully reset!" },
    It_will_be_in_setup_mode_:     () => { return "It will be in setup mode now. You can add it to your Sphere again from the Sphere overview.\n\nTap the button below to go there now." },
    Failed_to_reset_Crownston:     () => { return "Failed to reset Crownstone..." },
    Factory_resetting_your_lo:     () => { return "Factory resetting your lost Crownstone..." },
    This_can_happen_when_some:     () => { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nWould you like me to reset it?" },
    Something_went_wrong___:       () => { return "Something went wrong..." },
    Please_restart_the_diagno:     () => { return "Please restart the diagnostic and try again." },
    very:                          () => { return "very" },
    pretty:                        () => { return "pretty" },
    somewhat:                      () => { return "somewhat" },
    not_that:                      () => { return "not that" },
    If_this_is_not_the_one_yo:     () => { return "If this is not the one you were looking for, then take the power off it for a while and restart the diagnostic.\n\nIf this keeps happening, contact us at team@crownstone.rocks and we'll do our best to help!" },
    The_nearest_Crownstone_I_:     () => { return "The nearest Crownstone I can detect is " + arguments[0] + " and it's " + arguments[1] + " close!"},
    If_youre_sure_its_one_of_:     () => { return "If you're sure it's one of your Crownstones, you can try to factory reset it!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    The_nearest_Crownstone_is:     () => { return "The nearest Crownstone is not registered to your Sphere, and it's " + arguments[0] + " close!"},
    This_can_happen_when_some_noAdm: () => { return "This can happen when someone removed this Crownstone from your Sphere, but they did not factory reset it.\n\nYou will have to ask an admin to reset it for you." },
    The_nearest_Crownstone_be:     () => { return "The nearest Crownstone belongs to your Sphere but it has been removed from your database.\n\nIt's " + arguments[0] + " close by." },
    Something_went_wrong_duri:     () => { return "Something went wrong during the recover process.. You can try to factory reset it yourself!\n\nTap the button below to go to help and tap on 'I need to factory reset a Crownstone'." },
    If_this_keeps_happening__:     () => { return "If this keeps happening, contact us at team@crownstone.rocks and we'll do our best to help!" },
    I_cant_detect_any_Crownst:     () => { return "I can't detect any Crownstone nearby... You can try to take the power off it for a while and restart the diagnostic." },
    It_can_sometimes_happen_t:     () => { return "It can sometimes happen that a Crownstone that used to be in your Sphere is gone.\n\nThis does not mean it is 'Searching...' in the app. If that is what you're looking for, restart the diagnostics and select 'existing'." },
  },
  Register:{
    __filename: "../js/views/startupViews/Register.tsx",
    ACCOUNT_INFORMATION:           () => { return "ACCOUNT INFORMATION" },
    Email:                         () => { return "Email" },
    Password:                      () => { return "Password" },
    PROFILE_INFORMATION:           () => { return "PROFILE INFORMATION" },
    First_Name:                    () => { return "First Name" },
    Last_Name:                     () => { return "Last Name" },
    Picture:                       () => { return "Picture" },
    Your_picture_is_used_so_o:     () => { return "Your picture is used so other people can see your face when you\'re in a room." },
    Next:                          () => { return "Next" },
    Your_password_must_not_be:     () => { return "Your password must not be empty." },
    Passwords_do_not_match_:       () => { return "Passwords do not match." },
  },
  ReviewInitialTests:{
    __filename: "../js/views/settingsViews/diagnostics/ReviewInitialTests.tsx",
    Problem_in_database__:         () => { return "Problem in database.." },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_disabled___:       () => { return "Scanning is disabled..." },
    Receiving_Sphere_beacons:      () => { return "Receiving Sphere beacons" },
    Receiving_Crownstone_data:     () => { return "Receiving Crownstone data" },
  },
  RoomAdd:{
    __filename: "../js/views/roomViews/RoomAdd.tsx",
    Create:                        () => { return "Create" },
    NEW_ROOM:                      () => { return "NEW ROOM" },
    Room_Name:                     () => { return "Room Name" },
    Icon:                          () => { return "Icon" },
    Picture:                       () => { return "Picture" },
    ADD_CROWNSTONES_TO_ROOM:       () => { return "ADD CROWNSTONES TO ROOM" },
    You_can_select_floating_C:     () => { return "You can select floating Crownstones to immediately add them to this new room!" },
    CURRENTLY_MOVING_CROWNSTO:     () => { return "CURRENTLY MOVING CROWNSTONE" },
  },
  RoomEdit:{
    __filename: "../js/views/roomViews/RoomEdit.tsx",
    Save:                          () => { return "Save" },
    ROOM_SETTINGS:                 () => { return "ROOM SETTINGS" },
    Room_Name:                     () => { return "Room Name" },
    Icon:                          () => { return "Icon" },
    Picture:                       () => { return "Picture" },
    INDOOR_LOCALIZATION:           () => { return "INDOOR LOCALIZATION" },
    Retrain_Room:                  () => { return "Retrain Room" },
    If_the_indoor_localizatio:     () => { return "If the indoor localization seems off or when you have moved Crownstones around, " + "you can retrain this room so " + arguments[0] + " can find you again!" },
    Teach__to_find_you_:           () => { return "Teach " + arguments[0] + " to find you!" },
    Teach__to_identify_when_y:     () => { return "Teach " + arguments[0] + " to identify when you\'re in this room by walking around in it." },
    You_can_only_train_this_r:     () => { return "You can only train this room if you are in this Sphere." },
    Indoor_localization_on_ro:     () => { return "Indoor localization on room-level is only possible when you have 4 or more Crownstones registered and placed in rooms." },
    Enable_indoor_localizatio:     () => { return "Enable indoor localization in the app settings to be able to train this room." },
    Remove_Room:                   () => { return "Remove Room" },
    Removing_this_Room_will_m:     () => { return "Removing this Room will make all contained Crownstones floating." },
  },
  RoomExplanation:{
    __filename: "../js/views/components/RoomExplanation.tsx",
    Crownstones_in_setup_mode:     () => { return "Crownstones in setup mode have a blue icon." },
    No_Crownstones_found_:         () => { return "No Crownstones found." },
    To_add_a_Crownstones_to_y:     () => { return "To add a Crownstones to your sphere, hold your phone really close to a new one!" },
    Tap_here_to_see_all_Crown:     () => { return "Tap here to see all Crownstones without rooms!" },
    No_Crownstones_in_this_ro:     () => { return "No Crownstones in this room." },
  },
  RoomIconSelection:{
    __filename: "../js/views/roomViews/RoomIconSelection.tsx",
    Hallway:                       () => { return "Hallway" },
    Living_Room:                   () => { return "Living Room" },
    Kitchen:                       () => { return "Kitchen" },
    Bathroom:                      () => { return "Bathroom" },
    Office:                        () => { return "Office" },
    Bedroom:                       () => { return "Bedroom" },
    Garage:                        () => { return "Garage" },
    Play_Room:                     () => { return "Play Room" },
    Music_Room:                    () => { return "Music Room" },
    Nature___Outside:              () => { return "Nature / Outside" },
    Miscellaneous:                 () => { return "Miscellaneous" },
  },
  RoomOverview:{
    __filename: "../js/views/roomViews/RoomOverview.tsx",
    Floating:                      () => { return "Floating" },
    Edit:                          () => { return "Edit" },
    Train:                         () => { return "Train" },
  },
  RoomSelection:{
    __filename: "../js/views/roomViews/RoomSelection.tsx",
    ROOMS_IN_CURRENT_SPHERE:       () => { return "ROOMS IN CURRENT SPHERE" },
    Add_a_room:                    () => { return "Add a room" },
    DECOUPLE_THIS_CROWNSTONE:      () => { return "DECOUPLE THIS CROWNSTONE" },
    Not_in_a_specific_room:        () => { return "Not in a specific room" },
    If_you_do_not_add_the_Cro:     () => { return "If you do not add the Crownstone to a room, it can not be used for indoor localization purposes." },
  },
  SchedulerEntry:{
    __filename: "../js/views/components/SchedulerEntry.tsx",
    __disabled_:                   () => { return " (disabled)" },
  },
  SettingConstructor:{
    __filename: "../js/util/SettingConstructor.tsx",
    My_Account:                    () => { return "My Account" },
    My_AccountLabel:               () => { return "MY PROFILE" },
    Privacy:                       () => { return "Privacy" },
    PrivacyLabel:                  () => { return "You are in control of which data is shared with the cloud." },
    ConfigurationLabel:            () => { return "CONFIGURATION" },
    Mesh_Overview:                 () => { return "Mesh Overview" },
    App_Settings:                  () => { return "App Settings" },
    Calibrate_Tap_to_Toggle:       () => { return "Calibrate Tap-to-Toggle" },
    androidWhats_new_Whats_ne:     () => { return arguments[0] ? "What's new?" : "What's new in this version?" },
    TROUBLESHOOTING:                   () => { return "TROUBLESHOOTING" },
    Diagnostics:                   () => { return "Diagnostics" },
    Help:                          () => { return "Help" },
    Log_Out:                       () => { return "Log Out" },
  },
  SettingsApp:{
    __filename: "../js/views/settingsViews/SettingsApp.tsx",
    FEATURES:                      () => { return "FEATURES" },
    Use_Tap_To_Toggle:             () => { return "Use Tap To Toggle" },
    Tap_to_toggle_allows_you_:     () => { return "Tap to toggle allows you to hold your phone against a Crownstone to toggle it automatically!" },
    If_indoor_localization_is:     () => { return "If indoor localization is disabled, tap to toggle does only work when the app is on the screen." },
    BATTERY_USAGE:                 () => { return "BATTERY USAGE" },
    Use_Heartbeat:                 () => { return "Use Heartbeat" },
    The_heartbeat_is_part_of_:     () => { return "The heartbeat is part of the indoor localization process. Every now and then, the app will tell the Crownstones that you're still there." + "\n\nThis is used for the following behaviours:" + "\n  - Exit Sphere" + "\n  - Exit Room" + "\n\nIf you disable the heartbeat and another user is using it with the exit events, the Crownstones can turn off when that user leaves the house (according to their behaviour)." },
    The_heartbeat_is_part_of_t:    () => { return "The heartbeat is part of the indoor localization process. If indoor localization is disabled, the heartbeat will also be disabled." },
    Use_Indoor_localization:       () => { return "Use Indoor localization" },
    Indoor_localization_allow:     () => { return "Indoor localization allows the Crownstones to react to: " + "\n  - Enter/Exit Sphere" + "\n  - Enter/Exit Room" + "\n  - Your distance to the Crownstone (Near and Away) " + "\n  - Tap to Toggle" + "\n\nTo do this, the app has to run in the background. If you are in the Sphere, this can use more power than an average app." + "\n\nIf you do not wish to make use of any of the behaviours listed above, you can disable Indoor Localization and use the app as a remote control.\n\n" },
  },
  SettingsBleDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsBleDebug.tsx",
    Any:                           () => { return (arguments[0] ? arguments[1] : "Any") },
    You_have_to_be_in_a_spher:     () => { return "You have to be in a sphere in order to debug BLE" },
    Floating___:                   () => { return "Floating..." },
  },
  SettingsDeveloper:{
    __filename: "../js/views/settingsViews/SettingsDeveloper.tsx",
    LOGGING:                       () => { return "LOGGING" },
    Enable_Logging:                () => { return "Enable Logging" },
    Logging_will_keep_a_histo:     () => { return "Logging will keep a history of what the app is doing for the last 3 days." },
    Logging_Configuration:         () => { return "Logging Configuration" },
    Clear_Logs_:                   () => { return "Clear Logs!" },
    Logging_will_keep_a_histor:    () => { return "Logging will keep a history of what the app is doing for the last 3 days." },
    CLOUD:                         () => { return "CLOUD" },
    Sync_Now_:                     () => { return "Sync Now!" },
    Test_Notifications:            () => { return "Test Notifications" },
    DEBUG_VIEWS:                   () => { return "DEBUG VIEWS" },
    BLE_Debug:                     () => { return "BLE Debug" },
    Localization_Debug:            () => { return "Localization Debug" },
    ACTIVITY_LOGS:                 () => { return "ACTIVITY LOGS" },
    Show_Full_Activity_Log:        () => { return "Show Full Activity Log" },
    Show_only_own_activity:        () => { return "Show only own activity" },
    DO_NOT_USE:                    () => { return "DO NOT USE" },
    Use_Advertisement_RSSI:        () => { return "Use Advertisement RSSI" },
    By_default_we_use_iBeacon:     () => { return "By default we use iBeacon RSSI values since they are averaged. When enabled, we will ALSO use the RSSI values from advertisements. Advertisment RSSI values only come in in the foreground." },
    MESH:                          () => { return "MESH" },
    Change_Channels:               () => { return "Change Channels" },
    Show_RSSI_in_Topology:         () => { return "Show RSSI in Topology" },
    Reset_networks:                () => { return "Reset networks" },
    ALPHA_FEATURES_WILL_LOOK_:     () => { return "ALPHA FEATURES WILL LOOK LIKE THIS" },
    EXPERIMENTAL_FEATURES:         () => { return "EXPERIMENTAL FEATURES" },
    Join_Alpha_Program:            () => { return "Join Alpha Program" },
    This_will_give_you_early_:     () => { return "This will give you early access to new experimental features!" },
    RESET_DEVELOPER_STATE:         () => { return "RESET DEVELOPER STATE" },
    Disable_Developer_Mode:        () => { return "Disable Developer Mode" },
    CLOUD_URL__:                   () => { return "CLOUD URL: " + arguments[0] },
    Cancel:                        () => { return "Cancel" },
  },
  SettingsDiagnostics:{
    __filename: "../js/views/settingsViews/SettingsDiagnostics.tsx",
    Database_is_healthy:           () => { return "Database is healthy" },
    Scanning_is_enabled:           () => { return "Scanning is enabled" },
  },
  SettingsFAQ:{
    __filename: "../js/views/settingsViews/SettingsFAQ.tsx",
    Revert_to_Cloud_Data:          () => { return "Revert to Cloud Data" },
    Reset_Crownstone:              () => { return "Reset Crownstone" },
    Frequently_Asked_Question:     () => { return "Frequently Asked Questions\n\nHow do I ..." },
    ____add_a_Crownstone_:         () => { return "... add a Crownstone?" },
    ____add_someone_to_my_Sph:     () => { return "... add someone to my Sphere?" },
    ____create_a_room_:            () => { return "... create a room?" },
    ____move_a_Crownstone_to_:     () => { return "... move a Crownstone to a room?" },
    ____dim_with_my_Crownston:     () => { return "... dim with my Crownstone?" },
    ____use_indoor_localizati:     () => { return "... use indoor localization?" },
    ____use_schedules_:            () => { return "... use schedules?" },
    ____use_Switchcraft_:          () => { return "... use Switchcraft?" },
    What_to_do_if____:             () => { return "What to do if ..." },
    ____a_new_Crownstone_wont:     () => { return "... a new Crownstone won't show up." },
    ____a_Crownstone_is_on_Se:     () => { return "... a Crownstone is on 'Searching'." },
    ____I_want_to_have_a_clea:     () => { return "... I want to have a clean install." },
    ____my_Sphere_name_is_gon:     () => { return "... my Sphere name is gone and things are weird." },
    ____it_always_says_No_Cro:     () => { return "... it always says 'No Crownstones in Range'." },
    ____the_setup_process_fai:     () => { return "... the setup process fails." },
    ____a_Crownstone_toggles_:     () => { return "... a Crownstone toggles unexpectedly." },
    ____I_need_to_factory_res:     () => { return "... I need to factory reset a Crownstone." },
    Solve_most_BLE_issues:         () => { return "Solve most BLE issues" },
    BLE_Troubleshooting:           () => { return "BLE Troubleshooting" },
    More_help_is_available_on:     () => { return "More help is available on the website" },
    Help:                          () => { return "Help" },
    App_Store:                     () => { return "App Store" },
    Play_Store:                    () => { return "Play Store" },
    If_that_fails__quit_the_a:     () => { return "If that fails, quit the app (double tap home button and swipe it up to really close it).\n" },
    If_that_fails__quit_the_ap:    () => { return "If that fails, quit the app (Go to the side menu and select force quit).\n" },
    You_just_have_to_hold_it_:     () => { return "You just have to hold it close if the Crownstone is in setup mode:\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Hold the phone physically close to the Crownstone you want to add.\n- Select the blue bubble.\n- Tap the blue Crownstone icon to add it." },
    If_youre_an_Admin_or_Memb:     () => { return "If you're an Admin or Member you can invite people.\n\n- Go to the Settings -> Spheres\n- Select the Sphere you want to add people to.\n- Select 'Invite someone new'" },
    You_need_to_be_an_admin_o:     () => { return "You need to be an admin of the Sphere to add rooms.\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Tap the icon  with the + sign on it in the lower right corner.\n- Select add room." },
    Moving_the_Crownstone_is_:     () => { return "Moving the Crownstone is done in the Crownstone overview:\n\n- Go to the Sphere Overview\n  (with the room bubbles)\n- Tap the bubble containing your Crownstone.\n- Select the Crownstone you want to move.\n- Tap 'Located in' in the top right corner." },
    Make_sure_dimming_is_enab:     () => { return "Make sure dimming is enabled on the Crownstone:\n\n- Make sure you are an Admin.\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select the Crownstone you want to dim.\n- Tap 'Edit' in the top right corner.\n- Enable the Allow Dimming switch." },
    Indoor_localization_on_ro:     () => { return "Indoor localization on room level works when you have 4 or more Crownstones. If you have less than 4, you can use home enter/exit and near/far. You set these rules per Crownstone.\n\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a Crownstone.\n- Swipe the Crownstone overview left to go to the Behaviours.\n" },
    These_can_be_found_in_the:     () => { return "These can be found in the Crownstone overview.\n\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a Crownstone.\n- Swipe the Crownstone overview left twice to go to the Schedules.\n" },
    Switchcraft_is_currently_:     () => { return "Switchcraft is currently a beta feature. You can join the Beta program by enabling this in your Account settings.\n\n- Go to the Settings -> My Account\n- Enable 'Join Beta Program'.\n- Go to the Sphere Overview\n    (with the room bubbles)\n- Tap on a room.\n- Select a built-in Crownstone.\n- Tap 'Edit' in the top right corner.\n- Enable the 'Enable Switchcraft' switch.\n- Tap the question mark next to 'Enable Switchcraft' and follow the instructions to upgrade your wall switch.\n" },
    Make_sure_the_Crownstone_:     () => { return "Make sure the Crownstone is powered and that you're close to it. During setup mode the Crownstone is transmitting very quietly so other people can't claim your Crownstones!\n\nIf it still won't show up, you may want to try the factory reset procedure (see 'what to do if I need to factory reset a Crownstone' below)." },
    Ensure_there_is_power_on_:     () => { return "Ensure there is power on the Crownstone and that you can reach it.\n\nIf you're near (within a meter) and it is still on 'Searching' you may want to try the factory reset procedure (see 'what to do if I need to factory reset a Crownstone' below)." },
    Retry_a_few_times___If_th:     () => { return "Retry a few times.\n\nIf that fails, turn your bluetooth off and on.\n\n" + arguments[0] + "Check if there are updates available in the " + arguments[1] + ".\n\n" +
                                                  "Certain Android phones have issues with Bluetooth. If you have a different phone available, log in there with your account and use that phone to do the setup."},
    This_could_happen_due_to_:     () => { return "This could happen due to Tap-to-Toggle. If this is the case, you can retrain or disable it.\n\nRoom enter and room exit behaviour is currently not accounting for multiple users. We are working hard on much smarter behaviour that will solve this issue.\n\nSphere enter and sphere exit require you to be in range of the Crownstones as well as the app running in the background." },




















  },
  SettingsLogging:{
    __filename: "../js/views/settingsViews/dev/SettingsLogging.tsx",
    SET_LOGGING_LEVELS:            () => { return "SET LOGGING LEVELS" },
    General:                       () => { return "General" },
    Native:                        () => { return "Native" },
    Mesh:                          () => { return "Mesh" },
    Notifications:                 () => { return "Notifications" },
    Scheduler:                     () => { return "Scheduler" },
    BLE:                           () => { return "BLE" },
    Batch_C_Handler:               () => { return "Batch C Handler" },
    Events:                        () => { return "Events" },
    Store:                         () => { return "Store" },
    Cloud:                         () => { return "Cloud" },
    disabled:                      () => { return "disabled" },
    error:                         () => { return "error" },
    warning:                       () => { return "warning" },
    info:                          () => { return "info" },
    debug:                         () => { return "debug" },
    verbose:                       () => { return "verbose" },
    NATIVE_EXTENDED_LOGGING:       () => { return "NATIVE EXTENDED LOGGING" },
    Native_Extended_Logging:       () => { return "Native Extended Logging" },
    Basic_native_logging_is_a:     () => { return "Basic native logging is already enabled when logging is enabled in the developer menu." },
    DISABLE_LOGGING:               () => { return "DISABLE LOGGING" },
    Disable_Logging:               () => { return "Disable Logging" },
  },
  SettingsMeshDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsMeshDebug.tsx",
    Any:                           () => { return arguments[0] ? arguments[1] : "Any" },
    You_have_to_be_in_a_spher:     () => { return "You have to be in a sphere in order to debug Mesh" },
    You_have_to_be_in_a_sphere:    () => { return "You have to be in a sphere in order to debug Mesh" },
    VISIBLE_STONES:                () => { return "VISIBLE STONES" },
    ACTIONS:                       () => { return "ACTIONS" },
    Set_to_Channel___:             () => { return "Set to Channel 39" },
    Done:                          () => { return "Done" },
    Setting_Mesh_Channels_n_n:     () => { return "Setting Mesh Channels\n\n(" + arguments[0] + " out of " + arguments[1] + ")" },
    Floating___:                   () => { return "Floating..." },
  },
  SettingsMeshOverview:{
    __filename: "../js/views/settingsViews/SettingsMeshOverview.tsx",
    not_in_mesh:                      () => { return "Not in Mesh:" },
  },
  SettingsMeshTopology:{
    __filename: "../js/views/settingsViews/SettingsMeshTopology.tsx",
    Networks:                      () => { return "Networks" },
    Refreshing_Mesh_Topology_:     () => { return "Refreshing Mesh Topology\n\n(" + arguments[0] + " out of " + arguments[1] + ")" },
    Floating___:                   () => { return "Floating..." },
    cancel:                        () => { return "cancel" },
  },
  SettingsPrivacy:{
    __filename: "../js/views/settingsViews/SettingsPrivacy.tsx",
    You_can_choose_what_you_w:     () => { return "You can choose what you want to share with the cloud and what you prefer to keep on your phone.\n\n" + "If you have multiple users in a Sphere, sharing location is required to see them in the overview." },
    Share_location:                () => { return "Share location" },
    Show_the_other_people_in_:     () => { return "Show the other people in your Sphere in which room you are!" },
    Share_switch_state:            () => { return "Share switch state" },
    Show_the_other_people_in_y:    () => { return "Show the other people in your sphere if the Crownstone is on or off!" },
    Share_diagnostics:             () => { return "Share diagnostics" },
    Help_us_gather_statistics:     () => { return "Help us gather statistics on the health of your Crownstones!" },
    Share_acitvity_logs:           () => { return "Share acitvity logs" },
    Activity_logs_are_used_to:     () => { return "Activity logs are used to show you why a Crownstone is on or off. We make a coherent list per Crownstone using your localization events, manual switches and scheduled actions. If others in your Sphere choose not to share their activity logs, the inferred state might be wrong..." },
    Share_power_usage:             () => { return "Share power usage" },
    Upload_frequently:             () => { return "Upload frequently" },
    The_power_usage_data_coll:     () => { return "The power usage data collected by the app will be sent to the cloud every " + arguments[0] + " seconds. This might drain your battery faster." },
    The_power_usage_data_colle:    () => { return "The power usage data collected by the app will be sent to the cloud during sync every " + arguments[0] + " minutes." + "\n\nIf Upload frequently is enabled, it will upload every " + arguments[1] + " seconds. This might drain your battery faster." },
    If_sharing_power_usage_is:     () => { return "If sharing power usage is enabled, all updates in power usage gathered by the app will be sent to the cloud." },
    Share_phone_type_details:      () => { return "Share phone type details" },
    Help_us_improve_your_expe:     () => { return "Help us improve your experience by sharing what type of phone you have!" },
    Privacy_Policy:                () => { return "Privacy Policy" },
  },
  SettingsProfile:{
    __filename: "../js/views/settingsViews/SettingsProfile.tsx",
    First_Name:                    () => { return "First Name" },
    Last_Name:                     () => { return "Last Name" },
    Email:                         () => { return "Email" },
    Change_Password:               () => { return "Change Password" },
    Enable_Developer_Mode:         () => { return "Enable Developer Mode" },
    This_will_enable_certain_:     () => { return "This will enable certain features that are useful for developers. Only use if you know what you\'re doing." },
    Developer_Menu:                () => { return "Developer Menu" },
  },
  SettingsStoneBleDebug:{
    __filename: "../js/views/settingsViews/dev/SettingsStoneBleDebug.tsx",
    iBeacon_UUID___niBeacon_M:     () => { return "iBeacon UUID: " + arguments[0] + "\n" + "iBeacon Major: " + arguments[1] + "\n" + "iBeacon Minor: " + arguments[2] + "\n" },
    Latest_iBeacon_data_:          () => { return "Latest iBeacon data:" },
    Time_received__no_data:        () => { return "Time received: " + (arguments[0] ? arguments[1] : "no data") },
    Green_Background_means_ex:     () => { return "Green Background means external state." },
    Latest_Direct_Advertiseme:     () => { return "Latest Direct Advertisement data:" },
    Latest_Applied_Advertisem:     () => { return "Latest Applied Advertisement data:" },
  },
  SetupDeviceEntry:{
    __filename: "../js/views/components/deviceEntries/SetupDeviceEntry.tsx",
    Tap_here_to_add_it_to_thi:     () => { return "Tap here to add it to this Sphere!" },
  },
  SideBar:{
    __filename: "../js/views/components/sideMenu/SideBar.tsx",
    Setup_localization:            () => { return "Setup localization" },
    __New_Message__Messages:       () => { return arguments[0] ? "* New Message *" : "Messages" },
    Force_Quit:                    () => { return "Force Quit" },
  },
  SphereBehaviour:{
    __filename: "../js/views/main/editSubviews/SphereBehaviour.tsx",
    __Minutes:                     () => { return "5 Minutes" },
    ___Minutes:                    () => { return "30 Minutes" },
    SPHERE_EXIT_DELAY:             () => { return "SPHERE EXIT DELAY" },
    Delay:                         () => { return "Delay" },
    If_nobody_is_left_in_the_:     () => { return "If nobody is left in the sphere, the Crownstones that are configured to switch when you leave the sphere will do so after this delay." },
  },
  SphereCrownstoneOverview:{
    __filename: "../js/views/main/editSubviews/SphereCrownstoneOverview.tsx",
    There_are_no_Crownstones_:     () => { return "There are no Crownstones in this Sphere yet!" },
    This_is_an_overview_of_al:     () => { return "This is an overview of all your Crownstones. To access the settings of these Crownstones, go to their rooms and tap on them there." },
    Add_a_Crownstone:              () => { return "Add a Crownstone" },
    CROWNSTONES_IN_:               () => { return "CROWNSTONES IN " + arguments[0] },
  },
  SphereEdit:{
    __filename: "../js/views/main/SphereEdit.tsx",
    Syncing_with_the_Cloud___:     () => { return "Syncing with the Cloud..." },
    What_can_I_help_you_with_:     () => { return "What can I help you with?" },
    Create_Sphere:                 () => { return "Create Sphere" },
    A_Sphere_contains_your_Cr:     () => { return "A Sphere contains your Crownstones, Rooms and preferences. You can add others to your Sphere so they may also use your Crownstones!" },
    Rooms:                         () => { return "Rooms" },
    Crownstones:                   () => { return "Crownstones" },
    Users:                         () => { return "Users" },
    Behaviour:                     () => { return "Behaviour" },
    Integrations:                  () => { return "Integrations" },
    Settings:                      () => { return "Settings" },
  },
  SphereEditSettings:{
    __filename: "../js/views/main/editSubviews/SphereEditSettings.tsx",
    SPHERE_DETAILS:                () => { return "SPHERE DETAILS" },
    Name:                          () => { return "Name" },
    PERSONAL_ARTIFICIAL_INTEL:     () => { return "PERSONAL ARTIFICIAL INTELLIGENCE" },
    _will_do__very_best_help_:     () => { return arguments[0] + " will do " + arguments[1] + " very best help you!" },
    DANGER:                        () => { return "DANGER" },
    Leave_Sphere:                  () => { return "Leave Sphere" },
    Delete_Sphere:                 () => { return "Delete Sphere" },
    This_cannot_be_undone_:        () => { return "This cannot be undone!" },
    Please_try_again_later_:       () => { return "Please try again later." },
    You_are_the_owner_of_this:     () => { return "You are the owner of this Sphere. You cannot leave without transferring ownership to another user." },
  },
  SphereIntegrations:{
    __filename: "../js/views/main/editSubviews/SphereIntegrations.tsx",
    Here_you_can_integrate_wi:     () => { return "Here you can integrate with different services. We\'re hard at work to add more!" },
    Thermostats_:                  () => { return "Thermostats:" },
    Toon:                          () => { return "Toon" },
    Coming_Soon_:                  () => { return "Coming Soon:" },
    Philips_Hue:                   () => { return "Philips Hue" },
  },
  SphereInvitedUser:{
    __filename: "../js/views/main/editSubviews/SphereInvitedUser.tsx",
    INVITE_WAS_SENT_TO:            () => { return "INVITE WAS SENT TO" },
    MANAGE_INVITE:                 () => { return "MANAGE INVITE" },
    Resend_Invitation:             () => { return "Resend Invitation" },
    Revoke_Invite:                 () => { return "Revoke Invite" },
  },
  SphereOverview:{
    __filename: "../js/views/main/SphereOverview.tsx",
    Edit:                          () => { return "Edit" },
  },
  SphereRoomArranger:{
    __filename: "../js/views/main/editSubviews/SphereRoomArranger.tsx",
    Save:                          () => { return "Save" },
  },
  SphereRoomOverview:{
    __filename: "../js/views/main/editSubviews/SphereRoomOverview.tsx",
    Rearrange_Rooms_:              () => { return "Rearrange Rooms!" },
    CUSTOMIZE_LAYOUT:              () => { return "CUSTOMIZE LAYOUT" },
    ROOMS_IN_SPHERE:               () => { return "ROOMS IN SPHERE" },
    Add_a_room:                    () => { return "Add a room" },
  },
  SphereUser:{
    __filename: "../js/views/main/editSubviews/SphereUser.tsx",
    Member:                        () => { return "Member" },
    Guest:                         () => { return "Guest" },
    Admin:                         () => { return "Admin" },
    User:                          () => { return "User" },
    Email:                         () => { return "Email" },
    Access_Level:                  () => { return "Access Level" },
    REVOKE_PERMISSIONS:            () => { return "REVOKE PERMISSIONS" },
    Remove_from_Sphere:            () => { return "Remove from Sphere" },
  },
  SphereUserInvite:{
    __filename: "../js/views/main/editSubviews/SphereUserInvite.tsx",
    Email:                         () => { return "Email" },
    Admin:                         () => { return "Admin" },
    Member:                        () => { return "Member" },
    Guest:                         () => { return "Guest" },
    Access_Level:                  () => { return "Access Level" },
    Access_level:                  () => { return "Access level" },
    Members_can_configure_Cro:     () => { return "Members can configure Crownstones." },
    Guests_can_control_Crowns:     () => { return "Guests can control Crownstones and devices will remain on if they are the last one in the room." },
    Send_invitation_:              () => { return "Send invitation!" },
  },
  SphereUserOverview:{
    __filename: "../js/views/main/editSubviews/SphereUserOverview.tsx",
    ADMINS:                        () => { return "ADMINS" },
    Admins_can_add__configure:     () => { return "Admins can add, configure and remove Crownstones and Rooms." },
    MEMBERS:                       () => { return "MEMBERS" },
    Members_can_configure_Cro:     () => { return "Members can configure Crownstones." },
    GUESTS:                        () => { return "GUESTS" },
    Guests_can_control_Crowns:     () => { return "Guests can control Crownstones and devices will remain on if they are the last one in the room." },
    ADD_MORE_PEOPLE:               () => { return "ADD MORE PEOPLE" },
    Invite_someone_new_:           () => { return "Invite someone new!" },
    navigation:                    () => { return "navigation" },
  },
  Tabs: {
    Overview:                       () => { return "Overview" },
    Messages:                       () => { return "Messages" },
    Settings:                       () => { return "Settings" },
  },
  TapToToggleCalibration:{
    __filename: "../js/views/overlays/TapToToggleCalibration.tsx",
    Next:                          () => { return "Next" },
    Finish_:                       () => { return "Finish!" },
    OK:                            () => { return "OK" },
    Now_that_youve_added_a_Cr:     () => { return "Now that you've added a Crownstone, you can use tap-to-toggle!" },
    In_order_to_use_tap_to_to:     () => { return "In order to use tap-to-toggle, you need to help me a little." },
    Calibration:                   () => { return "Calibration" },
    To_start_calibrating_tap_:     () => { return "To start calibrating tap-to-toggle, hold your phone very close to a plug and press 'Start'." },
    The_new_distance_will_be_:     () => { return "The new distance will be used for all existing plugs." },
    Start:                         () => { return "Start" },
    Great_:                        () => { return "Great!" },
    Done_:                         () => { return "Done!" },
    The_new_distance_has_been:     () => { return "The new distance has been stored." },
    Once_you_press_Done_the_n:     () => { return "Once you press 'Done' the new distance will be used for tap-to-toggle." },
    Done:                          () => { return "Done" },
    Touch_your_phone_to_the_C:     () => { return "Touch your phone to the Crownstone to trigger tap-to-toggle!" },
    Tap_to_toggle_can_only_be:     () => { return "Tap-to-toggle can only be trained if you're in a Sphere." },
    You_can_calibrate_tap_to_:     () => { return "You can calibrate tap to toggle through the settings menu any time." },
    You_can_calibrate_tap_to_t:    () => { return "You can calibrate tap to toggle through the side menu any time." },
  },
  ToonAdd:{
    __filename: "../js/views/thirdParty/toon/ToonAdd.tsx",
    paste_code_ccc:                () => { return "paste code"},
  },
  ToonOverview:{
    __filename: "../js/views/thirdParty/toon/ToonOverview.tsx",
    Disconnect_from_Toon:          () => { return "Disconnect from Toon" },
    This_will_remove_the_Toon:     () => { return "This will remove the Toon integration for all users in your Sphere." },
  },
  ToonSettings:{
    __filename: "../js/views/thirdParty/toon/ToonSettings.tsx",
    Use_this_phone:                () => { return "Use this phone" },
    LAST_SCHEDULE_UPDATE__:        () => { return "LAST SCHEDULE UPDATE: " + arguments[0] },
    MANUAL_UPDATE:                 () => { return "MANUAL UPDATE" },
    Update_Schedule:               () => { return "Update Schedule" },
    We_automatically_update_t:     () => { return "We automatically update the Toon schedule once a day. You can use this to update manually." },
    Disconnect_from_Toon:          () => { return "Disconnect from Toon" },
    This_will_remove_the_Toon:     () => { return "This will remove the Toon integration for all users in your Sphere." },
  },
  UsbSummary:{
    __filename: "../js/views/deviceViews/elements/UsbSummary.tsx",
    Tap_here_to_move_me_:          () => { return "Tap here to move me!" },
    Not_in_room:                   () => { return "Not in room" },
    Located_in_:                   () => { return "Located in:" },
  },
}