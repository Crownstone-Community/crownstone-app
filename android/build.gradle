// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.10'
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 21
        compileSdkVersion = 28
        targetSdkVersion = 28
        supportLibVersion = "28.0.0"
        googlePlayServicesVersion = "16.1.0"
        googlePlayServicesVisionVersion = "17.0.2" // Used by camera module
        firebaseVersion = "17.3.4"
        playServicesVersion = "16.1.0"
        androidMapsUtilsVersion = "0.5+"
    }
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//def googlePlayServicesVersion = '11.8.0'

allprojects {
    repositories {
//        configurations.all {
//            resolutionStrategy {
//                force "com.google.android.gms:play-services-gcm:$googlePlayServicesVersion"
//                force "com.google.android.gms:play-services-base:$googlePlayServicesVersion"
//            }
//        }
        configurations.all {
            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.android.support' && !details.requested.name.contains('multidex') ) {
                    details.useVersion "${rootProject.ext.supportLibVersion}"
                }
            }
        }
        google()
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
//        maven {
//            // Android JSC is installed from npm
//            url("$rootDir/../node_modules/jsc-android/dist")
//        }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
                buildToolsVersion rootProject.ext.buildToolsVersion
            }
        }
    }
}

// From http://wix.github.io/react-native-navigation/#/docs/Installing
subprojects { subproject ->
    afterEvaluate {
        if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
            android {
                variantFilter { variant ->
                    def names = variant.flavors*.name
                    if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative56") || (names.contains("reactNative57") && !names.contains("reactNative57_5"))) {
                        setIgnore(true)
                    }
                }
            }
        }
    }
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '4.4'
//    distributionUrl = distributionUrl.replace("bin", "all")
//}
