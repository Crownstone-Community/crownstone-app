<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="rocks.crownstone.consumerapp"
	>

	<uses-permission android:name="android.permission.INTERNET" />
	<uses-permission android:name="android.permission.BLUETOOTH"/>
	<uses-permission android:name="android.permission.VIBRATE"/>
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
	<!--<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/> not required since 4.4 -->

	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>

	<!-- Camera module -->
	<uses-permission android:name="android.permission.CAMERA" />
	<uses-feature android:name="android.hardware.camera" />
	<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

	<!-- required for react-native-push-notification -->
	<uses-permission android:name="android.permission.WAKE_LOCK" />
	<permission
		android:name="${applicationId}.permission.C2D_MESSAGE"
		android:protectionLevel="signature" />
	<uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />

	<uses-sdk
		/>

	<application
		android:name=".MainApplication"
		android:label="@string/app_name"
		android:icon="@mipmap/ic_launcher"
		android:allowBackup="false"
		android:theme="@style/AppTheme"
		android:usesCleartextTraffic="true"
		android:largeHeap="true"
		android:requestLegacyExternalStorage="true"> <!-- Temp solution for image picker, see https://developer.android.com/training/data-storage/use-cases#opt-out-scoped-storage -->
		<activity
			android:name=".MainActivity"
			android:label="@string/app_name"
			android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
			android:launchMode="singleTask"
			android:screenOrientation="portrait"
			android:windowSoftInputMode="adjustPan">
			<!--android:windowSoftInputMode="adjustResize"-->
			<!--android:configChanges="keyboard|keyboardHidden"-->
			<!--android:configChanges="keyboard|keyboardHidden|orientation|screenSize"-->
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
			<intent-filter>
				<action android:name="rocks.crownstone.consumerapp.QUIT"/>
			</intent-filter>
		</activity>
		<activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
		<service
			android:name="rocks.crownstone.bluenet.BackgroundService"
			android:enabled="true"
			android:exported="false"
			android:label="@string/app_name" >
		</service>

		<!-- required for nordic dfu -->
		<service
			android:name="rocks.crownstone.consumerapp.DfuService"
			android:enabled="true"
			android:exported="false"
			android:label="Crownstone update" >
		</service>
		<activity android:name=".NotificationActivity"/>

		<!-- =========================================== -->
		<!-- required for react-native-push-notification -->
		<!-- =========================================== -->

		<meta-data  android:name="com.dieam.reactnativepushnotification.notification_channel_name"
			android:value="rocks.crownstone.consumerapp"/>
		<meta-data  android:name="com.dieam.reactnativepushnotification.notification_channel_description"
			android:value="Crownstone"/>
		<!-- Change the resource name to your App's accent color - or any other color you want -->
		<meta-data  android:name="com.dieam.reactnativepushnotification.notification_color"
			android:resource="@android:color/white"/>

		<!-- required for react-native-maps -->
		<meta-data android:name="com.google.android.geo.API_KEY"
			android:value="AIzaSyCeK-7-wFdqPsgn-eG7MV-7cH-7Y-HFPuI"/>

		<!-- Bugsnag -->
		<meta-data android:name="com.bugsnag.android.API_KEY"
			android:value="948eaede21917addd2315fde2a9c834d"/>

		<!-- < Only if you're using GCM or localNotificationSchedule() > -->
		<receiver
			android:name="com.google.android.gms.gcm.GcmReceiver"
			android:exported="true"
			android:permission="com.google.android.c2dm.permission.SEND" >
			<intent-filter>
				<action android:name="com.google.android.c2dm.intent.RECEIVE" />
				<category android:name="${applicationId}" />
			</intent-filter>
		</receiver>
		<!-- < Only if you're using GCM or localNotificationSchedule() > -->

		<receiver android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher" />
		<receiver android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver">
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
			</intent-filter>
		</receiver>
		<service android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationRegistrationService"/>

		<!-- < Only if you're using GCM or localNotificationSchedule() > -->
		<service
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerServiceGcm"
			android:exported="false" >
			<intent-filter>
				<action android:name="com.google.android.c2dm.intent.RECEIVE" />
			</intent-filter>
		</service>
		<!-- </ Only if you're using GCM or localNotificationSchedule() > -->

		<!-- < Else > -->
		<service
			android:name="com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService"
			android:exported="false" >
			<intent-filter>
				<action android:name="com.google.firebase.MESSAGING_EVENT" />
			</intent-filter>
		</service>
		<!-- </Else> -->

	</application>

</manifest>
